{"version":3,"sources":["assets\\frames\\net\\pomelo\\protocol.js"],"names":["exports","ByteArray","global","Protocol","PKG_HEAD_BYTES","MSG_FLAG_BYTES","MSG_ROUTE_CODE_BYTES","MSG_ID_MAX_BYTES","MSG_ROUTE_LEN_BYTES","MSG_ROUTE_CODE_MAX","MSG_COMPRESS_ROUTE_MASK","MSG_TYPE_MASK","Package","Message","TYPE_HANDSHAKE","TYPE_HANDSHAKE_ACK","TYPE_HEARTBEAT","TYPE_DATA","TYPE_KICK","TYPE_REQUEST","TYPE_NOTIFY","TYPE_RESPONSE","TYPE_PUSH","strencode","str","byteArray","length","offset","i","charCode","charCodeAt","codes","j","_buffer","copyArray","strdecode","buffer","bytes","array","end","push","String","fromCharCode","apply","encode","type","body","index","decode","rs","id","compressRoute","route","msg","idBytes","msgHasId","caculateMsgIdBytes","msgLen","msgHasRoute","Error","encodeMsgFlag","encodeMsgId","encodeMsgRoute","encodeMsgBody","bytesLen","byteLength","flag","m","parseInt","Math","pow","routeLen","bodyLen","dest","doffset","src","soffset","copy","len","tmp","next","floor","module","window","Buffer","Uint8Array"],"mappings":"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","sourceRoot":"/","sourcesContent":["(function (exports, ByteArray, global) {\r\n  var Protocol = exports;\r\n\r\n  var PKG_HEAD_BYTES = 4;\r\n  var MSG_FLAG_BYTES = 1;\r\n  var MSG_ROUTE_CODE_BYTES = 2;\r\n  var MSG_ID_MAX_BYTES = 5;\r\n  var MSG_ROUTE_LEN_BYTES = 1;\r\n\r\n  var MSG_ROUTE_CODE_MAX = 0xffff;\r\n\r\n  var MSG_COMPRESS_ROUTE_MASK = 0x1;\r\n  var MSG_TYPE_MASK = 0x7;\r\n\r\n  var Package = Protocol.Package = {};\r\n  var Message = Protocol.Message = {};\r\n\r\n  Package.TYPE_HANDSHAKE = 1;\r\n  Package.TYPE_HANDSHAKE_ACK = 2;\r\n  Package.TYPE_HEARTBEAT = 3;\r\n  Package.TYPE_DATA = 4;\r\n  Package.TYPE_KICK = 5;\r\n\r\n  Message.TYPE_REQUEST = 0;\r\n  Message.TYPE_NOTIFY = 1;\r\n  Message.TYPE_RESPONSE = 2;\r\n  Message.TYPE_PUSH = 3;\r\n\r\n  /**\r\n   * pomele client encode\r\n   * id message id;\r\n   * route message route\r\n   * msg message body\r\n   * socketio current support string\r\n   */\r\n  Protocol.strencode = function(str) {\r\n    var byteArray = new ByteArray(str.length * 3);\r\n    var offset = 0;\r\n    for(var i = 0; i < str.length; i++){\r\n      var charCode = str.charCodeAt(i);\r\n      var codes = null;\r\n      if(charCode <= 0x7f){\r\n        codes = [charCode];\r\n      }else if(charCode <= 0x7ff){\r\n        codes = [0xc0|(charCode>>6), 0x80|(charCode & 0x3f)];\r\n      }else{\r\n        codes = [0xe0|(charCode>>12), 0x80|((charCode & 0xfc0)>>6), 0x80|(charCode & 0x3f)];\r\n      }\r\n      for(var j = 0; j < codes.length; j++){\r\n        byteArray[offset] = codes[j];\r\n        ++offset;\r\n      }\r\n    }\r\n    var _buffer = new ByteArray(offset);\r\n    copyArray(_buffer, 0, byteArray, 0, offset);\r\n    return _buffer;\r\n  };\r\n\r\n  /**\r\n   * client decode\r\n   * msg String data\r\n   * return Message Object\r\n   */\r\n  Protocol.strdecode = function(buffer) {\r\n    var bytes = new ByteArray(buffer);\r\n    var array = [];\r\n    var offset = 0;\r\n    var charCode = 0;\r\n    var end = bytes.length;\r\n    while(offset < end){\r\n      if(bytes[offset] < 128){\r\n        charCode = bytes[offset];\r\n        offset += 1;\r\n      }else if(bytes[offset] < 224){\r\n        charCode = ((bytes[offset] & 0x3f)<<6) + (bytes[offset+1] & 0x3f);\r\n        offset += 2;\r\n      }else{\r\n        charCode = ((bytes[offset] & 0x0f)<<12) + ((bytes[offset+1] & 0x3f)<<6) + (bytes[offset+2] & 0x3f);\r\n        offset += 3;\r\n      }\r\n      array.push(charCode);\r\n    }\r\n    return String.fromCharCode.apply(null, array);\r\n  };\r\n\r\n  /**\r\n   * Package protocol encode.\r\n   *\r\n   * Pomelo package format:\r\n   * +------+-------------+------------------+\r\n   * | type | body length |       body       |\r\n   * +------+-------------+------------------+\r\n   *\r\n   * Head: 4bytes\r\n   *   0: package type,\r\n   *      1 - handshake,\r\n   *      2 - handshake ack,\r\n   *      3 - heartbeat,\r\n   *      4 - data\r\n   *      5 - kick\r\n   *   1 - 3: big-endian body length\r\n   * Body: body length bytes\r\n   *\r\n   * @param  {Number}    type   package type\r\n   * @param  {ByteArray} body   body content in bytes\r\n   * @return {ByteArray}        new byte array that contains encode result\r\n   */\r\n  Package.encode = function(type, body){\r\n    var length = body ? body.length : 0;\r\n    var buffer = new ByteArray(PKG_HEAD_BYTES + length);\r\n    var index = 0;\r\n    buffer[index++] = type & 0xff;\r\n    buffer[index++] = (length >> 16) & 0xff;\r\n    buffer[index++] = (length >> 8) & 0xff;\r\n    buffer[index++] = length & 0xff;\r\n    if(body) {\r\n      copyArray(buffer, index, body, 0, length);\r\n    }\r\n    return buffer;\r\n  };\r\n\r\n  /**\r\n   * Package protocol decode.\r\n   * See encode for package format.\r\n   *\r\n   * @param  {ByteArray} buffer byte array containing package content\r\n   * @return {Object}           {type: package type, buffer: body byte array}\r\n   */\r\n  Package.decode = function(buffer){\r\n    var offset = 0;\r\n    var bytes = new ByteArray(buffer);\r\n    var length = 0;\r\n    var rs = [];\r\n    while(offset < bytes.length) {\r\n      var type = bytes[offset++];\r\n      length = ((bytes[offset++]) << 16 | (bytes[offset++]) << 8 | bytes[offset++]) >>> 0;\r\n      var body = length ? new ByteArray(length) : null;\r\n      copyArray(body, 0, bytes, offset, length);\r\n      offset += length;\r\n      rs.push({'type': type, 'body': body});\r\n    }\r\n    return rs.length === 1 ? rs[0]: rs;\r\n  };\r\n\r\n  /**\r\n   * Message protocol encode.\r\n   *\r\n   * @param  {Number} id            message id\r\n   * @param  {Number} type          message type\r\n   * @param  {Number} compressRoute whether compress route\r\n   * @param  {Number|String} route  route code or route string\r\n   * @param  {Buffer} msg           message body bytes\r\n   * @return {Buffer}               encode result\r\n   */\r\n  Message.encode = function(id, type, compressRoute, route, msg){\r\n    // caculate message max length\r\n    var idBytes = msgHasId(type) ? caculateMsgIdBytes(id) : 0;\r\n    var msgLen = MSG_FLAG_BYTES + idBytes;\r\n\r\n    if(msgHasRoute(type)) {\r\n      if(compressRoute) {\r\n        if(typeof route !== 'number'){\r\n          throw new Error('error flag for number route!');\r\n        }\r\n        msgLen += MSG_ROUTE_CODE_BYTES;\r\n      } else {\r\n        msgLen += MSG_ROUTE_LEN_BYTES;\r\n        if(route) {\r\n          route = Protocol.strencode(route);\r\n          if(route.length>255) {\r\n            throw new Error('route maxlength is overflow');\r\n          }\r\n          msgLen += route.length;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(msg) {\r\n      msgLen += msg.length;\r\n    }\r\n\r\n    var buffer = new ByteArray(msgLen);\r\n    var offset = 0;\r\n\r\n    // add flag\r\n    offset = encodeMsgFlag(type, compressRoute, buffer, offset);\r\n\r\n    // add message id\r\n    if(msgHasId(type)) {\r\n      offset = encodeMsgId(id, buffer, offset);\r\n    }\r\n\r\n    // add route\r\n    if(msgHasRoute(type)) {\r\n      offset = encodeMsgRoute(compressRoute, route, buffer, offset);\r\n    }\r\n\r\n    // add body\r\n    if(msg) {\r\n      offset = encodeMsgBody(msg, buffer, offset);\r\n    }\r\n\r\n    return buffer;\r\n  };\r\n\r\n  /**\r\n   * Message protocol decode.\r\n   *\r\n   * @param  {Buffer|Uint8Array} buffer message bytes\r\n   * @return {Object}            message object\r\n   */\r\n  Message.decode = function(buffer) {\r\n    var bytes =  new ByteArray(buffer);\r\n    var bytesLen = bytes.length || bytes.byteLength;\r\n    var offset = 0;\r\n    var id = 0;\r\n    var route = null;\r\n\r\n    // parse flag\r\n    var flag = bytes[offset++];\r\n    var compressRoute = flag & MSG_COMPRESS_ROUTE_MASK;\r\n    var type = (flag >> 1) & MSG_TYPE_MASK;\r\n\r\n    // parse id\r\n    if(msgHasId(type)) {\r\n      var m = parseInt(bytes[offset]);\r\n      var i = 0;\r\n      do{\r\n        var m = parseInt(bytes[offset]);\r\n        id = id + ((m & 0x7f) * Math.pow(2,(7*i)));\r\n        offset++;\r\n        i++;\r\n      }while(m >= 128);\r\n    }\r\n\r\n    // parse route\r\n    if(msgHasRoute(type)) {\r\n      if(compressRoute) {\r\n        route = (bytes[offset++]) << 8 | bytes[offset++];\r\n      } else {\r\n        var routeLen = bytes[offset++];\r\n        if(routeLen) {\r\n          route = new ByteArray(routeLen);\r\n          copyArray(route, 0, bytes, offset, routeLen);\r\n          route = Protocol.strdecode(route);\r\n        } else {\r\n          route = '';\r\n        }\r\n        offset += routeLen;\r\n      }\r\n    }\r\n\r\n    // parse body\r\n    var bodyLen = bytesLen - offset;\r\n    var body = new ByteArray(bodyLen);\r\n\r\n    copyArray(body, 0, bytes, offset, bodyLen);\r\n\r\n    return {'id': id, 'type': type, 'compressRoute': compressRoute,\r\n            'route': route, 'body': body};\r\n  };\r\n\r\n  var copyArray = function(dest, doffset, src, soffset, length) {\r\n    if('function' === typeof src.copy) {\r\n      // Buffer\r\n      src.copy(dest, doffset, soffset, soffset + length);\r\n    } else {\r\n      // Uint8Array\r\n      for(var index=0; index<length; index++){\r\n        dest[doffset++] = src[soffset++];\r\n      }\r\n    }\r\n  };\r\n\r\n  var msgHasId = function(type) {\r\n    return type === Message.TYPE_REQUEST || type === Message.TYPE_RESPONSE;\r\n  };\r\n\r\n  var msgHasRoute = function(type) {\r\n    return type === Message.TYPE_REQUEST || type === Message.TYPE_NOTIFY ||\r\n           type === Message.TYPE_PUSH;\r\n  };\r\n\r\n  var caculateMsgIdBytes = function(id) {\r\n    var len = 0;\r\n    do {\r\n      len += 1;\r\n      id >>= 7;\r\n    } while(id > 0);\r\n    return len;\r\n  };\r\n\r\n  var encodeMsgFlag = function(type, compressRoute, buffer, offset) {\r\n    if(type !== Message.TYPE_REQUEST && type !== Message.TYPE_NOTIFY &&\r\n       type !== Message.TYPE_RESPONSE && type !== Message.TYPE_PUSH) {\r\n      throw new Error('unkonw message type: ' + type);\r\n    }\r\n\r\n    buffer[offset] = (type << 1) | (compressRoute ? 1 : 0);\r\n\r\n    return offset + MSG_FLAG_BYTES;\r\n  };\r\n\r\n  var encodeMsgId = function(id, buffer, offset) {\r\n    do{\r\n      var tmp = id % 128;\r\n      var next = Math.floor(id/128);\r\n\r\n      if(next !== 0){\r\n        tmp = tmp + 128;\r\n      }\r\n      buffer[offset++] = tmp;\r\n\r\n      id = next;\r\n    } while(id !== 0);\r\n\r\n    return offset;\r\n  };\r\n\r\n  var encodeMsgRoute = function(compressRoute, route, buffer, offset) {\r\n    if (compressRoute) {\r\n      if(route > MSG_ROUTE_CODE_MAX){\r\n        throw new Error('route number is overflow');\r\n      }\r\n\r\n      buffer[offset++] = (route >> 8) & 0xff;\r\n      buffer[offset++] = route & 0xff;\r\n    } else {\r\n      if(route) {\r\n        buffer[offset++] = route.length & 0xff;\r\n        copyArray(buffer, offset, route, 0, route.length);\r\n        offset += route.length;\r\n      } else {\r\n        buffer[offset++] = 0;\r\n      }\r\n    }\r\n\r\n    return offset;\r\n  };\r\n\r\n  var encodeMsgBody = function(msg, buffer, offset) {\r\n    copyArray(buffer, offset, msg, 0, msg.length);\r\n    return offset + msg.length;\r\n  };\r\n\r\n  module.exports = Protocol;\r\n  if(typeof(window) != \"undefined\") {\r\n    window.Protocol = Protocol;\r\n  }\r\n})(typeof(window)==\"undefined\" ? module.exports : {}, typeof(window)==\"undefined\" ? Buffer : Uint8Array, this);\r\n"]}