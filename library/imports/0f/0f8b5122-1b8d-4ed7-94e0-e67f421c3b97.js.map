{"version":3,"sources":["assets\\modules\\plaza\\script\\prefab\\room\\record\\rqznn\\rqznnRoomRound.js"],"names":["resultCardType","name","glGame","baseclass","extend","properties","gameData","cc","Node","gameContent","gameItem","atlas_poker","SpriteAtlas","onLoad","registerEvent","unRegisterEvent","OnDestroy","onClick","node","emitter","emit","initData","data","list","initRoomData","initRecordUI","getChildByName","getComponent","Label","string","summaryId","handNumber","gameName","totalRound","getFixNumber","score","color","rdata","removeAllChildren","userData","detail","length","i","instantiate","parent","active","nickname","masterUid","uid","logicId","Number","user","get","node_card","j","cards","cardName","getSixValue","String","Sprite","spriteFrame","_spriteFrames","cardType","cardRate","isBanker","dealerTimes","multiple","scoreOffset","logicNum","parseInt","str","toString","value","value1","div","isNaN","toFixed"],"mappings":"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","sourceRoot":"/","sourcesContent":["//根据原本的播放的帧动画来设定\r\nconst resultCardType = {\r\n    0: {\r\n        //1，没牛\r\n        name: \"无牛\",\r\n    },\r\n    1: {\r\n        name: \"牛丁\",\r\n    },\r\n    2: {\r\n        name: \"牛二\",\r\n    },\r\n    3: {\r\n        name: \"牛三\",\r\n    },\r\n    4: {\r\n        name: \"牛四\",\r\n    },\r\n    5: {\r\n        name: \"牛五\",\r\n    },\r\n    6: {\r\n        name: \"牛六\",\r\n    },\r\n    7: {\r\n        name: \"牛七\",\r\n    },\r\n    8: {\r\n        name: \"牛八\",\r\n    },\r\n    9: {\r\n        name: \"牛九\",\r\n    },\r\n    10: {\r\n        name: \"牛牛\",\r\n    },\r\n    //顺子牛\r\n    12: {\r\n        name: \"顺子牛\",\r\n    },\r\n    //同花牛\r\n    13: {\r\n        name: \"同花牛\",\r\n    },\r\n    //葫芦牛\r\n    14: {\r\n        name: \"葫芦牛\",\r\n    },\r\n    //炸弹牛\r\n    15: {\r\n        name: \"炸弹牛\",\r\n    },\r\n    //五花牛\r\n    17: {\r\n        name: \"五花牛\",\r\n    },\r\n    //五小牛\r\n    18: {\r\n        name: \"五小牛\",\r\n    },\r\n}\r\n\r\nglGame.baseclass.extend({\r\n    properties: {\r\n        gameData: cc.Node,\r\n        gameContent: cc.Node,\r\n        gameItem: cc.Node,\r\n        atlas_poker: cc.SpriteAtlas,    //卡牌图集\r\n    },\r\n    onLoad() {\r\n        this.registerEvent();\r\n    },\r\n\r\n    registerEvent() {\r\n    },\r\n    unRegisterEvent() {\r\n    },\r\n\r\n    OnDestroy() {\r\n        this.unRegisterEvent();\r\n    },\r\n\r\n    onClick(name, node) {\r\n        switch (name) {\r\n            case \"btn_return\": glGame.emitter.emit(\"openGameRecord\"); break;\r\n            default:\r\n                break\r\n        }\r\n    },\r\n\r\n    initData(data, list) {\r\n        this.initRoomData(data, list);\r\n        this.initRecordUI(data, list);\r\n    },\r\n\r\n    initRoomData(data, list) {\r\n        this.gameData.getChildByName(\"number\").getComponent(cc.Label).string = data.summaryId;\r\n        this.gameData.getChildByName(\"roundnum\").getComponent(cc.Label).string = list.handNumber;\r\n        this.gameData.getChildByName(\"game\").getComponent(cc.Label).string = data.gameName;\r\n        this.gameData.getChildByName(\"round\").getComponent(cc.Label).string = data.totalRound;\r\n        this.gameData.getChildByName(\"score\").getComponent(cc.Label).string = this.getFixNumber(data.score);\r\n        this.gameData.getChildByName(\"score\").color = data.score > 0 ? cc.color(0x48, 0xd4, 0xa8) : cc.color(0xf6, 0x8e, 0x1e);\r\n\r\n    },\r\n\r\n    //渲染牌局记录\r\n    initRecordUI(rdata, list) {\r\n        this.gameContent.removeAllChildren();\r\n        let userData = list.detail;\r\n        if (userData.length == 0) {\r\n            return;\r\n        }\r\n        for (let i = 0; i < userData.length; i++) {\r\n            let node = cc.instantiate(this.gameItem);\r\n            // node.getChildByName(\"bg\").active = i % 2 != 0;\r\n            node.parent = this.gameContent;\r\n            node.active = true;\r\n            let data = userData[i];\r\n\r\n            node.getChildByName(\"name\").getComponent(cc.Label).string = data.nickname;\r\n            node.getChildByName(\"img_fangzhu\").active = rdata.masterUid == data.uid;\r\n            node.getChildByName(\"id\").getComponent(cc.Label).string = data.logicId;\r\n            node.getChildByName(\"img_wu\").active = Number(data.uid) == glGame.user.get(\"userID\");\r\n\r\n            let node_card = node.getChildByName(\"poker\");\r\n            for (let j = 0; j < data.cards.length; j++) {\r\n                let cardName = `bull1_${this.getSixValue(data.cards[j])}`;\r\n                node_card.getChildByName(String(j)).getComponent(cc.Sprite).spriteFrame = this.atlas_poker._spriteFrames[cardName];\r\n            }\r\n\r\n            node.getChildByName(\"type\").getComponent(cc.Label).string = `${resultCardType[data.cardType].name}-${data.cardRate}倍`;\r\n            node.getChildByName(\"bet\").getComponent(cc.Label).string = data.isBanker ? `抢${data.dealerTimes}倍` : `下${data.multiple}倍`;\r\n            node.getChildByName(\"bet\").color = data.isBanker ? cc.color(0xf6, 0xd0, 0x1e) : cc.color(0x46, 0xbf, 0xff);\r\n            node.getChildByName(\"win\").getComponent(cc.Label).string = data.scoreOffset > 0 ? '赢' : '输';\r\n            node.getChildByName(\"win\").color = data.scoreOffset > 0 ? cc.color(0x48, 0xd4, 0xa8) : cc.color(0xf6, 0x8e, 0x1e);\r\n            node.getChildByName(\"score\").getComponent(cc.Label).string = this.getFixNumber(data.scoreOffset);\r\n            node.getChildByName(\"score\").color = data.scoreOffset > 0 ? cc.color(0x48, 0xd4, 0xa8) : cc.color(0xf6, 0x8e, 0x1e);\r\n        }\r\n    },\r\n\r\n    //获取牌的16进制值\r\n    getSixValue(logicNum) {\r\n        logicNum = parseInt(logicNum);\r\n        let str = logicNum < 14 ? \"0x0\" : \"0x\";\r\n        return str + logicNum.toString(16);\r\n    },\r\n\r\n    \r\n    getFixNumber(value) {\r\n        let value1 = Number(value).div(10);\r\n        value = Number(value).div(100);\r\n        if (isNaN(value)) return;\r\n        if (~~value === value) {\r\n            return value.toString();\r\n        } else if (~~value1 === value1) {\r\n            return value.toFixed(1);\r\n        } else {\r\n            return value.toFixed(2);\r\n        }\r\n    },\r\n\r\n});\r\n"]}