{"version":3,"sources":["assets\\frames\\model\\assetsmanager.js"],"names":["AssetsManager","resetData","registerEvent","assetsManager","prototype","g_instance","updateGameMax","assets_manager","update_list","isNeedUpdate","gameName","cc","sys","isNative","update_data","glGame","storage","getItem","hotUpdateURL","servercfg","getHotupdateVersionUrl","url","gamelistcfg","getGameVersion","then","data","version","setGameUpdate","gameUpdata","scene","getSceneNameByID","gameID","update_list_data","manifestUrl","isUpdating","isUpdate","update_list_length","Object","keys","length","emitter","emit","isActive","downloadGame","isStatus","m_assets","assets","process","console","log","m_gameName","str","tips","UPDATE","COMPLETED","format","room","getGameDictById","panel","showTip","gameUpdateEnd","verdata","setItem","destroy","update_list_keys","isBeingUpdate","key","isUpdateQueue","gameId","UPDATING","INUPDATEQUEUE","get","module","exports"],"mappings":";;;;;;AACA;;;;AAIA,IACIA,aAAa,GAAG,SAAhBA,aAAgB,GAAY;AACxB,OAAKC,SAAL;AACA,OAAKC,aAAL;AACH,CAJL;AAAA,IAKIC,aAAa,GAAGH,aAAa,CAACI,SALlC;AAAA,IAMIC,UAAU,GAAG,IANjB;;AAQAF,aAAa,CAACF,SAAd,GAA0B,YAAY;AAClC,OAAKK,aAAL,GAAqB,CAArB;AACA,OAAKC,cAAL,GAAsB,EAAtB;AACA,OAAKC,WAAL,GAAmB,EAAnB;AACH,CAJD;AAMA;;;;;;;AAKAL,aAAa,CAACD,aAAd,GAA8B,YAAY,CACtC;AACA;AACH,CAHD,EAKA;;;AACAC,aAAa,CAACM,YAAd,GAA6B,UAASC,QAAT,EAAmB;AAC5C,MAAI,CAACC,EAAE,CAACC,GAAH,CAAOC,QAAZ,EAAsB,OADsB,CACf;;AAC7B,MAAIC,WAAW,GAAGC,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuB,aAAvB,CAAlB;;AACA,MAAIH,WAAW,IAAIA,WAAW,CAACJ,QAAD,CAA9B,EAA0C;AAAC;AACvC,QAAIQ,YAAY,GAAGH,MAAM,CAACI,SAAP,CAAiBC,sBAAjB,EAAnB;AACA,QAAIC,GAAG,aAAMH,YAAN,SAAqBR,QAArB,cAAiCA,QAAjC,qBAAP;AACAK,IAAAA,MAAM,CAACO,WAAP,CAAmBC,cAAnB,CAAkCF,GAAlC,EAAuCG,IAAvC,CAA4C,UAAAC,IAAI,EAAI;AAChD,UAAIA,IAAI,CAACC,OAAL,KAAiBZ,WAAW,CAACJ,QAAD,CAAhC,EAA4C;AACxC;AACAK,QAAAA,MAAM,CAACO,WAAP,CAAmBK,aAAnB,CAAiCjB,QAAjC;AACH,OAHD,MAGO;AACH;AACAK,QAAAA,MAAM,CAACO,WAAP,CAAmBK,aAAnB,CAAiCjB,QAAjC,EAA2C,KAA3C;AACH;AACJ,KARD;AASH;AACJ,CAhBD,EAkBA;AACAP,aAAa,CAACyB,UAAd,GAA2B,UAASH,IAAT,EAAe;AACtC,MAAI,CAACd,EAAE,CAACC,GAAH,CAAOC,QAAZ,EAAsB;AACtB,MAAIH,QAAQ,GAAGK,MAAM,CAACc,KAAP,CAAaC,gBAAb,CAA8BL,IAAI,CAACM,MAAnC,CAAf;AAEA,MAAI,CAACrB,QAAD,IAAa,KAAKF,WAAL,CAAiBE,QAAjB,CAAjB,EAA6C;AAC7C,MAAIsB,gBAAgB,GAAG,EAAvB;AACAA,EAAAA,gBAAgB,CAACD,MAAjB,GAA0BN,IAAI,CAACM,MAA/B;AACAC,EAAAA,gBAAgB,CAACC,WAAjB,GAA+BR,IAAI,CAACQ,WAApC;AACAD,EAAAA,gBAAgB,CAACtB,QAAjB,GAA4BA,QAA5B;AACAsB,EAAAA,gBAAgB,CAACE,UAAjB,GAA8B,IAA9B;AACAF,EAAAA,gBAAgB,CAACG,QAAjB,GAA4B,IAA5B;AACA,OAAK3B,WAAL,CAAiBE,QAAjB,IAA6BsB,gBAA7B;AAEA,MAAII,kBAAkB,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAK9B,WAAjB,EAA8B+B,MAAvD;;AACA,MAAIH,kBAAkB,IAAIA,kBAAkB,GAAG,KAAK9B,aAApD,EAAmE;AAC/D;AACA,SAAKE,WAAL,CAAiBE,QAAjB,EAA2ByB,QAA3B,GAAsC,KAAtC;AACApB,IAAAA,MAAM,CAACyB,OAAP,CAAeC,IAAf,CAAoB,cAApB,EAAoC;AAAC/B,MAAAA,QAAQ,EAAEA,QAAX;AAAqBgC,MAAAA,QAAQ,EAAC;AAA9B,KAApC;AACA;AACH;;AAED,OAAKC,YAAL,CAAkBX,gBAAlB;AACH,CAzCD,EA2CA;;AACA7B,aAAa,CAACwC,YAAd,GAA6B,UAASlB,IAAT,EAAe;AAAA;;AACxC;AACAV,EAAAA,MAAM,CAACyB,OAAP,CAAeC,IAAf,CAAoB,cAApB,EAAoC;AAAC/B,IAAAA,QAAQ,EAACe,IAAI,CAACf,QAAf;AAAyBkC,IAAAA,QAAQ,EAAC,CAAlC;AAAqCF,IAAAA,QAAQ,EAAC;AAA9C,GAApC;AAEA,MAAIG,QAAQ,GAAG,IAAI9B,MAAM,CAAC+B,MAAX,CAAkB/B,MAAM,CAACc,KAAP,CAAaC,gBAAb,CAA8BL,IAAI,CAACM,MAAnC,CAAlB,EAA8DN,IAAI,CAACQ,WAAnE,EAAgF,UAACc,OAAD,EAAa;AACxG;AACAA,IAAAA,OAAO,GAAGA,OAAO,GAAGA,OAAH,GAAa,CAA9B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,OAA7B;AACAhC,IAAAA,MAAM,CAACyB,OAAP,CAAeC,IAAf,CAAoB,cAApB,EAAoC;AAAC/B,MAAAA,QAAQ,EAACe,IAAI,CAACf,QAAf;AAAyBkC,MAAAA,QAAQ,EAAC,CAAlC;AAAqCF,MAAAA,QAAQ,EAAC,IAA9C;AAAoDK,MAAAA,OAAO,EAACA;AAA5D,KAApC;AACH,GALc,EAKZ,YAAM;AACL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDxB,IAAI,CAACf,QAAzD;AACA,QAAIwC,UAAU,GAAGzB,IAAI,CAACf,QAAtB;AACA,QAAIyC,GAAG,GAAGpC,MAAM,CAACqC,IAAP,CAAYC,MAAZ,CAAmBC,SAAnB,CAA6BC,MAA7B,WAAuCxC,MAAM,CAACyC,IAAP,CAAYC,eAAZ,CAA4BhC,IAAI,CAACM,MAAjC,CAAvC,EAAV;AACAhB,IAAAA,MAAM,CAAC2C,KAAP,CAAaC,OAAb,CAAqBR,GAArB,EAAyB,CAAzB;AAEApC,IAAAA,MAAM,CAACyB,OAAP,CAAeC,IAAf,CAAoB,cAApB,EAAoC;AAAC/B,MAAAA,QAAQ,EAACwC,UAAV;AAAsBR,MAAAA,QAAQ,EAAC,KAA/B;AAAsCK,MAAAA,OAAO,EAAC;AAA9C,KAApC,EAPK,CASL;;AACAhC,IAAAA,MAAM,CAACO,WAAP,CAAmBK,aAAnB,CAAiCuB,UAAjC;;AAEA,IAAA,KAAI,CAACU,aAAL,CAAmBnC,IAAI,CAACf,QAAxB;;AAEA,QAAIQ,YAAY,GAAGH,MAAM,CAACI,SAAP,CAAiBC,sBAAjB,EAAnB;AACA,QAAIC,GAAG,aAAMH,YAAN,SAAqBgC,UAArB,cAAmCA,UAAnC,qBAAP;AACAnC,IAAAA,MAAM,CAACO,WAAP,CAAmBC,cAAnB,CAAkCF,GAAlC,EAAuCG,IAAvC,CAA4C,UAAAqC,OAAO,EAAI;AACnD,UAAIpC,IAAI,GAAGV,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuB,aAAvB,CAAX;;AACA,UAAIQ,IAAJ,EAAU;AACNA,QAAAA,IAAI,CAACyB,UAAD,CAAJ,GAAmBW,OAAO,CAACnC,OAA3B;AACH,OAFD,MAEO;AACHD,QAAAA,IAAI,GAAG,EAAP;AACAA,QAAAA,IAAI,CAACyB,UAAD,CAAJ,GAAmBW,OAAO,CAACnC,OAA3B;AACH;;AACDX,MAAAA,MAAM,CAACC,OAAP,CAAe8C,OAAf,CAAuB,aAAvB,EAAsCrC,IAAtC;AACH,KATD;AAUH,GA/Bc,EA+BZ,YAAM;AACL;AACAuB,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDxB,IAAI,CAACf,QAAzD;AACAK,IAAAA,MAAM,CAACyB,OAAP,CAAeC,IAAf,CAAoB,cAApB,EAAoC;AAAC/B,MAAAA,QAAQ,EAACe,IAAI,CAACf,QAAf;AAAyBgC,MAAAA,QAAQ,EAAC;AAAlC,KAApC;;AACA,IAAA,KAAI,CAACkB,aAAL,CAAmBnC,IAAI,CAACf,QAAxB;AACH,GApCc,CAAf;AAsCA,OAAKH,cAAL,CAAoBkB,IAAI,CAACf,QAAzB,IAAqCmC,QAArC;AACH,CA3CD,EA6CA;;;AACA1C,aAAa,CAACyD,aAAd,GAA8B,UAASlD,QAAT,EAAmB;AAC7C,OAAKH,cAAL,CAAoBG,QAApB,EAA8BqD,OAA9B;AACA,MAAIC,gBAAgB,GAAG3B,MAAM,CAACC,IAAP,CAAY,KAAK9B,WAAjB,CAAvB;AACA,MAAI4B,kBAAkB,GAAG4B,gBAAgB,CAACzB,MAA1C;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ,EAA4Db,kBAA5D;AAEA,MAAI,CAACA,kBAAD,IAAuBA,kBAAkB,IAAI,CAAjD,EAAoD,OANP,CAQ7C;;AACA,MAAIA,kBAAkB,GAAG,KAAK9B,aAA9B,EAA6C;AACzC,QAAImB,IAAI,GAAG,KAAKjB,WAAL,CAAiBwD,gBAAgB,CAAC,KAAK1D,aAAN,CAAjC,CAAX;AACAmB,IAAAA,IAAI,CAACU,QAAL,GAAgB,IAAhB;AACA,SAAKQ,YAAL,CAAkBlB,IAAlB;AACH,GAb4C,CAc7C;;;AACA,SAAO,KAAKjB,WAAL,CAAiBE,QAAjB,CAAP;AACH,CAhBD,EAkBA;;;AACAP,aAAa,CAAC8D,aAAd,GAA8B,UAAUvD,QAAV,EAAoB;AAC9C,MAAIyB,QAAQ,GAAG,IAAf;;AACA,OAAK,IAAI+B,GAAT,IAAgB,KAAK1D,WAArB,EAAkC;AAC9B,QAAI0D,GAAG,IAAIxD,QAAX,EAAqB;AACjB,UAAIe,IAAI,GAAG,KAAKjB,WAAL,CAAiB0D,GAAjB,CAAX;;AACA,UAAIzC,IAAI,CAACS,UAAL,IAAmBT,IAAI,CAACU,QAA5B,EAAsC;AAClCA,QAAAA,QAAQ,GAAG,IAAX;AACH,OAFD,MAEO;AACHA,QAAAA,QAAQ,GAAG,KAAX;AACH;AACJ;AACJ;;AACD,SAAOA,QAAP;AACH,CAbD,EAeA;;;AACAhC,aAAa,CAACgE,aAAd,GAA8B,UAAUC,MAAV,EAAkB;AAC5C,MAAIjC,QAAQ,GAAG,KAAf;AACA,MAAIzB,QAAQ,GAAGK,MAAM,CAACc,KAAP,CAAaC,gBAAb,CAA8BsC,MAA9B,CAAf,CAF4C,CAI5C;;AACA,OAAK,IAAIF,GAAT,IAAgB,KAAK1D,WAArB,EAAkC;AAC9B,QAAI0D,GAAG,IAAIxD,QAAX,EAAqB;AACjB,UAAIe,IAAI,GAAG,KAAKjB,WAAL,CAAiB0D,GAAjB,CAAX;;AACA,UAAIzC,IAAI,CAACS,UAAT,EAAqB;AACjB;AACAnB,QAAAA,MAAM,CAAC2C,KAAP,CAAaC,OAAb,CAAqB5C,MAAM,CAACqC,IAAP,CAAYC,MAAZ,CAAmBgB,QAAnB,CAA4Bd,MAA5B,WAAsCxC,MAAM,CAACyC,IAAP,CAAYC,eAAZ,CAA4BW,MAA5B,CAAtC,EAArB;AACH,OAHD,MAGO;AACHrD,QAAAA,MAAM,CAAC2C,KAAP,CAAaC,OAAb,CAAqB5C,MAAM,CAACqC,IAAP,CAAYC,MAAZ,CAAmBiB,aAAnB,CAAiCf,MAAjC,WAA2CxC,MAAM,CAACyC,IAAP,CAAYC,eAAZ,CAA4BW,MAA5B,CAA3C,EAArB;AACH;;AACDjC,MAAAA,QAAQ,GAAG,IAAX;AACH;AACJ;;AACD,SAAOA,QAAP;AACH,CAlBD,EAoBA;;;AACAhC,aAAa,CAACoE,GAAd,GAAoB,UAAUL,GAAV,EAAe;AAC/B,SAAO,KAAKA,GAAL,CAAP;AACH,CAFD;;AAIAM,MAAM,CAACC,OAAP,GAAiB,YAAY;AACzB,MAAI,CAACpE,UAAL,EAAiB;AACbA,IAAAA,UAAU,GAAG,IAAIL,aAAJ,EAAb;AACH;;AACD,SAAOK,UAAP;AACH,CALD","sourceRoot":"/","sourcesContent":["\r\n/**\r\n * 玩家模型\r\n * @constructor\r\n */\r\nlet\r\n    AssetsManager = function () {\r\n        this.resetData();\r\n        this.registerEvent();\r\n    },\r\n    assetsManager = AssetsManager.prototype,\r\n    g_instance = null;\r\n\r\nassetsManager.resetData = function () {\r\n    this.updateGameMax = 2;\r\n    this.assets_manager = {};\r\n    this.update_list = {};\r\n};\r\n\r\n/**\r\n * 注册事件监听\r\n * 数据模型的事件无需销毁\r\n * 理论上重启游戏后就不存在了\r\n */\r\nassetsManager.registerEvent = function () {\r\n    // glGame.emitter.on(\"loginSuccess\", this.loginSuccess, this);\r\n    // glGame.emitter.on(MESSAGE.USER.PHONE_VERIFICATION, this.clearAllPhoneInterval, this);\r\n};\r\n\r\n// 查找是否需要更新\r\nassetsManager.isNeedUpdate = function(gameName) {\r\n    if (!cc.sys.isNative) return;//真机才做校验\r\n    let update_data = glGame.storage.getItem('update_data');\r\n    if (update_data && update_data[gameName]) {//本地缓存有游戏在做校验\r\n        let hotUpdateURL = glGame.servercfg.getHotupdateVersionUrl();\r\n        let url = `${hotUpdateURL}${gameName}/${gameName}version.manifest`\r\n        glGame.gamelistcfg.getGameVersion(url).then(data => {\r\n            if (data.version === update_data[gameName]) {\r\n                // 不需要更新\r\n                glGame.gamelistcfg.setGameUpdate(gameName);\r\n            } else {\r\n                // 需要更新\r\n                glGame.gamelistcfg.setGameUpdate(gameName, false);\r\n            }\r\n        });\r\n    }\r\n},\r\n\r\n// 热更开启\r\nassetsManager.gameUpdata = function(data) {\r\n    if (!cc.sys.isNative) return;\r\n    let gameName = glGame.scene.getSceneNameByID(data.gameID);\r\n\r\n    if (!gameName || this.update_list[gameName]) return;\r\n    let update_list_data = {};\r\n    update_list_data.gameID = data.gameID;\r\n    update_list_data.manifestUrl = data.manifestUrl;\r\n    update_list_data.gameName = gameName;\r\n    update_list_data.isUpdating = true;\r\n    update_list_data.isUpdate = true;\r\n    this.update_list[gameName] = update_list_data;\r\n\r\n    let update_list_length = Object.keys(this.update_list).length;\r\n    if (update_list_length && update_list_length > this.updateGameMax) {\r\n        // 下载列表大于最大同时下载量的时候显示等待中\r\n        this.update_list[gameName].isUpdate = false;\r\n        glGame.emitter.emit(\"hotUIRefresh\", {gameName: gameName, isActive:true});\r\n        return;\r\n    }\r\n\r\n    this.downloadGame(update_list_data);\r\n};\r\n\r\n// 开始下载游戏\r\nassetsManager.downloadGame = function(data) {\r\n    // 切换到可以跟新的页面\r\n    glGame.emitter.emit(\"hotUIRefresh\", {gameName:data.gameName, isStatus:0, isActive:true});\r\n\r\n    let m_assets = new glGame.assets(glGame.scene.getSceneNameByID(data.gameID), data.manifestUrl, (process) => {\r\n        // 更新下载进度条\r\n        process = process ? process : 0;\r\n        console.log(\"需要发送事件，更新下载进度\", process);\r\n        glGame.emitter.emit(\"hotUIRefresh\", {gameName:data.gameName, isStatus:1, isActive:true, process:process});\r\n    }, () => {\r\n        // 成功回调\r\n        console.log(\"assetsManager==============下载完成 ===>\", data.gameName);\r\n        let m_gameName = data.gameName;\r\n        let str = glGame.tips.UPDATE.COMPLETED.format(`${glGame.room.getGameDictById(data.gameID)}`);\r\n        glGame.panel.showTip(str,2);\r\n        \r\n        glGame.emitter.emit(\"hotUIRefresh\", {gameName:m_gameName, isActive:false, process:100});\r\n\r\n        // 设置已更新的游戏\r\n        glGame.gamelistcfg.setGameUpdate(m_gameName);\r\n\r\n        this.gameUpdateEnd(data.gameName);\r\n\r\n        let hotUpdateURL = glGame.servercfg.getHotupdateVersionUrl();\r\n        let url = `${hotUpdateURL}${m_gameName}/${m_gameName}version.manifest`\r\n        glGame.gamelistcfg.getGameVersion(url).then(verdata => {\r\n            let data = glGame.storage.getItem('update_data');\r\n            if (data) {\r\n                data[m_gameName] = verdata.version;\r\n            } else {\r\n                data = {};\r\n                data[m_gameName] = verdata.version;\r\n            }\r\n            glGame.storage.setItem('update_data', data);\r\n        })\r\n    }, () => {\r\n        // 失败回调\r\n        console.log(\"assetsManager==============下载失败 ===>\", data.gameName);\r\n        glGame.emitter.emit(\"hotUIRefresh\", {gameName:data.gameName, isActive:false});\r\n        this.gameUpdateEnd(data.gameName);\r\n    });\r\n\r\n    this.assets_manager[data.gameName] = m_assets;\r\n};\r\n\r\n// 热更结束\r\nassetsManager.gameUpdateEnd = function(gameName) {\r\n    this.assets_manager[gameName].destroy();\r\n    let update_list_keys = Object.keys(this.update_list);\r\n    let update_list_length = update_list_keys.length; \r\n    console.log(\"热更结束, gameUpdateEnd ===> update_list_length:\", update_list_length);\r\n\r\n    if (!update_list_length || update_list_length == 0) return;\r\n\r\n    // 热更新下一个\r\n    if (update_list_length > this.updateGameMax) {\r\n        let data = this.update_list[update_list_keys[this.updateGameMax]]\r\n        data.isUpdate = true;\r\n        this.downloadGame(data);\r\n    }\r\n    // 删除已经跟新完成的数据\r\n    delete this.update_list[gameName];\r\n};\r\n\r\n// 检查当前是否有游戏正在跟新\r\nassetsManager.isBeingUpdate = function (gameName) {\r\n    let isUpdate = null;\r\n    for (let key in this.update_list) {\r\n        if (key == gameName) {\r\n            let data = this.update_list[key];\r\n            if (data.isUpdating && data.isUpdate) {\r\n                isUpdate = true;\r\n            } else {\r\n                isUpdate = false;\r\n            }\r\n        }\r\n    }\r\n    return isUpdate;\r\n}\r\n\r\n// 检查当前游戏是否已经在更新队列\r\nassetsManager.isUpdateQueue = function (gameId) {\r\n    let isUpdate = false;\r\n    let gameName = glGame.scene.getSceneNameByID(gameId);\r\n\r\n    // 查找更新列表里是否有游戏正在更新\r\n    for (let key in this.update_list) {\r\n        if (key == gameName) {\r\n            let data = this.update_list[key];\r\n            if (data.isUpdating) {\r\n                // 【%s(游戏名称)】正在更新中，请耐心等待...\r\n                glGame.panel.showTip(glGame.tips.UPDATE.UPDATING.format(`${glGame.room.getGameDictById(gameId)}`));\r\n            } else {\r\n                glGame.panel.showTip(glGame.tips.UPDATE.INUPDATEQUEUE.format(`${glGame.room.getGameDictById(gameId)}`));\r\n            }\r\n            isUpdate = true;\r\n        }\r\n    }\r\n    return isUpdate;\r\n}\r\n\r\n// 获取热更属性\r\nassetsManager.get = function (key) {\r\n    return this[key];\r\n};\r\n\r\nmodule.exports = function () {\r\n    if (!g_instance) {\r\n        g_instance = new AssetsManager();\r\n    }\r\n    return g_instance;\r\n};"]}