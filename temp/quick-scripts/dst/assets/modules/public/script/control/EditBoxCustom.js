
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/modules/public/script/control/EditBoxCustom.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3f972j1EE1CB7CoVi4srrbo', 'EditBoxCustom');
// modules/public/script/control/EditBoxCustom.js

"use strict";

var NORMALCY = 0;
var CHECKED = 1;
cc.Class({
  "extends": cc.Component,
  properties: {
    title: cc.String,
    placeholder: cc.String,
    editbox: cc.EditBox,
    placeholder_label: cc.Label,
    text_label: cc.Label,
    move_label: cc.Label,
    mask_node: cc.Node,
    frame_node: cc.Node,
    frame_spriter: cc.Sprite,
    bottom_spriter: cc.Sprite,
    bottom_pic: [cc.SpriteFrame],
    frame_pic: [cc.SpriteFrame]
  },
  onLoad: function onLoad() {
    var selfNode = this.node;

    this.node.getSelfFunc = function () {
      return selfNode.getComponent("EditBoxCustom");
    };

    this._topmovex = -(this.node.width / 2 - 75);
    this._topmovey = this.node.height / 2 + 5;
    this._topmaskmovex = this.editbox.node.getComponent(cc.Widget).left / 2;
    this._centermovex = -(this.node.width / 2 - 2);
    this._centermovey = 0;
    this._movetime = 0.05;
    this._tet_size = [1.15, 1]; //输入中，输入后    字体大小            

    this.mask_max = 20;
    this.move_label.string = this.title;
    this.placeholder_label.string = this.placeholder;
    this.move_label.node.x = this._centermovex;
    this.move_label.node.y = 0;
    this.mask_node.x = this._centermovex;
    this.mask_node.y = 0;
    this.mask_node.width = this.move_label.node.width + this.mask_max * 2;
    this.endedcall = 0;
    this.move_colos = [cc.color(0x93, 0xae, 0xdf), cc.color(0x32, 0x75, 0xE8)];
    this.bottom_spriter.spriteFrame = this.bottom_pic[NORMALCY];
    this.frame_spriter.spriteFrame = this.frame_pic[NORMALCY];
    this.move_label.node.color = this.move_colos[NORMALCY];
    this.text_label.node.scale = this._tet_size[NORMALCY];
  },
  onBegon: function onBegon() {
    if (this.editbox.string == "") {
      this.move_label.node.active = true;
      this.placeholder_label.string = "";
      this.mask_node.width = this.move_label.node.width + this.mask_max * 2;
      this.move_label.node.runAction(cc.moveTo(this._movetime, this._topmovex, this._topmovey));
      this.mask_node.runAction(cc.moveTo(this._movetime, this._topmovex - this.mask_max + this._topmaskmovex, this._topmovey));
      this.frame_node.runAction(cc.fadeIn(this._movetime));
    }

    this.bottom_spriter.spriteFrame = this.bottom_pic[CHECKED];
    this.frame_spriter.spriteFrame = this.frame_pic[CHECKED];
    this.move_label.node.color = this.move_colos[CHECKED];
    this.text_label.node.scale = this._tet_size[CHECKED];
  },
  onEnded: function onEnded() {
    var _this = this;

    if (this.editbox.string == "") {
      this.move_label.node.active = true;
      this.editbox.placeholder = "";
      this.move_label.node.runAction(cc.sequence(cc.moveTo(this._movetime, this._centermovex, this._centermovey), cc.callFunc(function () {
        _this.move_label.node.active = false;
        _this.placeholder_label.string = _this.placeholder;
      })));
      this.mask_node.runAction(cc.moveTo(this._movetime, this._centermovex, this._centermovey));
      this.frame_node.runAction(cc.fadeOut(this._movetime));
      this.bottom_spriter.spriteFrame = this.bottom_pic[NORMALCY];
    } else this.bottom_spriter.spriteFrame = this.bottom_pic[CHECKED];

    this.frame_spriter.spriteFrame = this.frame_pic[NORMALCY];
    this.move_label.node.color = this.move_colos[NORMALCY];
    this.text_label.node.scale = this._tet_size[NORMALCY];
    if (this.endedcall) this.endedcall();
  },
  setString: function setString(strContent) {
    var _this2 = this;

    if (strContent == "" && this.editbox.string == "") return;

    if (strContent == "" && this.editbox.string != "") {
      this.move_label.node.active = true;
      this.editbox.placeholder = "";
      this.move_label.node.runAction(cc.sequence(cc.moveTo(0, this._centermovex, this._centermovey), cc.callFunc(function () {
        _this2.move_label.node.active = false;
        _this2.placeholder_label.string = _this2.placeholder;
      })));
      this.mask_node.runAction(cc.moveTo(0, this._centermovex, this._centermovey));
      this.frame_node.runAction(cc.fadeOut(0));
    } else if (this.editbox.string == "" && strContent != "") {
      this.move_label.node.active = true;
      this.placeholder_label.string = "";
      this.mask_node.width = this.move_label.node.width + this.mask_max * 2;
      this.move_label.node.runAction(cc.moveTo(0, this._topmovex, this._topmovey));
      this.mask_node.runAction(cc.moveTo(0, this._topmovex - this.mask_max + this._topmaskmovex, this._topmovey));
      this.frame_node.runAction(cc.fadeIn(0));
    }

    this.editbox.string = strContent;
  },
  setPlaceholder: function setPlaceholder(placeholder) {
    if (placeholder == "") return;
    this.placeholder = placeholder;
    this.placeholder_label.string = this.placeholder;
  },
  onEndedCall: function onEndedCall(call) {
    this.endedcall = call;
  },
  update: function update(dt) {}
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,