
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/modules/plaza/script/prefab/enterRoom/jszjhentry.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd549fmtIfZDpJ9Ew8kIlrRN', 'jszjhentry');
// modules/plaza/script/prefab/enterRoom/jszjhentry.js

"use strict";

glGame.baseclass.extend({
  properties: {
    goldCount: cc.Label,
    selectNode: cc.Node,
    gameRule: cc.Prefab,
    gameRecord: cc.Prefab,
    BGM: {
      type: cc.AudioClip,
      "default": null
    }
  },
  onLoad: function onLoad() {
    this.gameid = 0;
    this.node.zIndex = 20;
    glGame.emitter.on(MESSAGE.UI.ROOM_ENTER_SHOW, this.RootNodeShow, this);
    glGame.emitter.on(MESSAGE.UI.ROOM_ENTER_HIDE, this.RootNodeHide, this);
    glGame.emitter.on("nodeRemove", this.click_back, this);
    glGame.emitter.on("updateUserData", this.updateuserInfo, this);
    this.registerEvent();
    this.reqEnterArea();
    this.updateuserInfo();
    this.playEnterAnimation();
  },
  // 播放入场动画
  playEnterAnimation: function playEnterAnimation() {
    for (var i = 1; i <= 4; i++) {
      var entryNode = this.selectNode.getChildByName("entry".concat(i));
      entryNode.opacity = 0;
      var originPos = entryNode.position;

      if (i % 2 == 1) {
        entryNode.x -= 300;
      } else {
        entryNode.x += 300;
      }

      var moveTo = cc.moveTo(0.3, originPos);
      var fadeIn = cc.fadeIn(0.1);
      moveTo.easing(cc.easeBackOut());
      entryNode.runAction(cc.spawn(moveTo, fadeIn));
    }
  },
  RootNodeShow: function RootNodeShow() {
    this.node.active = true;
    this.registerEvent();
    this.reqEnterArea();
  },
  RootNodeHide: function RootNodeHide() {
    this.node.active = false;
    this.unregisterEvent();
  },
  //事件监听
  registerEvent: function registerEvent() {
    glGame.emitter.on("onGameConfig", this.onGameConfig, this);
  },
  //事件销毁
  unregisterEvent: function unregisterEvent() {
    glGame.emitter.off("onGameConfig", this);
  },
  onGameConfig: function onGameConfig(msg) {
    this.gameConfig = msg;
    this.refreshUI();
  },
  reqEnterArea: function reqEnterArea() {
    this.gameID = glGame.scenetag.JSZJH;
    glGame.readyroom.reqEnterArea(glGame.scenetag.JSZJH);
  },
  refreshUI: function refreshUI() {
    this.node.active = true;
    var gameConfig = this.gameConfig;

    for (var i = 1; i <= 3; i++) {
      var entryNode = this.selectNode.getChildByName("entry".concat(i + 1));
      entryNode.getChildByName("dizhu_num").getComponent(cc.Label).string = "\u5E95\u6CE8\uFF1A".concat(this.getFloat(gameConfig[i].BaseChips));
      entryNode.getChildByName("zhunru_num").getComponent(cc.Label).string = "\u51C6\u5165\uFF1A".concat(this.getFloat(gameConfig[i].EntranceRestrictions));
    }
  },
  onClick: function onClick(name, node) {
    switch (name) {
      case "btn_back":
        this.click_back();
        break;

      case "btn_help":
        this.click_help();
        break;

      case "btn_record":
        this.click_record();
        break;

      case "mycoinInfo":
        this.click_addgold();
        break;

      case "headbg":
        this.click_userinfo();
        break;

      case "btn_chongzhi":
        this.click_addgold();
        break;

      case "entry1":
        this.enterGame(99);
        break;

      case "entry2":
        this.enterGame(1);
        break;

      case "entry3":
        this.enterGame(2);
        break;

      case "entry4":
        this.enterGame(3);
        break;

      default:
        console.error("no find button name -> %s", name);
    }
  },

  /**
   * 进入金币场房间
   * @param level 场次类型 1:普通房 2:贵宾房 3:富豪房 4:至尊房
   */
  enterGame: function enterGame(level) {
    var _this = this;

    glGame.room.reqMyGameState(this.gameID, level).then(function () {
      var gameID = _this.gameID;

      if (_this.gameConfig[level] == null) {
        glGame.panel.showMsgBox('提示', '该房间尚未开放，请尝试其他房间。');
        return;
      }

      if (glGame.user.isTourist()) {
        if (level != 99) {
          glGame.panel.showRegisteredGift(true);
          return;
        }
      }

      if (glGame.user.suspicious == 1 && glGame.user.game == 2 || glGame.user.is_game == 2) {
        glGame.panel.showDialog("", "您的账号数据异常，暂时禁止进入游戏，如有疑问，请联系客服！", function () {
          glGame.panel.showService();
        }, function () {}, "我知道了", "联系客服");
        return;
      }

      if (_this.gameConfig[level].EntranceRestrictions > glGame.user.get("coin")) {
        console.log("这是当前的房间限制", _this.gameConfig);
        var string = " <color=#99C7FF>\u60A8\u7684\u91D1\u5E01\u4E0D\u8DB3\uFF0C\u8BE5\u623F\u95F4\u9700\u8981</c> <color=#ff0000> ".concat(_this.getFloat(_this.gameConfig[level].EntranceRestrictions), "  </c><color=#99C7FF>\u91D1\u5E01\u624D\u53EF\u4E0B\u6CE8\uFF0C\u662F\u5426\u9A6C\u4E0A\u524D\u5F80\u5145\u503C\uFF1F</c>");
        glGame.panel.showDialog("", string, function () {
          glGame.panel.showShop(100);
        }, function () {}, "取消", "充值");
        return;
      }

      glGame.panel.showJuHua();

      _this.node.runAction(cc.sequence(cc.delayTime(15), cc.callFunc(function () {
        glGame.panel.closeJuHua();
      })));

      glGame.room.setGoldRoomInfo(gameID, level);
    });
  },

  /**
   * 检查玩家金币是否足够
   * @returns {boolean}
   */
  checkGold: function checkGold(coin, minCion) {
    if (parseInt(coin) < parseInt(minCion)) {
      glGame.panel.showDialog(glGame.i18n.t("USER.GOLDLACK.TITLE"), glGame.i18n.t("USER.GOLDLACK.CONTENT"), function () {
        glGame.panel.showPanelByName("shop");
      }, null);
      return false;
    }

    return true;
  },
  getFloat: function getFloat(value) {
    return Number(value).div(100).toString();
  },
  showUserInfo: function showUserInfo() {
    glGame.panel.showRemoteImage(this.Playerhead, glGame.user.get("headURL"));
  },
  updateuserInfo: function updateuserInfo() {
    var coin = glGame.user.get("coin");
    this.goldCount.string = glGame.user.cutFloat(coin);
  },
  setGameId: function setGameId(gameid) {
    this.gameid = gameid;
  },
  updateBgInfo: function updateBgInfo() {},
  click_userinfo: function click_userinfo() {
    glGame.panel.showPanelByName("userinfo");
  },
  click_addgold: function click_addgold() {
    glGame.panel.showShop(30);
  },
  click_back: function click_back() {
    glGame.readyroom.reqExitArea();
    this.remove();
  },
  click_help: function click_help() {
    var game_rule = glGame.panel.showPanel(this.gameRule);
    game_rule.zIndex = 30;
  },
  click_record: function click_record() {
    var game_record = glGame.panel.showPanel(this.gameRecord);
    game_record.zIndex = 30;
  },
  set: function set(key, value) {
    this[key] = value;
  },
  get: function get(key) {
    return this[key];
  },
  OnDestroy: function OnDestroy() {
    glGame.emitter.off(MESSAGE.UI.ROOM_ENTER_SHOW, this);
    glGame.emitter.off(MESSAGE.UI.ROOM_ENTER_HIDE, this);
    glGame.emitter.off("nodeRemove", this);
    glGame.emitter.off("updateUserData", this);
    this.unregisterEvent();
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcbW9kdWxlc1xccGxhemFcXHNjcmlwdFxccHJlZmFiXFxlbnRlclJvb21cXGpzempoZW50cnkuanMiXSwibmFtZXMiOlsiZ2xHYW1lIiwiYmFzZWNsYXNzIiwiZXh0ZW5kIiwicHJvcGVydGllcyIsImdvbGRDb3VudCIsImNjIiwiTGFiZWwiLCJzZWxlY3ROb2RlIiwiTm9kZSIsImdhbWVSdWxlIiwiUHJlZmFiIiwiZ2FtZVJlY29yZCIsIkJHTSIsInR5cGUiLCJBdWRpb0NsaXAiLCJvbkxvYWQiLCJnYW1laWQiLCJub2RlIiwiekluZGV4IiwiZW1pdHRlciIsIm9uIiwiTUVTU0FHRSIsIlVJIiwiUk9PTV9FTlRFUl9TSE9XIiwiUm9vdE5vZGVTaG93IiwiUk9PTV9FTlRFUl9ISURFIiwiUm9vdE5vZGVIaWRlIiwiY2xpY2tfYmFjayIsInVwZGF0ZXVzZXJJbmZvIiwicmVnaXN0ZXJFdmVudCIsInJlcUVudGVyQXJlYSIsInBsYXlFbnRlckFuaW1hdGlvbiIsImkiLCJlbnRyeU5vZGUiLCJnZXRDaGlsZEJ5TmFtZSIsIm9wYWNpdHkiLCJvcmlnaW5Qb3MiLCJwb3NpdGlvbiIsIngiLCJtb3ZlVG8iLCJmYWRlSW4iLCJlYXNpbmciLCJlYXNlQmFja091dCIsInJ1bkFjdGlvbiIsInNwYXduIiwiYWN0aXZlIiwidW5yZWdpc3RlckV2ZW50Iiwib25HYW1lQ29uZmlnIiwib2ZmIiwibXNnIiwiZ2FtZUNvbmZpZyIsInJlZnJlc2hVSSIsImdhbWVJRCIsInNjZW5ldGFnIiwiSlNaSkgiLCJyZWFkeXJvb20iLCJnZXRDb21wb25lbnQiLCJzdHJpbmciLCJnZXRGbG9hdCIsIkJhc2VDaGlwcyIsIkVudHJhbmNlUmVzdHJpY3Rpb25zIiwib25DbGljayIsIm5hbWUiLCJjbGlja19oZWxwIiwiY2xpY2tfcmVjb3JkIiwiY2xpY2tfYWRkZ29sZCIsImNsaWNrX3VzZXJpbmZvIiwiZW50ZXJHYW1lIiwiY29uc29sZSIsImVycm9yIiwibGV2ZWwiLCJyb29tIiwicmVxTXlHYW1lU3RhdGUiLCJ0aGVuIiwicGFuZWwiLCJzaG93TXNnQm94IiwidXNlciIsImlzVG91cmlzdCIsInNob3dSZWdpc3RlcmVkR2lmdCIsInN1c3BpY2lvdXMiLCJnYW1lIiwiaXNfZ2FtZSIsInNob3dEaWFsb2ciLCJzaG93U2VydmljZSIsImdldCIsImxvZyIsInNob3dTaG9wIiwic2hvd0p1SHVhIiwic2VxdWVuY2UiLCJkZWxheVRpbWUiLCJjYWxsRnVuYyIsImNsb3NlSnVIdWEiLCJzZXRHb2xkUm9vbUluZm8iLCJjaGVja0dvbGQiLCJjb2luIiwibWluQ2lvbiIsInBhcnNlSW50IiwiaTE4biIsInQiLCJzaG93UGFuZWxCeU5hbWUiLCJ2YWx1ZSIsIk51bWJlciIsImRpdiIsInRvU3RyaW5nIiwic2hvd1VzZXJJbmZvIiwic2hvd1JlbW90ZUltYWdlIiwiUGxheWVyaGVhZCIsImN1dEZsb2F0Iiwic2V0R2FtZUlkIiwidXBkYXRlQmdJbmZvIiwicmVxRXhpdEFyZWEiLCJyZW1vdmUiLCJnYW1lX3J1bGUiLCJzaG93UGFuZWwiLCJnYW1lX3JlY29yZCIsInNldCIsImtleSIsIk9uRGVzdHJveSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQUEsTUFBTSxDQUFDQyxTQUFQLENBQWlCQyxNQUFqQixDQUF3QjtBQUVwQkMsRUFBQUEsVUFBVSxFQUFFO0FBQ1JDLElBQUFBLFNBQVMsRUFBRUMsRUFBRSxDQUFDQyxLQUROO0FBRVJDLElBQUFBLFVBQVUsRUFBRUYsRUFBRSxDQUFDRyxJQUZQO0FBR1JDLElBQUFBLFFBQVEsRUFBRUosRUFBRSxDQUFDSyxNQUhMO0FBSVJDLElBQUFBLFVBQVUsRUFBRU4sRUFBRSxDQUFDSyxNQUpQO0FBS1JFLElBQUFBLEdBQUcsRUFBRTtBQUNEQyxNQUFBQSxJQUFJLEVBQUVSLEVBQUUsQ0FBQ1MsU0FEUjtBQUVELGlCQUFTO0FBRlI7QUFMRyxHQUZRO0FBYXBCQyxFQUFBQSxNQWJvQixvQkFhWDtBQUNMLFNBQUtDLE1BQUwsR0FBYyxD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Q0FBbEI7QUFDQXVHLElBQUFBLFdBQVcsQ0FBQ2hHLE1BQVosR0FBcUIsRUFBckI7QUFDSCxHQXpNbUI7QUEyTXBCaUcsRUFBQUEsR0EzTW9CLGVBMk1oQkMsR0EzTWdCLEVBMk1YaEIsS0EzTVcsRUEyTUo7QUFDWixTQUFLZ0IsR0FBTCxJQUFZaEIsS0FBWjtBQUNILEdBN01tQjtBQStNcEJoQixFQUFBQSxHQS9Nb0IsZUErTWhCZ0MsR0EvTWdCLEVBK01YO0FBQ0wsV0FBTyxLQUFLQSxHQUFMLENBQVA7QUFDSCxHQWpObUI7QUFtTnBCQyxFQUFBQSxTQW5Ob0IsdUJBbU5SO0FBQ1JySCxJQUFBQSxNQUFNLENBQUNtQixPQUFQLENBQWU2QixHQUFmLENBQW1CM0IsT0FBTyxDQUFDQyxFQUFSLENBQVdDLGVBQTlCLEVBQStDLElBQS9DO0FBQ0F2QixJQUFBQSxNQUFNLENBQUNtQixPQUFQLENBQWU2QixHQUFmLENBQW1CM0IsT0FBTyxDQUFDQyxFQUFSLENBQVdHLGVBQTlCLEVBQStDLElBQS9DO0FBQ0F6QixJQUFBQSxNQUFNLENBQUNtQixPQUFQLENBQWU2QixHQUFmLENBQW1CLFlBQW5CLEVBQWlDLElBQWpDO0FBQ0FoRCxJQUFBQSxNQUFNLENBQUNtQixPQUFQLENBQWU2QixHQUFmLENBQW1CLGdCQUFuQixFQUFxQyxJQUFyQztBQUNBLFNBQUtGLGVBQUw7QUFDSDtBQXpObUIsQ0FBeEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImdsR2FtZS5iYXNlY2xhc3MuZXh0ZW5kKHtcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgZ29sZENvdW50OiBjYy5MYWJlbCxcclxuICAgICAgICBzZWxlY3ROb2RlOiBjYy5Ob2RlLFxyXG4gICAgICAgIGdhbWVSdWxlOiBjYy5QcmVmYWIsXHJcbiAgICAgICAgZ2FtZVJlY29yZDogY2MuUHJlZmFiLFxyXG4gICAgICAgIEJHTToge1xyXG4gICAgICAgICAgICB0eXBlOiBjYy5BdWRpb0NsaXAsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IG51bGwsXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcblxyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgICAgIHRoaXMuZ2FtZWlkID0gMDtcclxuICAgICAgICB0aGlzLm5vZGUuekluZGV4ID0gMjA7XHJcbiAgICAgICAgZ2xHYW1lLmVtaXR0ZXIub24oTUVTU0FHRS5VSS5ST09NX0VOVEVSX1NIT1csIHRoaXMuUm9vdE5vZGVTaG93LCB0aGlzKTtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vbihNRVNTQUdFLlVJLlJPT01fRU5URVJfSElERSwgdGhpcy5Sb290Tm9kZUhpZGUsIHRoaXMpO1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9uKFwibm9kZVJlbW92ZVwiLCB0aGlzLmNsaWNrX2JhY2ssIHRoaXMpO1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9uKFwidXBkYXRlVXNlckRhdGFcIiwgdGhpcy51cGRhdGV1c2VySW5mbywgdGhpcyk7XHJcbiAgICAgICAgdGhpcy5yZWdpc3RlckV2ZW50KCk7XHJcbiAgICAgICAgdGhpcy5yZXFFbnRlckFyZWEoKTtcclxuICAgICAgICB0aGlzLnVwZGF0ZXVzZXJJbmZvKCk7XHJcbiAgICAgICAgdGhpcy5wbGF5RW50ZXJBbmltYXRpb24oKTtcclxuICAgIH0sXHJcblxyXG4gICAgLy8g5pKt5pS+5YWl5Zy65Yqo55S7XHJcbiAgICBwbGF5RW50ZXJBbmltYXRpb24oKSB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gNDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBlbnRyeU5vZGUgPSB0aGlzLnNlbGVjdE5vZGUuZ2V0Q2hpbGRCeU5hbWUoYGVudHJ5JHtpfWApO1xyXG4gICAgICAgICAgICBlbnRyeU5vZGUub3BhY2l0eSA9IDA7XHJcbiAgICAgICAgICAgIGxldCBvcmlnaW5Qb3MgPSBlbnRyeU5vZGUucG9zaXRpb247XHJcbiAgICAgICAgICAgIGlmIChpICUgMiA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICBlbnRyeU5vZGUueCAtPSAzMDA7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBlbnRyeU5vZGUueCArPSAzMDA7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGxldCBtb3ZlVG8gPSBjYy5tb3ZlVG8oMC4zLCBvcmlnaW5Qb3MpO1xyXG4gICAgICAgICAgICBsZXQgZmFkZUluID0gY2MuZmFkZUluKDAuMSk7XHJcbiAgICAgICAgICAgIG1vdmVUby5lYXNpbmcoY2MuZWFzZUJhY2tPdXQoKSk7XHJcbiAgICAgICAgICAgIGVudHJ5Tm9kZS5ydW5BY3Rpb24oY2Muc3Bhd24obW92ZVRvLCBmYWRlSW4pKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIFJvb3ROb2RlU2hvdygpIHtcclxuICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnJlZ2lzdGVyRXZlbnQoKTtcclxuICAgICAgICB0aGlzLnJlcUVudGVyQXJlYSgpO1xyXG4gICAgfSxcclxuXHJcbiAgICBSb290Tm9kZUhpZGUoKSB7XHJcbiAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMudW5yZWdpc3RlckV2ZW50KCk7XHJcbiAgICB9LFxyXG5cclxuICAgIC8v5LqL5Lu255uR5ZCsXHJcbiAgICByZWdpc3RlckV2ZW50KCkge1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9uKFwib25HYW1lQ29uZmlnXCIsIHRoaXMub25HYW1lQ29uZmlnLCB0aGlzKTtcclxuICAgIH0sXHJcblxyXG4gICAgLy/kuovku7bplIDmr4FcclxuICAgIHVucmVnaXN0ZXJFdmVudCgpIHtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vZmYoXCJvbkdhbWVDb25maWdcIiwgdGhpcyk7XHJcbiAgICB9LFxyXG5cclxuICAgIG9uR2FtZUNvbmZpZyhtc2cpIHtcclxuICAgICAgICB0aGlzLmdhbWVDb25maWcgPSBtc2c7XHJcbiAgICAgICAgdGhpcy5yZWZyZXNoVUkoKTtcclxuICAgIH0sXHJcblxyXG4gICAgcmVxRW50ZXJBcmVhKCkge1xyXG4gICAgICAgIHRoaXMuZ2FtZUlEID0gZ2xHYW1lLnNjZW5ldGFnLkpTWkpIO1xyXG4gICAgICAgIGdsR2FtZS5yZWFkeXJvb20ucmVxRW50ZXJBcmVhKGdsR2FtZS5zY2VuZXRhZy5KU1pKSCk7XHJcbiAgICB9LFxyXG5cclxuICAgIHJlZnJlc2hVSSgpIHtcclxuICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICBsZXQgZ2FtZUNvbmZpZyA9IHRoaXMuZ2FtZUNvbmZpZztcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gMzsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBlbnRyeU5vZGUgPSB0aGlzLnNlbGVjdE5vZGUuZ2V0Q2hpbGRCeU5hbWUoYGVudHJ5JHtpICsgMX1gKTtcclxuICAgICAgICAgICAgZW50cnlOb2RlLmdldENoaWxkQnlOYW1lKFwiZGl6aHVfbnVtXCIpLmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gYOW6leazqO+8miR7dGhpcy5nZXRGbG9hdChnYW1lQ29uZmlnW2ldLkJhc2VDaGlwcyl9YDtcclxuICAgICAgICAgICAgZW50cnlOb2RlLmdldENoaWxkQnlOYW1lKFwiemh1bnJ1X251bVwiKS5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IGDlh4blhaXvvJoke3RoaXMuZ2V0RmxvYXQoZ2FtZUNvbmZpZ1tpXS5FbnRyYW5jZVJlc3RyaWN0aW9ucyl9YDtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG5cclxuICAgIG9uQ2xpY2sobmFtZSwgbm9kZSkge1xyXG4gICAgICAgIHN3aXRjaCAobmFtZSkge1xyXG4gICAgICAgICAgICBjYXNlIFwiYnRuX2JhY2tcIjogdGhpcy5jbGlja19iYWNrKCk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiYnRuX2hlbHBcIjogdGhpcy5jbGlja19oZWxwKCk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiYnRuX3JlY29yZFwiOiB0aGlzLmNsaWNrX3JlY29yZCgpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIm15Y29pbkluZm9cIjogdGhpcy5jbGlja19hZGRnb2xkKCk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiaGVhZGJnXCI6IHRoaXMuY2xpY2tfdXNlcmluZm8oKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJidG5fY2hvbmd6aGlcIjogdGhpcy5jbGlja19hZGRnb2xkKCk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiZW50cnkxXCI6IHRoaXMuZW50ZXJHYW1lKDk5KTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJlbnRyeTJcIjogdGhpcy5lbnRlckdhbWUoMSk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiZW50cnkzXCI6IHRoaXMuZW50ZXJHYW1lKDIpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImVudHJ5NFwiOiB0aGlzLmVudGVyR2FtZSgzKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IGNvbnNvbGUuZXJyb3IoXCJubyBmaW5kIGJ1dHRvbiBuYW1lIC0+ICVzXCIsIG5hbWUpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDov5vlhaXph5HluIHlnLrmiL/pl7RcclxuICAgICAqIEBwYXJhbSBsZXZlbCDlnLrmrKHnsbvlnosgMTrmma7pgJrmiL8gMjrotLXlrr7miL8gMzrlr4zosarmiL8gNDroh7PlsIrmiL9cclxuICAgICAqL1xyXG4gICAgZW50ZXJHYW1lKGxldmVsKSB7XHJcbiAgICAgICAgZ2xHYW1lLnJvb20ucmVxTXlHYW1lU3RhdGUodGhpcy5nYW1lSUQsIGxldmVsKS50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgbGV0IGdhbWVJRCA9IHRoaXMuZ2FtZUlEO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5nYW1lQ29uZmlnW2xldmVsXSA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICBnbEdhbWUucGFuZWwuc2hvd01zZ0JveCgn5o+Q56S6JywgJ+ivpeaIv+mXtOWwmuacquW8gOaUvu+8jOivt+WwneivleWFtuS7luaIv+mXtOOAgicpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoZ2xHYW1lLnVzZXIuaXNUb3VyaXN0KCkpIHtcclxuICAgICAgICAgICAgICAgIGlmIChsZXZlbCAhPSA5OSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGdsR2FtZS5wYW5lbC5zaG93UmVnaXN0ZXJlZEdpZnQodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoKGdsR2FtZS51c2VyLnN1c3BpY2lvdXMgPT0gMSAmJiBnbEdhbWUudXNlci5nYW1lID09IDIpIHx8IGdsR2FtZS51c2VyLmlzX2dhbWUgPT0gMikge1xyXG4gICAgICAgICAgICAgICAgZ2xHYW1lLnBhbmVsLnNob3dEaWFsb2coXCJcIiwgXCLmgqjnmoTotKblj7fmlbDmja7lvILluLjvvIzmmoLml7bnpoHmraLov5vlhaXmuLjmiI/vvIzlpoLmnInnlpHpl67vvIzor7fogZTns7vlrqLmnI3vvIFcIiwgKCkgPT4geyBnbEdhbWUucGFuZWwuc2hvd1NlcnZpY2UoKSB9LCAoKSA9PiB7IH0sIFwi5oiR55+l6YGT5LqGXCIsIFwi6IGU57O75a6i5pyNXCIpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0aGlzLmdhbWVDb25maWdbbGV2ZWxdLkVudHJhbmNlUmVzdHJpY3Rpb25zID4gZ2xHYW1lLnVzZXIuZ2V0KFwiY29pblwiKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLov5nmmK/lvZPliY3nmoTmiL/pl7TpmZDliLZcIiwgdGhpcy5nYW1lQ29uZmlnKVxyXG4gICAgICAgICAgICAgICAgbGV0IHN0cmluZyA9IGAgPGNvbG9yPSM5OUM3RkY+5oKo55qE6YeR5biB5LiN6Laz77yM6K+l5oi/6Ze06ZyA6KaBPC9jPiA8Y29sb3I9I2ZmMDAwMD4gJHt0aGlzLmdldEZsb2F0KHRoaXMuZ2FtZUNvbmZpZ1tsZXZlbF0uRW50cmFuY2VSZXN0cmljdGlvbnMpfSAgPC9jPjxjb2xvcj0jOTlDN0ZGPumHkeW4geaJjeWPr+S4i+azqO+8jOaYr+WQpumprOS4iuWJjeW+gOWFheWAvO+8nzwvYz5gXHJcbiAgICAgICAgICAgICAgICBnbEdhbWUucGFuZWwuc2hvd0RpYWxvZyhcIlwiLCBzdHJpbmcsICgpID0+IHsgZ2xHYW1lLnBhbmVsLnNob3dTaG9wKDEwMCkgfSwgKCkgPT4geyB9LCBcIuWPlua2iFwiLCBcIuWFheWAvFwiKTtcclxuICAgICAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBnbEdhbWUucGFuZWwuc2hvd0p1SHVhKCk7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoXHJcbiAgICAgICAgICAgICAgICBjYy5kZWxheVRpbWUoMTUpLFxyXG4gICAgICAgICAgICAgICAgY2MuY2FsbEZ1bmMoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGdsR2FtZS5wYW5lbC5jbG9zZUp1SHVhKCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICApKVxyXG5cclxuICAgICAgICAgICAgZ2xHYW1lLnJvb20uc2V0R29sZFJvb21JbmZvKGdhbWVJRCwgbGV2ZWwpO1xyXG4gICAgICAgIH0pXHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5qOA5p+l546p5a626YeR5biB5piv5ZCm6Laz5aSfXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gICAgY2hlY2tHb2xkKGNvaW4sIG1pbkNpb24pIHtcclxuICAgICAgICBpZiAocGFyc2VJbnQoY29pbikgPCBwYXJzZUludChtaW5DaW9uKSkge1xyXG4gICAgICAgICAgICBnbEdhbWUucGFuZWwuc2hvd0RpYWxvZyhnbEdhbWUuaTE4bi50KFwiVVNFUi5HT0xETEFDSy5USVRMRVwiKSwgZ2xHYW1lLmkxOG4udChcIlVTRVIuR09MRExBQ0suQ09OVEVOVFwiKSwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgZ2xHYW1lLnBhbmVsLnNob3dQYW5lbEJ5TmFtZShcInNob3BcIik7XHJcbiAgICAgICAgICAgIH0sIG51bGwpO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfSxcclxuXHJcbiAgICBnZXRGbG9hdCh2YWx1ZSkge1xyXG4gICAgICAgIHJldHVybiAoTnVtYmVyKHZhbHVlKS5kaXYoMTAwKSkudG9TdHJpbmcoKTtcclxuICAgIH0sXHJcblxyXG4gICAgc2hvd1VzZXJJbmZvKCkge1xyXG4gICAgICAgIGdsR2FtZS5wYW5lbC5zaG93UmVtb3RlSW1hZ2UodGhpcy5QbGF5ZXJoZWFkLCBnbEdhbWUudXNlci5nZXQoXCJoZWFkVVJMXCIpKTtcclxuICAgIH0sXHJcblxyXG4gICAgdXBkYXRldXNlckluZm8oKSB7XHJcbiAgICAgICAgbGV0IGNvaW4gPSBnbEdhbWUudXNlci5nZXQoXCJjb2luXCIpXHJcbiAgICAgICAgdGhpcy5nb2xkQ291bnQuc3RyaW5nID0gZ2xHYW1lLnVzZXIuY3V0RmxvYXQoY29pbik7XHJcbiAgICB9LFxyXG5cclxuICAgIHNldEdhbWVJZChnYW1laWQpIHtcclxuICAgICAgICB0aGlzLmdhbWVpZCA9IGdhbWVpZDtcclxuICAgIH0sXHJcblxyXG4gICAgdXBkYXRlQmdJbmZvKCkge1xyXG4gICAgfSxcclxuXHJcbiAgICBjbGlja191c2VyaW5mbygpIHtcclxuICAgICAgICBnbEdhbWUucGFuZWwuc2hvd1BhbmVsQnlOYW1lKFwidXNlcmluZm9cIik7XHJcbiAgICB9LFxyXG5cclxuICAgIGNsaWNrX2FkZGdvbGQoKSB7XHJcbiAgICAgICAgZ2xHYW1lLnBhbmVsLnNob3dTaG9wKDMwKTtcclxuICAgIH0sXHJcblxyXG4gICAgY2xpY2tfYmFjaygpIHtcclxuICAgICAgICBnbEdhbWUucmVhZHlyb29tLnJlcUV4aXRBcmVhKCk7XHJcbiAgICAgICAgdGhpcy5yZW1vdmUoKTtcclxuICAgIH0sXHJcblxyXG4gICAgY2xpY2tfaGVscCgpIHtcclxuICAgICAgICBsZXQgZ2FtZV9ydWxlID0gZ2xHYW1lLnBhbmVsLnNob3dQYW5lbCh0aGlzLmdhbWVSdWxlKTtcclxuICAgICAgICBnYW1lX3J1bGUuekluZGV4ID0gMzA7XHJcbiAgICB9LFxyXG5cclxuICAgIGNsaWNrX3JlY29yZCgpIHtcclxuICAgICAgICBsZXQgZ2FtZV9yZWNvcmQgPSBnbEdhbWUucGFuZWwuc2hvd1BhbmVsKHRoaXMuZ2FtZVJlY29yZCk7XHJcbiAgICAgICAgZ2FtZV9yZWNvcmQuekluZGV4ID0gMzA7XHJcbiAgICB9LFxyXG5cclxuICAgIHNldChrZXksIHZhbHVlKSB7XHJcbiAgICAgICAgdGhpc1trZXldID0gdmFsdWU7XHJcbiAgICB9LFxyXG5cclxuICAgIGdldChrZXkpIHtcclxuICAgICAgICByZXR1cm4gdGhpc1trZXldO1xyXG4gICAgfSxcclxuXHJcbiAgICBPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgZ2xHYW1lLmVtaXR0ZXIub2ZmKE1FU1NBR0UuVUkuUk9PTV9FTlRFUl9TSE9XLCB0aGlzKTtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vZmYoTUVTU0FHRS5VSS5ST09NX0VOVEVSX0hJREUsIHRoaXMpO1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9mZihcIm5vZGVSZW1vdmVcIiwgdGhpcyk7XHJcbiAgICAgICAgZ2xHYW1lLmVtaXR0ZXIub2ZmKFwidXBkYXRlVXNlckRhdGFcIiwgdGhpcyk7XHJcbiAgICAgICAgdGhpcy51bnJlZ2lzdGVyRXZlbnQoKTtcclxuICAgIH1cclxufSk7XHJcbiJdfQ==