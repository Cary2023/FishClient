
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/modules/plaza/script/prefab/enterRoom/nfish2entry.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'bc2bbZsdxFN+4CFLDn89D7o', 'nfish2entry');
// modules/plaza/script/prefab/enterRoom/nfish2entry.js

"use strict";

glGame.baseclass.extend({
  properties: {
    goldCount: cc.Label,
    username: cc.Label,
    help_pre: cc.Prefab,
    record_pre: cc.Prefab,
    BGM: {
      //背景声音
      type: cc.AudioClip,
      "default": null
    },
    LOADING: cc.Prefab,
    level: {
      type: cc.Node,
      "default": []
    }
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.gameid = 0;
    this.node.zIndex = 20;
    glGame.emitter.on(MESSAGE.UI.ROOM_ENTER_SHOW, this.RootNodeShow, this);
    glGame.emitter.on(MESSAGE.UI.ROOM_ENTER_HIDE, this.RootNodeHide, this);
    glGame.emitter.on("nodeRemove", this.click_back, this);
    glGame.emitter.on("updateUserData", this.updateuserInfo, this);
    this.gameID = glGame.scenetag.FISH3;
    glGame.readyroom.reqEnterArea(glGame.scenetag.FISH3);
    this.registerEvent();
    this.updateuserInfo();
    this.startPlayMove();
    this.node.getChildByName("mask").active = false;
  },
  startPlayMove: function startPlayMove() {
    var arg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
    var q = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;
    var game_logo = this.node.getChildByName("game_logo");
    game_logo.getComponent(cc.Widget).enabled = false;
    game_logo.scale = 0;
    game_logo.opacity = 0;
    game_logo.stopAllActions();
    var act = cc.spawn(cc.fadeTo(0.26, 255), cc.scaleTo(0.3, 1.3, 1.3));
    game_logo.runAction(cc.sequence(act, cc.callFunc(function () {
      game_logo.stopAllActions();
      game_logo.runAction(cc.sequence(cc.scaleTo(0.13, 1), cc.callFunc(function () {
        game_logo.getComponent(cc.Widget).enabled = true;
      })));
    })));
    var ind = 0;
    var qd = q; //q弹值

    if (arg) {
      this.playQJunpMovieClip(0.01, this.node.getChildByName("primary"), this.node.getChildByName("primaryPos").position, ind, qd);
      this.playQJunpMovieClip(0.137, this.node.getChildByName("intermediate"), this.node.getChildByName("intermediatePos").position, ind, qd);
      this.playQJunpMovieClip(0.237, this.node.getChildByName("senior"), this.node.getChildByName("seniorPos").position, ind, qd);
      this.playQJunpMovieClip(0.39, this.node.getChildByName("supremacy"), this.node.getChildByName("supremacyPos").position, ind, qd);
    } else {
      this.playQJunpMovieClip(0.01, this.node.getChildByName("primary"), this.node.getChildByName("primaryPos").position, ind, qd);
      this.playQJunpMovieClip(0.01, this.node.getChildByName("intermediate"), this.node.getChildByName("intermediatePos").position, ind, qd);
      this.playQJunpMovieClip(0.01, this.node.getChildByName("senior"), this.node.getChildByName("seniorPos").position, ind, qd);
      this.playQJunpMovieClip(0.01, this.node.getChildByName("supremacy"), this.node.getChildByName("supremacyPos").position, ind, qd);
    }
  },
  playQJunpMovieClip: function playQJunpMovieClip(delay, mc, pos, ind, qd) {
    var _this = this;

    mc.stopAllActions();
    var qjPos = cc.v2(pos.x, mc.y > pos.y ? pos.y - qd : pos.y + qd);
    var go = cc.callFunc(function () {
      mc.stopAllActions();
      mc.runAction(cc.sequence(cc.moveTo(0.137 + 0.05, pos), cc.callFunc(function () {
        ind++;

        _this.endEffectPlayed(ind);
      })));
    });
    mc.runAction(cc.sequence(cc.delayTime(delay), cc.moveTo(0.17 + 0.05, qjPos), go));
  },
  endEffectPlayed: function endEffectPlayed(arg) {
    if (arg == 4) {// this.node.getComponent(cc.Widget).enabled = true;
      // this.node.getComponent(cc.Widget).updateAlignment();
    }
  },
  //事件监听
  registerEvent: function registerEvent() {
    glGame.emitter.on("goldOnlineNum", this.goldOnlineNum, this);
    glGame.emitter.on("onGameConfig", this.onGameConfig, this);
  },
  //事件销毁
  unregisterEvent: function unregisterEvent() {
    glGame.emitter.off("goldOnlineNum", this);
    glGame.emitter.off("onGameConfig", this);
  },
  onGameConfig: function onGameConfig(msg) {
    this.gameConfig = msg;
    this.initUI();
  },
  goldOnlineNum: function goldOnlineNum(msg) {
    console.log("这是在线人数的消息", msg);
    var count = this.level.length;

    for (var i = 0; i < count; i++) {
      if (msg[i + 1]) {
        this.level[i].getChildByName("people_num").getComponent(cc.Label).string = msg[i + 1];
      }
    }
  },
  RootNodeShow: function RootNodeShow() {
    this.registerEvent();
    this.node.active = true;
    this.gameID = glGame.scenetag.FISH3;
    glGame.readyroom.reqEnterArea(glGame.scenetag.FISH3);
  },
  RootNodeHide: function RootNodeHide() {
    this.unregisterEvent();
    this.node.active = false;
  },
  onClick: function onClick(name, node) {
    switch (name) {
      case "btn_back":
        this.click_back();
        break;

      case "btn_help":
        this.click_help();
        break;

      case "btn_record":
        this.click_record();
        break;

      case "mycoinInfo":
        this.click_addgold();
        break;

      case "headbg":
        this.click_userinfo();
        break;

      case "btn_chongzhi":
        this.click_addgold();
        break;

      case "primary":
        this.enterGame(99);
        break;

      case "intermediate":
        this.enterGame(1);
        break;

      case "senior":
        this.enterGame(2);
        break;
      // case "tuhao": this.enterGame(3); break;

      case "supremacy":
        this.enterGame(3);
        break;

      case "volvo":
        this.enterGame(5);
        break;

      default:
        console.error("no find button name -> %s", name);
    }
  },

  /**
   * 进入金币场房间
   * @param level 场次类型 1:初级场 2:中级场 3:高级场 4:土豪场 5:至尊场
   */
  enterGame: function enterGame(level) {
    var _this2 = this;

    glGame.room.reqMyGameState(this.gameID, level).then(function () {
      var gameID = _this2.gameID;

      if (_this2.gameConfig[level] == null) {
        glGame.panel.showMsgBox('提示', '该房间尚未开放，请尝试其他房间。');
        return;
      }

      if (glGame.user.isTourist()) {
        if (level != 99) {
          glGame.panel.showRegisteredGift(true);
          return;
        }
      }

      if (glGame.user.suspicious == 1 && glGame.user.game == 2 || glGame.user.is_game == 2) {
        glGame.panel.showDialog("", "您的账号数据异常，暂时禁止进入游戏，如有疑问，请联系客服！", function () {
          glGame.panel.showService();
        }, function () {}, "我知道了", "联系客服");
        return;
      }

      if (gameID == glGame.scenetag.FISH3) {
        if (glGame.user.get("coin") >= _this2["gameConfig"][level].EntranceRestrictions) {
          glGame.room.sendEnterRoom(level, _this2.gameID);
        } else {
          var string = "<color=#99C7FF>\u60A8\u7684\u91D1\u5E01\u4E0D\u8DB3\uFF0C\u8BE5\u623F\u95F4\u9700\u8981</c> <color=#ff0000> ".concat(_this2.getFloat(_this2.gameConfig[level].EntranceRestrictions), "  </c><color=#99C7FF>\u91D1\u5E01\u624D\u53EF\u8FDB\u5165\uFF0C\u662F\u5426\u9A6C\u4E0A\u524D\u5F80\u5145\u503C\uFF1F</c>");
          glGame.panel.showDialog("", string, function () {
            glGame.panel.showShop(100);
          }, function () {}, "取消", "充值");
        }

        return;
      }

      if (_this2.gameConfig[level].EntranceRestrictions > glGame.user.get("coin")) {
        var _string = "<color=#99C7FF>\u60A8\u7684\u91D1\u5E01\u4E0D\u8DB3\uFF0C\u8BE5\u623F\u95F4\u9700\u8981</c> <color=#ff0000> ".concat(_this2.getFloat(_this2.gameConfig[level].EntranceRestrictions), "  </c><color=#99C7FF>\u91D1\u5E01\u624D\u53EF\u8FDB\u5165\uFF0C\u662F\u5426\u9A6C\u4E0A\u524D\u5F80\u5145\u503C\uFF1F</c>");

        glGame.panel.showDialog("", _string, function () {
          glGame.panel.showShop(100);
        }, function () {}, "取消", "充值");
        return;
      }

      glGame.panel.showJuHua(); // glGame.readyroom.reqExitArea();

      _this2.node.runAction(cc.sequence(cc.delayTime(15), cc.callFunc(function () {
        glGame.panel.closeJuHua();
      })));

      _this2.node.getChildByName("mask").active = true; // TODO
      // reqGoldRoomVerify为旧的进入房间方法，需要先请求验证，再进入房间
      // setGoldRoomInfo 新的进入房间方法，无需验证，设置游戏类型以及房间信息后，直接进入房间
      // if (glGame.enterRoomVerification) {
      //     glGame.room.reqGoldRoomVerify(gameID, level);
      // } else {
      //     glGame.room.setGoldRoomInfo(gameID, level);
      // }

      glGame.room.setGoldRoomInfo(gameID, level);
    });
  },
  getFloat: function getFloat(value) {
    return Number(value).div(100).toString();
  },

  /**
   * 检查玩家金币是否足够
   * @returns {boolean}
   */
  checkGold: function checkGold(coin, minCion) {
    console.log("金币检测", coin, minCion);

    if (parseInt(coin) < parseInt(minCion)) {
      glGame.panel.showDialog(glGame.i18n.t("USER.GOLDLACK.TITLE"), glGame.i18n.t("USER.GOLDLACK.CONTENT"), function () {
        glGame.panel.showPanelByName("shop");
      }, null);
      return false;
    }

    return true;
  },
  cutFloat: function cutFloat(value) {
    return Number(value).div(100).toString();
  },
  updateuserInfo: function updateuserInfo() {
    var coin = glGame.user.get("coin");
    this.goldCount.string = glGame.user.cutFloat(coin);
    this.username.string = glGame.user.get("nickname");
  },
  initUI: function initUI() {
    this.node.active = true;
    this.level[0].getChildByName("dizhulaout").getChildByName('lab_top').getComponent(cc.Label).string = "".concat(this["gameConfig"]['99'].BaseConsume >= 1000000 ? this.cutFloat(this["gameConfig"]['99'].BaseConsume / 10000) + '万' : this.cutFloat(this["gameConfig"]['99'].BaseConsume));
    var downString1 = this["gameConfig"]['99'].EntranceRestrictions >= 1000000 ? "".concat(this.cutFloat(this["gameConfig"]['99'].EntranceRestrictions / 10000), "\u4E07") : this.cutFloat(this["gameConfig"]['99'].EntranceRestrictions);
    this.level[0].getChildByName("zhunrulayout").getChildByName('lab_center').getComponent(cc.Label).string = downString1;

    for (var i = 1; i < this.level.length; i++) {
      var roomConfig = this["gameConfig"][i];
      var downString = roomConfig.EntranceRestrictions >= 1000000 ? "".concat(this.cutFloat(roomConfig.EntranceRestrictions / 10000), "\u4E07") : this.cutFloat(roomConfig.EntranceRestrictions);
      this.level[i].getChildByName("dizhulaout").getChildByName('lab_top').getComponent(cc.Label).string = "".concat(roomConfig.BaseConsume >= 1000000 ? this.cutFloat(roomConfig.BaseConsume / 10000) + '万' : this.cutFloat(roomConfig.BaseConsume));
      this.level[i].getChildByName("zhunrulayout").getChildByName('lab_center').getComponent(cc.Label).string = downString;
    }
  },
  setGameId: function setGameId(gameid) {
    this.gameid = gameid;
  },
  updateBgInfo: function updateBgInfo() {},
  click_userinfo: function click_userinfo() {
    glGame.panel.showPanelByName("userinfo");
  },
  click_addgold: function click_addgold() {
    glGame.panel.showShop(30);
  },
  click_back: function click_back() {
    glGame.readyroom.reqExitArea();
    this.remove();
  },
  click_help: function click_help() {
    var panel = glGame.panel.showPanel(this.help_pre);
    panel.zIndex = 30;
  },
  click_record: function click_record() {
    var panel = glGame.panel.showPanel(this.record_pre);
    panel.zIndex = 30;
  },
  set: function set(key, value) {
    this[key] = value;
  },
  get: function get(key) {
    return this[key];
  },
  OnDestroy: function OnDestroy() {
    this.unregisterEvent();
    glGame.emitter.off(MESSAGE.UI.ROOM_ENTER_SHOW, this);
    glGame.emitter.off(MESSAGE.UI.ROOM_ENTER_HIDE, this);
    glGame.emitter.off("nodeRemove", this);
    glGame.emitter.off("updateUserData", this);
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcbW9kdWxlc1xccGxhemFcXHNjcmlwdFxccHJlZmFiXFxlbnRlclJvb21cXG5maXNoMmVudHJ5LmpzIl0sIm5hbWVzIjpbImdsR2FtZSIsImJhc2VjbGFzcyIsImV4dGVuZCIsInByb3BlcnRpZXMiLCJnb2xkQ291bnQiLCJjYyIsIkxhYmVsIiwidXNlcm5hbWUiLCJoZWxwX3ByZSIsIlByZWZhYiIsInJlY29yZF9wcmUiLCJCR00iLCJ0eXBlIiwiQXVkaW9DbGlwIiwiTE9BRElORyIsImxldmVsIiwiTm9kZSIsIm9uTG9hZCIsImdhbWVpZCIsIm5vZGUiLCJ6SW5kZXgiLCJlbWl0dGVyIiwib24iLCJNRVNTQUdFIiwiVUkiLCJST09NX0VOVEVSX1NIT1ciLCJSb290Tm9kZVNob3ciLCJST09NX0VOVEVSX0hJREUiLCJSb290Tm9kZUhpZGUiLCJjbGlja19iYWNrIiwidXBkYXRldXNlckluZm8iLCJnYW1lSUQiLCJzY2VuZXRhZyIsIkZJU0gzIiwicmVhZHlyb29tIiwicmVxRW50ZXJBcmVhIiwicmVnaXN0ZXJFdmVudCIsInN0YXJ0UGxheU1vdmUiLCJnZXRDaGlsZEJ5TmFtZSIsImFjdGl2ZSIsImFyZyIsInEiLCJnYW1lX2xvZ28iLCJnZXRDb21wb25lbnQiLCJXaWRnZXQiLCJlbmFibGVkIiwic2NhbGUiLCJvcGFjaXR5Iiwic3RvcEFsbEFjdGlvbnMiLCJhY3QiLCJzcGF3biIsImZhZGVUbyIsInNjYWxlVG8iLCJydW5BY3Rpb24iLCJzZXF1ZW5jZSIsImNhbGxGdW5jIiwiaW5kIiwicWQiLCJwbGF5UUp1bnBNb3ZpZUNsaXAiLCJwb3NpdGlvbiIsImRlbGF5IiwibWMiLCJwb3MiLCJxalBvcyIsInYyIiwieCIsInkiLCJnbyIsIm1vdmVUbyIsImVuZEVmZmVjdFBsYXllZCIsImRlbGF5VGltZSIsImdvbGRPbmxpbmVOdW0iLCJvbkdhbWVDb25maWciLCJ1bnJlZ2lzdGVyRXZlbnQiLCJvZmYiLCJtc2ciLCJnYW1lQ29uZmlnIiwiaW5pdFVJIiwiY29uc29sZSIsImxvZyIsImNvdW50IiwibGVuZ3RoIiwiaSIsInN0cmluZyIsIm9uQ2xpY2siLCJuYW1lIiwiY2xpY2tfaGVscCIsImNsaWNrX3JlY29yZCIsImNsaWNrX2FkZGdvbGQiLCJjbGlja191c2VyaW5mbyIsImVudGVyR2FtZSIsImVycm9yIiwicm9vbSIsInJlcU15R2FtZVN0YXRlIiwidGhlbiIsInBhbmVsIiwic2hvd01zZ0JveCIsInVzZXIiLCJpc1RvdXJpc3QiLCJzaG93UmVnaXN0ZXJlZEdpZnQiLCJzdXNwaWNpb3VzIiwiZ2FtZSIsImlzX2dhbWUiLCJzaG93RGlhbG9nIiwic2hvd1NlcnZpY2UiLCJnZXQiLCJFbnRyYW5jZVJlc3RyaWN0aW9ucyIsInNlbmRFbnRlclJvb20iLCJnZXRGbG9hdCIsInNob3dTaG9wIiwic2hvd0p1SHVhIiwiY2xvc2VKdUh1YSIsInNldEdvbGRSb29tSW5mbyIsInZhbHVlIiwiTnVtYmVyIiwiZGl2IiwidG9TdHJpbmciLCJjaGVja0dvbGQiLCJjb2luIiwibWluQ2lvbiIsInBhcnNlSW50IiwiaTE4biIsInQiLCJzaG93UGFuZWxCeU5hbWUiLCJjdXRGbG9hdCIsIkJhc2VDb25zdW1lIiwiZG93blN0cmluZzEiLCJyb29tQ29uZmlnIiwiZG93blN0cmluZyIsInNldEdhbWVJZCIsInVwZGF0ZUJnSW5mbyIsInJlcUV4aXRBcmVhIiwicmVtb3ZlIiwic2hvd1BhbmVsIiwic2V0Iiwia2V5IiwiT25EZXN0cm95Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBQSxNQUFNLENBQUNDLFNBQVAsQ0FBaUJDLE1BQWpCLENBQXdCO0FBRXBCQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsU0FBUyxFQUFFQyxFQUFFLENBQUNDLEtBRE47QUFFUkMsSUFBQUEsUUFBUSxFQUFFRixFQUFFLENBQUNDLEtBRkw7QUFHUkUsSUFBQUEsUUFBUSxFQUFFSCxFQUFFLENBQUNJLE1BSEw7QUFJUkMsSUFBQUEsVUFBVSxFQUFFTCxFQUFF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QVo7QUFDSCxHQWxRbUI7QUFtUXBCUixFQUFBQSxHQW5Rb0IsZUFtUWhCOEIsR0FuUWdCLEVBbVFYO0FBQ0wsV0FBTyxLQUFLQSxHQUFMLENBQVA7QUFDSCxHQXJRbUI7QUFzUXBCQyxFQUFBQSxTQXRRb0IsdUJBc1FSO0FBQ1IsU0FBSy9ELGVBQUw7QUFDQXpFLElBQUFBLE1BQU0sQ0FBQ3FCLE9BQVAsQ0FBZXFELEdBQWYsQ0FBbUJuRCxPQUFPLENBQUNDLEVBQVIsQ0FBV0MsZUFBOUIsRUFBK0MsSUFBL0M7QUFDQXpCLElBQUFBLE1BQU0sQ0FBQ3FCLE9BQVAsQ0FBZXFELEdBQWYsQ0FBbUJuRCxPQUFPLENBQUNDLEVBQVIsQ0FBV0csZUFBOUIsRUFBK0MsSUFBL0M7QUFDQTNCLElBQUFBLE1BQU0sQ0FBQ3FCLE9BQVAsQ0FBZXFELEdBQWYsQ0FBbUIsWUFBbkIsRUFBaUMsSUFBakM7QUFDQTFFLElBQUFBLE1BQU0sQ0FBQ3FCLE9BQVAsQ0FBZXFELEdBQWYsQ0FBbUIsZ0JBQW5CLEVBQXFDLElBQXJDO0FBQ0gsR0E1UW1CLENBNlFwQjs7QUE3UW9CLENBQXhCIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJnbEdhbWUuYmFzZWNsYXNzLmV4dGVuZCh7XHJcblxyXG4gICAgcHJvcGVydGllczoge1xyXG4gICAgICAgIGdvbGRDb3VudDogY2MuTGFiZWwsXHJcbiAgICAgICAgdXNlcm5hbWU6IGNjLkxhYmVsLFxyXG4gICAgICAgIGhlbHBfcHJlOiBjYy5QcmVmYWIsXHJcbiAgICAgICAgcmVjb3JkX3ByZTogY2MuUHJlZmFiLFxyXG4gICAgICAgIEJHTTogeyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8v6IOM5pmv5aOw6Z+zXHJcbiAgICAgICAgICAgIHR5cGU6IGNjLkF1ZGlvQ2xpcCxcclxuICAgICAgICAgICAgZGVmYXVsdDogbnVsbCxcclxuICAgICAgICB9LFxyXG4gICAgICAgIExPQURJTkc6IGNjLlByZWZhYixcclxuICAgICAgICBsZXZlbDoge1xyXG4gICAgICAgICAgICB0eXBlOiBjYy5Ob2RlLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBbXVxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIG9uTG9hZCgpIHtcclxuICAgICAgICB0aGlzLmdhbWVpZCA9IDA7XHJcbiAgICAgICAgdGhpcy5ub2RlLnpJbmRleCA9IDIwO1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9uKE1FU1NBR0UuVUkuUk9PTV9FTlRFUl9TSE9XLCB0aGlzLlJvb3ROb2RlU2hvdywgdGhpcyk7XHJcbiAgICAgICAgZ2xHYW1lLmVtaXR0ZXIub24oTUVTU0FHRS5VSS5ST09NX0VOVEVSX0hJREUsIHRoaXMuUm9vdE5vZGVIaWRlLCB0aGlzKTtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vbihcIm5vZGVSZW1vdmVcIiwgdGhpcy5jbGlja19iYWNrLCB0aGlzKTtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vbihcInVwZGF0ZVVzZXJEYXRhXCIsIHRoaXMudXBkYXRldXNlckluZm8sIHRoaXMpO1xyXG4gICAgICAgIHRoaXMuZ2FtZUlEID0gZ2xHYW1lLnNjZW5ldGFnLkZJU0gzO1xyXG4gICAgICAgIGdsR2FtZS5yZWFkeXJvb20ucmVxRW50ZXJBcmVhKGdsR2FtZS5zY2VuZXRhZy5GSVNIMyk7XHJcbiAgICAgICAgdGhpcy5yZWdpc3RlckV2ZW50KCk7XHJcbiAgICAgICAgdGhpcy51cGRhdGV1c2VySW5mbygpO1xyXG4gICAgICAgIHRoaXMuc3RhcnRQbGF5TW92ZSgpO1xyXG4gICAgICAgIHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZShcIm1hc2tcIikuYWN0aXZlID0gZmFsc2U7XHJcbiAgICB9LFxyXG5cclxuICAgIHN0YXJ0UGxheU1vdmUoYXJnID0gdHJ1ZSwgcSA9IDEwMCkge1xyXG4gICAgICAgIGxldCBnYW1lX2xvZ28gPSB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJnYW1lX2xvZ29cIik7XHJcbiAgICAgICAgZ2FtZV9sb2dvLmdldENvbXBvbmVudChjYy5XaWRnZXQpLmVuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICBnYW1lX2xvZ28uc2NhbGUgPSAwO1xyXG4gICAgICAgIGdhbWVfbG9nby5vcGFjaXR5ID0gMDtcclxuICAgICAgICBnYW1lX2xvZ28uc3RvcEFsbEFjdGlvbnMoKTtcclxuICAgICAgICBsZXQgYWN0ID0gY2Muc3Bhd24oY2MuZmFkZVRvKDAuMjYsIDI1NSksIGNjLnNjYWxlVG8oMC4zLCAxLjMsIDEuMykpO1xyXG4gICAgICAgIGdhbWVfbG9nby5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoYWN0LCBjYy5jYWxsRnVuYygoKSA9PiB7XHJcbiAgICAgICAgICAgIGdhbWVfbG9nby5zdG9wQWxsQWN0aW9ucygpO1xyXG4gICAgICAgICAgICBnYW1lX2xvZ28ucnVuQWN0aW9uKGNjLnNlcXVlbmNlKGNjLnNjYWxlVG8oMC4xMywgMSksIGNjLmNhbGxGdW5jKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGdhbWVfbG9nby5nZXRDb21wb25lbnQoY2MuV2lkZ2V0KS5lbmFibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgfSkpKTtcclxuICAgICAgICB9KSkpO1xyXG5cclxuICAgICAgICBsZXQgaW5kID0gMDtcclxuICAgICAgICBsZXQgcWQgPSBxOy8vceW8ueWAvFxyXG4gICAgICAgIGlmIChhcmcpIHtcclxuICAgICAgICAgICAgdGhpcy5wbGF5UUp1bnBNb3ZpZUNsaXAoMC4wMSwgdGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKFwicHJpbWFyeVwiKSwgdGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKFwicHJpbWFyeVBvc1wiKS5wb3NpdGlvbiwgaW5kLCBxZCk7XHJcbiAgICAgICAgICAgIHRoaXMucGxheVFKdW5wTW92aWVDbGlwKDAuMTM3LCB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJpbnRlcm1lZGlhdGVcIiksIHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZShcImludGVybWVkaWF0ZVBvc1wiKS5wb3NpdGlvbiwgaW5kLCBxZCk7XHJcbiAgICAgICAgICAgIHRoaXMucGxheVFKdW5wTW92aWVDbGlwKDAuMjM3LCB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJzZW5pb3JcIiksIHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZShcInNlbmlvclBvc1wiKS5wb3NpdGlvbiwgaW5kLCBxZCk7XHJcbiAgICAgICAgICAgIHRoaXMucGxheVFKdW5wTW92aWVDbGlwKDAuMzksIHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZShcInN1cHJlbWFjeVwiKSwgdGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKFwic3VwcmVtYWN5UG9zXCIpLnBvc2l0aW9uLCBpbmQsIHFkKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnBsYXlRSnVucE1vdmllQ2xpcCgwLjAxLCB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJwcmltYXJ5XCIpLCB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJwcmltYXJ5UG9zXCIpLnBvc2l0aW9uLCBpbmQsIHFkKTtcclxuICAgICAgICAgICAgdGhpcy5wbGF5UUp1bnBNb3ZpZUNsaXAoMC4wMSwgdGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKFwiaW50ZXJtZWRpYXRlXCIpLCB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJpbnRlcm1lZGlhdGVQb3NcIikucG9zaXRpb24sIGluZCwgcWQpO1xyXG4gICAgICAgICAgICB0aGlzLnBsYXlRSnVucE1vdmllQ2xpcCgwLjAxLCB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJzZW5pb3JcIiksIHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZShcInNlbmlvclBvc1wiKS5wb3NpdGlvbiwgaW5kLCBxZCk7XHJcbiAgICAgICAgICAgIHRoaXMucGxheVFKdW5wTW92aWVDbGlwKDAuMDEsIHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZShcInN1cHJlbWFjeVwiKSwgdGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKFwic3VwcmVtYWN5UG9zXCIpLnBvc2l0aW9uLCBpbmQsIHFkKTtcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgcGxheVFKdW5wTW92aWVDbGlwKGRlbGF5LCBtYywgcG9zLCBpbmQsIHFkKSB7XHJcbiAgICAgICAgbWMuc3RvcEFsbEFjdGlvbnMoKTtcclxuICAgICAgICBsZXQgcWpQb3MgPSBjYy52Mihwb3MueCwgbWMueSA+IHBvcy55ID8gKHBvcy55IC0gcWQpIDogKHBvcy55ICsgcWQpKTtcclxuICAgICAgICBsZXQgZ28gPSBjYy5jYWxsRnVuYygoKSA9PiB7XHJcbiAgICAgICAgICAgIG1jLnN0b3BBbGxBY3Rpb25zKCk7XHJcbiAgICAgICAgICAgIG1jLnJ1bkFjdGlvbihjYy5zZXF1ZW5jZShjYy5tb3ZlVG8oMC4xMzcgKyAwLjA1LCBwb3MpLCBjYy5jYWxsRnVuYygoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpbmQrKztcclxuICAgICAgICAgICAgICAgIHRoaXMuZW5kRWZmZWN0UGxheWVkKGluZCk7XHJcbiAgICAgICAgICAgIH0pKSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgbWMucnVuQWN0aW9uKGNjLnNlcXVlbmNlKGNjLmRlbGF5VGltZShkZWxheSksIGNjLm1vdmVUbygwLjE3ICsgMC4wNSwgcWpQb3MpLCBnbykpO1xyXG4gICAgfSxcclxuICAgIGVuZEVmZmVjdFBsYXllZChhcmcpIHtcclxuICAgICAgICBpZiAoYXJnID09IDQpIHtcclxuICAgICAgICAgICAgLy8gdGhpcy5ub2RlLmdldENvbXBvbmVudChjYy5XaWRnZXQpLmVuYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAvLyB0aGlzLm5vZGUuZ2V0Q29tcG9uZW50KGNjLldpZGdldCkudXBkYXRlQWxpZ25tZW50KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICAvL+S6i+S7tuebkeWQrFxyXG4gICAgcmVnaXN0ZXJFdmVudCgpIHtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vbihcImdvbGRPbmxpbmVOdW1cIiwgdGhpcy5nb2xkT25saW5lTnVtLCB0aGlzKTtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vbihcIm9uR2FtZUNvbmZpZ1wiLCB0aGlzLm9uR2FtZUNvbmZpZywgdGhpcyk7XHJcbiAgICB9LFxyXG4gICAgLy/kuovku7bplIDmr4FcclxuICAgIHVucmVnaXN0ZXJFdmVudCgpIHtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vZmYoXCJnb2xkT25saW5lTnVtXCIsIHRoaXMpO1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9mZihcIm9uR2FtZUNvbmZpZ1wiLCB0aGlzKTtcclxuICAgIH0sXHJcbiAgICBvbkdhbWVDb25maWcobXNnKSB7XHJcbiAgICAgICAgdGhpcy5nYW1lQ29uZmlnID0gbXNnO1xyXG4gICAgICAgIHRoaXMuaW5pdFVJKCk7XHJcbiAgICB9LFxyXG4gICAgZ29sZE9ubGluZU51bShtc2cpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIui/meaYr+WcqOe6v+S6uuaVsOeahOa2iOaBr1wiLCBtc2cpXHJcbiAgICAgICAgbGV0IGNvdW50ID0gdGhpcy5sZXZlbC5sZW5ndGg7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChtc2dbaSArIDFdKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxldmVsW2ldLmdldENoaWxkQnlOYW1lKFwicGVvcGxlX251bVwiKS5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IG1zZ1tpICsgMV1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBSb290Tm9kZVNob3coKSB7XHJcbiAgICAgICAgdGhpcy5yZWdpc3RlckV2ZW50KCk7XHJcbiAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5nYW1lSUQgPSBnbEdhbWUuc2NlbmV0YWcuRklTSDM7XHJcbiAgICAgICAgZ2xHYW1lLnJlYWR5cm9vbS5yZXFFbnRlckFyZWEoZ2xHYW1lLnNjZW5ldGFnLkZJU0gzKTtcclxuICAgIH0sXHJcbiAgICBSb290Tm9kZUhpZGUoKSB7XHJcbiAgICAgICAgdGhpcy51bnJlZ2lzdGVyRXZlbnQoKTtcclxuICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICB9LFxyXG4gICAgb25DbGljayhuYW1lLCBub2RlKSB7XHJcbiAgICAgICAgc3dpdGNoIChuYW1lKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJidG5fYmFja1wiOiB0aGlzLmNsaWNrX2JhY2soKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJidG5faGVscFwiOiB0aGlzLmNsaWNrX2hlbHAoKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJidG5fcmVjb3JkXCI6IHRoaXMuY2xpY2tfcmVjb3JkKCk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwibXljb2luSW5mb1wiOiB0aGlzLmNsaWNrX2FkZGdvbGQoKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJoZWFkYmdcIjogdGhpcy5jbGlja191c2VyaW5mbygpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImJ0bl9jaG9uZ3poaVwiOiB0aGlzLmNsaWNrX2FkZGdvbGQoKTsgYnJlYWs7XHJcblxyXG5cclxuICAgICAgICAgICAgY2FzZSBcInByaW1hcnlcIjogdGhpcy5lbnRlckdhbWUoOTkpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImludGVybWVkaWF0ZVwiOiB0aGlzLmVudGVyR2FtZSgxKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJzZW5pb3JcIjogdGhpcy5lbnRlckdhbWUoMik7IGJyZWFrO1xyXG4gICAgICAgICAgICAvLyBjYXNlIFwidHVoYW9cIjogdGhpcy5lbnRlckdhbWUoMyk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwic3VwcmVtYWN5XCI6IHRoaXMuZW50ZXJHYW1lKDMpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcInZvbHZvXCI6IHRoaXMuZW50ZXJHYW1lKDUpOyBicmVhaztcclxuXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IGNvbnNvbGUuZXJyb3IoXCJubyBmaW5kIGJ1dHRvbiBuYW1lIC0+ICVzXCIsIG5hbWUpO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDov5vlhaXph5HluIHlnLrmiL/pl7RcclxuICAgICAqIEBwYXJhbSBsZXZlbCDlnLrmrKHnsbvlnosgMTrliJ3nuqflnLogMjrkuK3nuqflnLogMzrpq5jnuqflnLogNDrlnJ/osarlnLogNTroh7PlsIrlnLpcclxuICAgICAqL1xyXG4gICAgZW50ZXJHYW1lKGxldmVsKSB7XHJcbiAgICAgICAgZ2xHYW1lLnJvb20ucmVxTXlHYW1lU3RhdGUodGhpcy5nYW1lSUQsIGxldmVsKS50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgbGV0IGdhbWVJRCA9IHRoaXMuZ2FtZUlEO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5nYW1lQ29uZmlnW2xldmVsXSA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICBnbEdhbWUucGFuZWwuc2hvd01zZ0JveCgn5o+Q56S6JywgJ+ivpeaIv+mXtOWwmuacquW8gOaUvu+8jOivt+WwneivleWFtuS7luaIv+mXtOOAgicpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChnbEdhbWUudXNlci5pc1RvdXJpc3QoKSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGxldmVsICE9IDk5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2xHYW1lLnBhbmVsLnNob3dSZWdpc3RlcmVkR2lmdCh0cnVlKVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoKGdsR2FtZS51c2VyLnN1c3BpY2lvdXMgPT0gMSAmJiBnbEdhbWUudXNlci5nYW1lID09IDIpIHx8IGdsR2FtZS51c2VyLmlzX2dhbWUgPT0gMikge1xyXG4gICAgICAgICAgICAgICAgZ2xHYW1lLnBhbmVsLnNob3dEaWFsb2coXCJcIiwgXCLmgqjnmoTotKblj7fmlbDmja7lvILluLjvvIzmmoLml7bnpoHmraLov5vlhaXmuLjmiI/vvIzlpoLmnInnlpHpl67vvIzor7fogZTns7vlrqLmnI3vvIFcIiwgKCkgPT4geyBnbEdhbWUucGFuZWwuc2hvd1NlcnZpY2UoKSB9LCAoKSA9PiB7IH0sIFwi5oiR55+l6YGT5LqGXCIsIFwi6IGU57O75a6i5pyNXCIpXHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGdhbWVJRCA9PSBnbEdhbWUuc2NlbmV0YWcuRklTSDMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChnbEdhbWUudXNlci5nZXQoXCJjb2luXCIpID49IHRoaXNbXCJnYW1lQ29uZmlnXCJdW2xldmVsXS5FbnRyYW5jZVJlc3RyaWN0aW9ucykge1xyXG4gICAgICAgICAgICAgICAgICAgIGdsR2FtZS5yb29tLnNlbmRFbnRlclJvb20obGV2ZWwsIHRoaXMuZ2FtZUlEKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHN0cmluZyA9IGA8Y29sb3I9Izk5QzdGRj7mgqjnmoTph5HluIHkuI3otrPvvIzor6XmiL/pl7TpnIDopoE8L2M+IDxjb2xvcj0jZmYwMDAwPiAke3RoaXMuZ2V0RmxvYXQodGhpcy5nYW1lQ29uZmlnW2xldmVsXS5FbnRyYW5jZVJlc3RyaWN0aW9ucyl9ICA8L2M+PGNvbG9yPSM5OUM3RkY+6YeR5biB5omN5Y+v6L+b5YWl77yM5piv5ZCm6ams5LiK5YmN5b6A5YWF5YC877yfPC9jPmBcclxuICAgICAgICAgICAgICAgICAgICBnbEdhbWUucGFuZWwuc2hvd0RpYWxvZyhcIlwiLCBzdHJpbmcsICgpID0+IHsgZ2xHYW1lLnBhbmVsLnNob3dTaG9wKDEwMCkgfSwgKCkgPT4geyB9LCBcIuWPlua2iFwiLCBcIuWFheWAvFwiKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy5nYW1lQ29uZmlnW2xldmVsXS5FbnRyYW5jZVJlc3RyaWN0aW9ucyA+IGdsR2FtZS51c2VyLmdldChcImNvaW5cIikpIHtcclxuICAgICAgICAgICAgICAgIGxldCBzdHJpbmcgPSBgPGNvbG9yPSM5OUM3RkY+5oKo55qE6YeR5biB5LiN6Laz77yM6K+l5oi/6Ze06ZyA6KaBPC9jPiA8Y29sb3I9I2ZmMDAwMD4gJHt0aGlzLmdldEZsb2F0KHRoaXMuZ2FtZUNvbmZpZ1tsZXZlbF0uRW50cmFuY2VSZXN0cmljdGlvbnMpfSAgPC9jPjxjb2xvcj0jOTlDN0ZGPumHkeW4geaJjeWPr+i/m+WFpe+8jOaYr+WQpumprOS4iuWJjeW+gOWFheWAvO+8nzwvYz5gXHJcbiAgICAgICAgICAgICAgICBnbEdhbWUucGFuZWwuc2hvd0RpYWxvZyhcIlwiLCBzdHJpbmcsICgpID0+IHsgZ2xHYW1lLnBhbmVsLnNob3dTaG9wKDEwMCkgfSwgKCkgPT4geyB9LCBcIuWPlua2iFwiLCBcIuWFheWAvFwiKTtcclxuICAgICAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGdsR2FtZS5wYW5lbC5zaG93SnVIdWEoKTtcclxuICAgICAgICAgICAgLy8gZ2xHYW1lLnJlYWR5cm9vbS5yZXFFeGl0QXJlYSgpO1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUucnVuQWN0aW9uKGNjLnNlcXVlbmNlKFxyXG4gICAgICAgICAgICAgICAgY2MuZGVsYXlUaW1lKDE1KSxcclxuICAgICAgICAgICAgICAgIGNjLmNhbGxGdW5jKCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBnbEdhbWUucGFuZWwuY2xvc2VKdUh1YSgpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgKSlcclxuICAgICAgICAgICAgdGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKFwibWFza1wiKS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAvLyBUT0RPXHJcbiAgICAgICAgICAgIC8vIHJlcUdvbGRSb29tVmVyaWZ55Li65pen55qE6L+b5YWl5oi/6Ze05pa55rOV77yM6ZyA6KaB5YWI6K+35rGC6aqM6K+B77yM5YaN6L+b5YWl5oi/6Ze0XHJcbiAgICAgICAgICAgIC8vIHNldEdvbGRSb29tSW5mbyDmlrDnmoTov5vlhaXmiL/pl7Tmlrnms5XvvIzml6DpnIDpqozor4HvvIzorr7nva7muLjmiI/nsbvlnovku6Xlj4rmiL/pl7Tkv6Hmga/lkI7vvIznm7TmjqXov5vlhaXmiL/pl7RcclxuICAgICAgICAgICAgLy8gaWYgKGdsR2FtZS5lbnRlclJvb21WZXJpZmljYXRpb24pIHtcclxuICAgICAgICAgICAgLy8gICAgIGdsR2FtZS5yb29tLnJlcUdvbGRSb29tVmVyaWZ5KGdhbWVJRCwgbGV2ZWwpO1xyXG4gICAgICAgICAgICAvLyB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyAgICAgZ2xHYW1lLnJvb20uc2V0R29sZFJvb21JbmZvKGdhbWVJRCwgbGV2ZWwpO1xyXG4gICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgIGdsR2FtZS5yb29tLnNldEdvbGRSb29tSW5mbyhnYW1lSUQsIGxldmVsKTtcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIGdldEZsb2F0KHZhbHVlKSB7XHJcbiAgICAgICAgcmV0dXJuIChOdW1iZXIodmFsdWUpLmRpdigxMDApKS50b1N0cmluZygpO1xyXG4gICAgfSxcclxuICAgIC8qKlxyXG4gICAgICog5qOA5p+l546p5a626YeR5biB5piv5ZCm6Laz5aSfXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gICAgY2hlY2tHb2xkKGNvaW4sIG1pbkNpb24pIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIumHkeW4geajgOa1i1wiLCBjb2luLCBtaW5DaW9uKTtcclxuICAgICAgICBpZiAocGFyc2VJbnQoY29pbikgPCBwYXJzZUludChtaW5DaW9uKSkge1xyXG4gICAgICAgICAgICBnbEdhbWUucGFuZWwuc2hvd0RpYWxvZyhnbEdhbWUuaTE4bi50KFwiVVNFUi5HT0xETEFDSy5USVRMRVwiKSwgZ2xHYW1lLmkxOG4udChcIlVTRVIuR09MRExBQ0suQ09OVEVOVFwiKSwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgZ2xHYW1lLnBhbmVsLnNob3dQYW5lbEJ5TmFtZShcInNob3BcIik7XHJcbiAgICAgICAgICAgIH0sIG51bGwpO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfSxcclxuICAgIGN1dEZsb2F0KHZhbHVlKSB7XHJcbiAgICAgICAgcmV0dXJuIChOdW1iZXIodmFsdWUpLmRpdigxMDApKS50b1N0cmluZygpO1xyXG4gICAgfSxcclxuICAgIHVwZGF0ZXVzZXJJbmZvKCkge1xyXG4gICAgICAgIGxldCBjb2luID0gZ2xHYW1lLnVzZXIuZ2V0KFwiY29pblwiKVxyXG4gICAgICAgIHRoaXMuZ29sZENvdW50LnN0cmluZyA9IGdsR2FtZS51c2VyLmN1dEZsb2F0KGNvaW4pO1xyXG4gICAgICAgIHRoaXMudXNlcm5hbWUuc3RyaW5nID0gZ2xHYW1lLnVzZXIuZ2V0KFwibmlja25hbWVcIilcclxuICAgIH0sXHJcblxyXG4gICAgaW5pdFVJKCkge1xyXG4gICAgICAgIHRoaXMubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMubGV2ZWxbMF0uZ2V0Q2hpbGRCeU5hbWUoXCJkaXpodWxhb3V0XCIpLmdldENoaWxkQnlOYW1lKCdsYWJfdG9wJykuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKS5zdHJpbmcgPSBgJHt0aGlzW1wiZ2FtZUNvbmZpZ1wiXVsnOTknXS5CYXNlQ29uc3VtZSA+PSAxMDAwMDAwID8gdGhpcy5jdXRGbG9hdCh0aGlzW1wiZ2FtZUNvbmZpZ1wiXVsnOTknXS5CYXNlQ29uc3VtZSAvIDEwMDAwKSArICfkuIcnIDogdGhpcy5jdXRGbG9hdCh0aGlzW1wiZ2FtZUNvbmZpZ1wiXVsnOTknXS5CYXNlQ29uc3VtZSl9YDtcclxuICAgICAgICBsZXQgZG93blN0cmluZzEgPSB0aGlzW1wiZ2FtZUNvbmZpZ1wiXVsnOTknXS5FbnRyYW5jZVJlc3RyaWN0aW9ucyA+PSAxMDAwMDAwID8gYCR7dGhpcy5jdXRGbG9hdCh0aGlzW1wiZ2FtZUNvbmZpZ1wiXVsnOTknXS5FbnRyYW5jZVJlc3RyaWN0aW9ucyAvIDEwMDAwKX3kuIdgIDogdGhpcy5jdXRGbG9hdCh0aGlzW1wiZ2FtZUNvbmZpZ1wiXVsnOTknXS5FbnRyYW5jZVJlc3RyaWN0aW9ucyk7XHJcbiAgICAgICAgdGhpcy5sZXZlbFswXS5nZXRDaGlsZEJ5TmFtZShcInpodW5ydWxheW91dFwiKS5nZXRDaGlsZEJ5TmFtZSgnbGFiX2NlbnRlcicpLmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gZG93blN0cmluZzE7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDE7IGkgPCB0aGlzLmxldmVsLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCByb29tQ29uZmlnID0gdGhpc1tcImdhbWVDb25maWdcIl1baV07XHJcbiAgICAgICAgICAgIGxldCBkb3duU3RyaW5nID0gcm9vbUNvbmZpZy5FbnRyYW5jZVJlc3RyaWN0aW9ucyA+PSAxMDAwMDAwID8gYCR7dGhpcy5jdXRGbG9hdChyb29tQ29uZmlnLkVudHJhbmNlUmVzdHJpY3Rpb25zIC8gMTAwMDApfeS4h2AgOiB0aGlzLmN1dEZsb2F0KHJvb21Db25maWcuRW50cmFuY2VSZXN0cmljdGlvbnMpO1xyXG4gICAgICAgICAgICB0aGlzLmxldmVsW2ldLmdldENoaWxkQnlOYW1lKFwiZGl6aHVsYW91dFwiKS5nZXRDaGlsZEJ5TmFtZSgnbGFiX3RvcCcpLmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gYCR7cm9vbUNvbmZpZy5CYXNlQ29uc3VtZSA+PSAxMDAwMDAwID8gdGhpcy5jdXRGbG9hdChyb29tQ29uZmlnLkJhc2VDb25zdW1lIC8gMTAwMDApICsgJ+S4hycgOiB0aGlzLmN1dEZsb2F0KHJvb21Db25maWcuQmFzZUNvbnN1bWUpfWA7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmxldmVsW2ldLmdldENoaWxkQnlOYW1lKFwiemh1bnJ1bGF5b3V0XCIpLmdldENoaWxkQnlOYW1lKCdsYWJfY2VudGVyJykuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKS5zdHJpbmcgPSBkb3duU3RyaW5nO1xyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBzZXRHYW1lSWQoZ2FtZWlkKSB7XHJcbiAgICAgICAgdGhpcy5nYW1laWQgPSBnYW1laWQ7XHJcbiAgICB9LFxyXG5cclxuICAgIHVwZGF0ZUJnSW5mbygpIHtcclxuXHJcbiAgICB9LFxyXG4gICAgY2xpY2tfdXNlcmluZm8oKSB7XHJcbiAgICAgICAgZ2xHYW1lLnBhbmVsLnNob3dQYW5lbEJ5TmFtZShcInVzZXJpbmZvXCIpO1xyXG4gICAgfSxcclxuICAgIGNsaWNrX2FkZGdvbGQoKSB7XHJcbiAgICAgICAgZ2xHYW1lLnBhbmVsLnNob3dTaG9wKDMwKTtcclxuICAgIH0sXHJcbiAgICBjbGlja19iYWNrKCkge1xyXG4gICAgICAgIGdsR2FtZS5yZWFkeXJvb20ucmVxRXhpdEFyZWEoKTtcclxuICAgICAgICB0aGlzLnJlbW92ZSgpO1xyXG4gICAgfSxcclxuICAgIGNsaWNrX2hlbHAoKSB7XHJcbiAgICAgICAgbGV0IHBhbmVsID0gZ2xHYW1lLnBhbmVsLnNob3dQYW5lbCh0aGlzLmhlbHBfcHJlKTtcclxuICAgICAgICBwYW5lbC56SW5kZXggPSAzMDtcclxuICAgIH0sXHJcbiAgICBjbGlja19yZWNvcmQoKSB7XHJcbiAgICAgICAgbGV0IHBhbmVsID0gZ2xHYW1lLnBhbmVsLnNob3dQYW5lbCh0aGlzLnJlY29yZF9wcmUpO1xyXG4gICAgICAgIHBhbmVsLnpJbmRleCA9IDMwO1xyXG4gICAgfSxcclxuXHJcbiAgICBzZXQoa2V5LCB2YWx1ZSkge1xyXG4gICAgICAgIHRoaXNba2V5XSA9IHZhbHVlO1xyXG4gICAgfSxcclxuICAgIGdldChrZXkpIHtcclxuICAgICAgICByZXR1cm4gdGhpc1trZXldO1xyXG4gICAgfSxcclxuICAgIE9uRGVzdHJveSgpIHtcclxuICAgICAgICB0aGlzLnVucmVnaXN0ZXJFdmVudCgpO1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9mZihNRVNTQUdFLlVJLlJPT01fRU5URVJfU0hPVywgdGhpcyk7XHJcbiAgICAgICAgZ2xHYW1lLmVtaXR0ZXIub2ZmKE1FU1NBR0UuVUkuUk9PTV9FTlRFUl9ISURFLCB0aGlzKTtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vZmYoXCJub2RlUmVtb3ZlXCIsIHRoaXMpO1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9mZihcInVwZGF0ZVVzZXJEYXRhXCIsIHRoaXMpO1xyXG4gICAgfSxcclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19