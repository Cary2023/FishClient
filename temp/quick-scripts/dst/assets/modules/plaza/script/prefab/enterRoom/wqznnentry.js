
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/modules/plaza/script/prefab/enterRoom/wqznnentry.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'fec91qgsM1MMYTDYG+6YmO5', 'wqznnentry');
// modules/plaza/script/prefab/enterRoom/wqznnentry.js

"use strict";

glGame.baseclass.extend({
  properties: {
    goldCount: cc.Label,
    wqznn_record: cc.Prefab,
    wqznn_gamerule: cc.Prefab,
    level: {
      type: cc.Node,
      "default": []
    },
    BGM: {
      type: cc.AudioClip,
      "default": null
    },
    //sp_apear: sp.Skeleton,
    endPos: cc.Node
  },
  // LIFE-CYCLE CALLBACKS:
  onLoad: function onLoad() {
    this.gameid = 0;
    this.node.zIndex = 20;
    glGame.emitter.on(MESSAGE.UI.ROOM_ENTER_SHOW, this.RootNodeShow, this);
    glGame.emitter.on(MESSAGE.UI.ROOM_ENTER_HIDE, this.RootNodeHide, this);
    glGame.emitter.on("nodeRemove", this.click_back, this);
    glGame.emitter.on("updateUserData", this.updateuserInfo, this);
    this.updateuserInfo();
    this.registerEvent();
    this.reqEnterArea();
  },
  RootNodeShow: function RootNodeShow() {
    this.node.active = true;
    this.registerEvent();
    this.reqEnterArea();
  },
  RootNodeHide: function RootNodeHide() {
    this.node.active = false;
    this.resetView();
    this.unregisterEvent();
  },
  //事件监听
  registerEvent: function registerEvent() {
    glGame.emitter.on("goldOnlineNum", this.goldOnlineNum, this);
    glGame.emitter.on("onGameConfig", this.onGameConfig, this);
  },
  //事件销毁
  unregisterEvent: function unregisterEvent() {
    glGame.emitter.off("goldOnlineNum", this);
    glGame.emitter.off("onGameConfig", this);
  },
  onGameConfig: function onGameConfig(msg) {
    this.gameConfig = msg; // this.sp_apear.node.active = true;
    // this.sp_apear.node.opacity = 255;
    // this.sp_apear.setAnimation(0, "animation", false);
    // this.sp_apear.setCompleteListener((trackEntry, loopCount) => {
    //     this.sp_apear.node.runAction(cc.sequence(
    //         cc.delayTime(0.6),
    //         cc.spawn(cc.fadeOut(0.3),
    //             cc.callFunc(() => {
    //                 this.initUI();
    //             }))
    //     ))
    // })

    this.initUI();
  },
  goldOnlineNum: function goldOnlineNum(msg) {
    console.log("这是在线人数的消息", msg);
    var count = this.level.length;

    for (var i = 0; i < 3; i++) {
      if (msg[i + 1]) {
        this.level[i].getChildByName("people_num").getComponent(cc.Label).string = msg[i + 1];
      }
    }
  },
  initUI: function initUI() {
    this.node.active = true;
    var configure = this.gameConfig;
    var count = this.level.length;
    this.level[0].active = true;

    for (var i = 1; i < count; i++) {
      this.level[i].getChildByName("dizhulaout").getChildByName("dizhu_num").getComponent(cc.Label).string = this.cutFloat(configure[i].BaseChips);
      this.level[i].getChildByName("zhunrulayout").getChildByName("zhunru_num").getComponent(cc.Label).string = this.cutFloat(configure[i].EntranceRestrictions);
      this.level[i].active = true;
    }

    this.playMove();
  },
  //打开界面的图标移动动作
  playMove: function playMove() {
    var count = this.level.length;
    var index = 0;

    for (var i = count - 1; i >= 0; i--) {
      this.level[i].x = -(this.node.width / 2 + this.level[i].width / 2);
      this.level[i].active = true;
      this.level[i].runAction(cc.sequence(cc.delayTime(index * 0.05), cc.moveTo(0.25, cc.v2(this.endPos.children[i].x + 40, this.endPos.children[i].y)), cc.moveTo(0.1, this.endPos.children[i].position)));
      index++;
    }
  },
  resetView: function resetView() {
    for (var i = 0; i < 4; i++) {
      this.level[i].active = false;
    }
  },
  reqEnterArea: function reqEnterArea() {
    this.gameID = glGame.scenetag.WQZNN;
    glGame.readyroom.reqEnterArea(glGame.scenetag.WQZNN);
  },
  onClick: function onClick(name, node) {
    switch (name) {
      case "btn_back":
        this.click_back();
        break;

      case "btn_help":
        this.click_help();
        break;

      case "btn_record":
        this.click_record();
        break;

      case "mycoinInfo":
        this.click_addgold();
        break;

      case "headbg":
        this.click_userinfo();
        break;

      case "btn_chongzhi":
        this.click_addgold();
        break;

      case "primary":
        this.enterGame(99);
        break;

      case "intermediate":
        this.enterGame(1);
        break;

      case "senior":
        this.enterGame(2);
        break;

      case "tuhao":
        this.enterGame(3);
        break;

      case "supremacy":
        this.enterGame(4);
        break;

      case "volvo":
        this.enterGame(5);
        break;

      default:
        console.error("no find button name -> %s", name);
    }
  },

  /**
  * 进入金币场房间
  * @param level 场次类型 1:初级场 2:中级场 3:高级场 4:土豪场 5:至尊场
  */
  enterGame: function enterGame(level) {
    var _this = this;

    glGame.room.reqMyGameState(this.gameID, level).then(function () {
      var gameID = _this.gameID;

      if (_this.gameConfig[level] == null) {
        glGame.panel.showMsgBox('提示', '该房间尚未开放，请尝试其他房间。');
        return;
      }

      if (glGame.user.isTourist()) {
        if (level != 99) {
          glGame.panel.showRegisteredGift(true);
          return;
        }
      }

      if (glGame.user.suspicious == 1 && glGame.user.game == 2 || glGame.user.is_game == 2) {
        glGame.panel.showDialog("", "您的账号数据异常，暂时禁止进入游戏，如有疑问，请联系客服！", function () {
          glGame.panel.showService();
        }, function () {}, "我知道了", "联系客服");
        return;
      }

      if (_this.gameConfig[level].EntranceRestrictions > glGame.user.get("coin")) {
        console.log("这是当前的房间限制", _this.gameConfig);
        var string = "<color=#99C7FF>\u60A8\u7684\u91D1\u5E01\u4E0D\u8DB3\uFF0C\u8BE5\u623F\u95F4\u9700\u8981</c> <color=#ff0000> ".concat(_this.cutFloat(_this.gameConfig[level].EntranceRestrictions), "  </c><color=#99C7FF>\u91D1\u5E01\u624D\u53EF\u4E0B\u6CE8\uFF0C\u662F\u5426\u9A6C\u4E0A\u524D\u5F80\u5145\u503C\uFF1F</c>");
        glGame.panel.showDialog("", string, function () {
          glGame.panel.showShop(100);
        }, function () {}, "取消", "充值");
        return;
      }

      glGame.panel.showJuHua(); // glGame.readyroom.reqExitArea();

      _this.node.runAction(cc.sequence(cc.delayTime(15), cc.callFunc(function () {
        glGame.panel.closeJuHua();
      }))); // TODO
      // reqGoldRoomVerify为旧的进入房间方法，需要先请求验证，再进入房间
      // setGoldRoomInfo 新的进入房间方法，无需验证，设置游戏类型以及房间信息后，直接进入房间
      // if (glGame.enterRoomVerification) {
      //     glGame.room.reqGoldRoomVerify(gameID, level);
      // } else {
      //     glGame.room.setGoldRoomInfo(gameID, level);
      // }


      glGame.room.setGoldRoomInfo(gameID, level);
    });
  },

  /**
   * 检查玩家金币是否足够
   * @returns {boolean}
   */
  checkGold: function checkGold(coin, minCion) {
    console.log("金币检测", coin, minCion);

    if (parseInt(coin) < parseInt(minCion)) {
      glGame.panel.showDialog(glGame.i18n.t("USER.GOLDLACK.TITLE"), glGame.i18n.t("USER.GOLDLACK.CONTENT"), function () {
        glGame.panel.showPanelByName("shop");
      }, null);
      return false;
    }

    return true;
  },
  cutFloat: function cutFloat(value) {
    return Number(value).div(100).toString();
  },
  showUserInfo: function showUserInfo() {
    glGame.panel.showRemoteImage(this.Playerhead, glGame.user.get("headURL"));
  },
  updateuserInfo: function updateuserInfo() {
    var coin = glGame.user.get("coin");
    this.goldCount.string = glGame.user.GoldTemp(coin);
  },
  setGameId: function setGameId(gameid) {
    this.gameid = gameid;
  },
  updateBgInfo: function updateBgInfo() {},
  click_userinfo: function click_userinfo() {
    glGame.panel.showPanelByName("userinfo");
  },
  click_addgold: function click_addgold() {
    glGame.panel.showShop(30);
  },
  click_back: function click_back() {
    glGame.readyroom.reqExitArea();
    this.remove();
  },
  click_help: function click_help() {
    var wqznn_gamerule = glGame.panel.showPanel(this.wqznn_gamerule);
    wqznn_gamerule.zIndex = 30;
  },
  click_record: function click_record() {
    var wqznn_record = glGame.panel.showPanel(this.wqznn_record);
    wqznn_record.zIndex = 30;
  },
  set: function set(key, value) {
    this[key] = value;
  },
  get: function get(key) {
    return this[key];
  },
  OnDestroy: function OnDestroy() {
    glGame.emitter.off(MESSAGE.UI.ROOM_ENTER_SHOW, this);
    glGame.emitter.off(MESSAGE.UI.ROOM_ENTER_HIDE, this);
    glGame.emitter.off("nodeRemove", this);
    glGame.emitter.off("updateUserData", this);
    this.unregisterEvent();
  } // update (dt) {},

});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcbW9kdWxlc1xccGxhemFcXHNjcmlwdFxccHJlZmFiXFxlbnRlclJvb21cXHdxem5uZW50cnkuanMiXSwibmFtZXMiOlsiZ2xHYW1lIiwiYmFzZWNsYXNzIiwiZXh0ZW5kIiwicHJvcGVydGllcyIsImdvbGRDb3VudCIsImNjIiwiTGFiZWwiLCJ3cXpubl9yZWNvcmQiLCJQcmVmYWIiLCJ3cXpubl9nYW1lcnVsZSIsImxldmVsIiwidHlwZSIsIk5vZGUiLCJCR00iLCJBdWRpb0NsaXAiLCJlbmRQb3MiLCJvbkxvYWQiLCJnYW1laWQiLCJub2RlIiwiekluZGV4IiwiZW1pdHRlciIsIm9uIiwiTUVTU0FHRSIsIlVJIiwiUk9PTV9FTlRFUl9TSE9XIiwiUm9vdE5vZGVTaG93IiwiUk9PTV9FTlRFUl9ISURFIiwiUm9vdE5vZGVIaWRlIiwiY2xpY2tfYmFjayIsInVwZGF0ZXVzZXJJbmZvIiwicmVnaXN0ZXJFdmVudCIsInJlcUVudGVyQXJlYSIsImFjdGl2ZSIsInJlc2V0VmlldyIsInVucmVnaXN0ZXJFdmVudCIsImdvbGRPbmxpbmVOdW0iLCJvbkdhbWVDb25maWciLCJvZmYiLCJtc2ciLCJnYW1lQ29uZmlnIiwiaW5pdFVJIiwiY29uc29sZSIsImxvZyIsImNvdW50IiwibGVuZ3RoIiwiaSIsImdldENoaWxkQnlOYW1lIiwiZ2V0Q29tcG9uZW50Iiwic3RyaW5nIiwiY29uZmlndXJlIiwiY3V0RmxvYXQiLCJCYXNlQ2hpcHMiLCJFbnRyYW5jZVJlc3RyaWN0aW9ucyIsInBsYXlNb3ZlIiwiaW5kZXgiLCJ4Iiwid2lkdGgiLCJydW5BY3Rpb24iLCJzZXF1ZW5jZSIsImRlbGF5VGltZSIsIm1vdmVUbyIsInYyIiwiY2hpbGRyZW4iLCJ5IiwicG9zaXRpb24iLCJnYW1lSUQiLCJzY2VuZXRhZyIsIldRWk5OIiwicmVhZHlyb29tIiwib25DbGljayIsIm5hbWUiLCJjbGlja19oZWxwIiwiY2xpY2tfcmVjb3JkIiwiY2xpY2tfYWRkZ29sZCIsImNsaWNrX3VzZXJpbmZvIiwiZW50ZXJHYW1lIiwiZXJyb3IiLCJyb29tIiwicmVxTXlHYW1lU3RhdGUiLCJ0aGVuIiwicGFuZWwiLCJzaG93TXNnQm94IiwidXNlciIsImlzVG91cmlzdCIsInNob3dSZWdpc3RlcmVkR2lmdCIsInN1c3BpY2lvdXMiLCJnYW1lIiwiaXNfZ2FtZSIsInNob3dEaWFsb2ciLCJzaG93U2VydmljZSIsImdldCIsInNob3dTaG9wIiwic2hvd0p1SHVhIiwiY2FsbEZ1bmMiLCJjbG9zZUp1SHVhIiwic2V0R29sZFJvb21JbmZvIiwiY2hlY2tHb2xkIiwiY29pbiIsIm1pbkNpb24iLCJwYXJzZUludCIsImkxOG4iLCJ0Iiwic2hvd1BhbmVsQnlOYW1lIiwidmFsdWUiLCJOdW1iZXIiLCJkaXYiLCJ0b1N0cmluZyIsInNob3dVc2VySW5mbyIsInNob3dSZW1vdGVJbWFnZSIsIlBsYXllcmhlYWQiLCJHb2xkVGVtcCIsInNldEdhbWVJZCIsInVwZGF0ZUJnSW5mbyIsInJlcUV4aXRBcmVhIiwicmVtb3ZlIiwic2hvd1BhbmVsIiwic2V0Iiwia2V5IiwiT25EZXN0cm95Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBQSxNQUFNLENBQUNDLFNBQVAsQ0FBaUJDLE1BQWpCLENBQXdCO0FBRXBCQyxFQUFBQSxVQUFVLEVBQUU7QUFDUkMsSUFBQUEsU0FBUyxFQUFFQyxFQUFFLENBQUNDLEtBRE47QUFFUkMsSUFBQUEsWUFBWSxFQUFFRixFQUFFLENBQUNHLE1BRlQ7QUFHUkMsSUFBQUEsY0FBYyxFQUFFSixFQUFFLENBQUNHLE1BSFg7QUFJUkUsSUFBQUEsS0FBSyxFQUFFO0FBQ0hDLE1BQUFBLElBQUksRUFBRU4sRUFBRSxDQUFDTyxJQUROO0FBRUgsaUJBQVM7QUFGTixLQUpDO0FBUVJDLElBQUFBLEdBQUcsRUFBRTtBQUNERixNQUFBQSxJQUFJLEVBQUVOLEVBQUUsQ0FBQ1MsU0FEUjtBQUVELGlCQUFTO0FBRlIsS0FSRztBQVlSO0FBQ0FDLElBQUFBLE1BQU0sRUFB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QUNBeEIsSUFBQUEsTUFBTSxDQUFDb0IsT0FBUCxDQUFlaUIsR0FBZixDQUFtQmYsT0FBTyxDQUFDQyxFQUFSLENBQVdHLGVBQTlCLEVBQStDLElBQS9DO0FBQ0ExQixJQUFBQSxNQUFNLENBQUNvQixPQUFQLENBQWVpQixHQUFmLENBQW1CLFlBQW5CLEVBQWlDLElBQWpDO0FBQ0FyQyxJQUFBQSxNQUFNLENBQUNvQixPQUFQLENBQWVpQixHQUFmLENBQW1CLGdCQUFuQixFQUFxQyxJQUFyQztBQUNBLFNBQUtILGVBQUw7QUFDSCxHQWpQbUIsQ0FrUHBCOztBQWxQb0IsQ0FBeEIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImdsR2FtZS5iYXNlY2xhc3MuZXh0ZW5kKHtcclxuXHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcbiAgICAgICAgZ29sZENvdW50OiBjYy5MYWJlbCxcclxuICAgICAgICB3cXpubl9yZWNvcmQ6IGNjLlByZWZhYixcclxuICAgICAgICB3cXpubl9nYW1lcnVsZTogY2MuUHJlZmFiLFxyXG4gICAgICAgIGxldmVsOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IGNjLk5vZGUsXHJcbiAgICAgICAgICAgIGRlZmF1bHQ6IFtdXHJcbiAgICAgICAgfSxcclxuICAgICAgICBCR006IHtcclxuICAgICAgICAgICAgdHlwZTogY2MuQXVkaW9DbGlwLFxyXG4gICAgICAgICAgICBkZWZhdWx0OiBudWxsLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgLy9zcF9hcGVhcjogc3AuU2tlbGV0b24sXHJcbiAgICAgICAgZW5kUG9zOiBjYy5Ob2RlLFxyXG4gICAgfSxcclxuXHJcbiAgICAvLyBMSUZFLUNZQ0xFIENBTExCQUNLUzpcclxuXHJcbiAgICBvbkxvYWQoKSB7XHJcbiAgICAgICAgdGhpcy5nYW1laWQgPSAwO1xyXG4gICAgICAgIHRoaXMubm9kZS56SW5kZXggPSAyMDtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vbihNRVNTQUdFLlVJLlJPT01fRU5URVJfU0hPVywgdGhpcy5Sb290Tm9kZVNob3csIHRoaXMpO1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9uKE1FU1NBR0UuVUkuUk9PTV9FTlRFUl9ISURFLCB0aGlzLlJvb3ROb2RlSGlkZSwgdGhpcyk7XHJcbiAgICAgICAgZ2xHYW1lLmVtaXR0ZXIub24oXCJub2RlUmVtb3ZlXCIsIHRoaXMuY2xpY2tfYmFjaywgdGhpcyk7XHJcbiAgICAgICAgZ2xHYW1lLmVtaXR0ZXIub24oXCJ1cGRhdGVVc2VyRGF0YVwiLCB0aGlzLnVwZGF0ZXVzZXJJbmZvLCB0aGlzKTtcclxuICAgICAgICB0aGlzLnVwZGF0ZXVzZXJJbmZvKCk7XHJcbiAgICAgICAgdGhpcy5yZWdpc3RlckV2ZW50KCk7XHJcbiAgICAgICAgdGhpcy5yZXFFbnRlckFyZWEoKTtcclxuICAgIH0sXHJcbiAgICBSb290Tm9kZVNob3coKSB7XHJcbiAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5yZWdpc3RlckV2ZW50KCk7XHJcbiAgICAgICAgdGhpcy5yZXFFbnRlckFyZWEoKTtcclxuICAgIH0sXHJcbiAgICBSb290Tm9kZUhpZGUoKSB7XHJcbiAgICAgICAgdGhpcy5ub2RlLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMucmVzZXRWaWV3KCk7XHJcbiAgICAgICAgdGhpcy51bnJlZ2lzdGVyRXZlbnQoKTtcclxuICAgIH0sXHJcbiAgICAvL+S6i+S7tuebkeWQrFxyXG4gICAgcmVnaXN0ZXJFdmVudCgpIHtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vbihcImdvbGRPbmxpbmVOdW1cIiwgdGhpcy5nb2xkT25saW5lTnVtLCB0aGlzKTtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vbihcIm9uR2FtZUNvbmZpZ1wiLCB0aGlzLm9uR2FtZUNvbmZpZywgdGhpcyk7XHJcbiAgICB9LFxyXG4gICAgLy/kuovku7bplIDmr4FcclxuICAgIHVucmVnaXN0ZXJFdmVudCgpIHtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vZmYoXCJnb2xkT25saW5lTnVtXCIsIHRoaXMpO1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9mZihcIm9uR2FtZUNvbmZpZ1wiLCB0aGlzKTtcclxuICAgIH0sXHJcbiAgICBvbkdhbWVDb25maWcobXNnKSB7XHJcbiAgICAgICAgdGhpcy5nYW1lQ29uZmlnID0gbXNnO1xyXG4gICAgICAgIC8vIHRoaXMuc3BfYXBlYXIubm9kZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIC8vIHRoaXMuc3BfYXBlYXIubm9kZS5vcGFjaXR5ID0gMjU1O1xyXG4gICAgICAgIC8vIHRoaXMuc3BfYXBlYXIuc2V0QW5pbWF0aW9uKDAsIFwiYW5pbWF0aW9uXCIsIGZhbHNlKTtcclxuICAgICAgICAvLyB0aGlzLnNwX2FwZWFyLnNldENvbXBsZXRlTGlzdGVuZXIoKHRyYWNrRW50cnksIGxvb3BDb3VudCkgPT4ge1xyXG4gICAgICAgIC8vICAgICB0aGlzLnNwX2FwZWFyLm5vZGUucnVuQWN0aW9uKGNjLnNlcXVlbmNlKFxyXG4gICAgICAgIC8vICAgICAgICAgY2MuZGVsYXlUaW1lKDAuNiksXHJcbiAgICAgICAgLy8gICAgICAgICBjYy5zcGF3bihjYy5mYWRlT3V0KDAuMyksXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgY2MuY2FsbEZ1bmMoKCkgPT4ge1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICB0aGlzLmluaXRVSSgpO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgIH0pKVxyXG5cclxuICAgICAgICAvLyAgICAgKSlcclxuICAgICAgICAvLyB9KVxyXG4gICAgICAgIHRoaXMuaW5pdFVJKCk7XHJcbiAgICB9LFxyXG4gICAgZ29sZE9ubGluZU51bShtc2cpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIui/meaYr+WcqOe6v+S6uuaVsOeahOa2iOaBr1wiLCBtc2cpXHJcbiAgICAgICAgbGV0IGNvdW50ID0gdGhpcy5sZXZlbC5sZW5ndGg7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAzOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKG1zZ1tpICsgMV0pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMubGV2ZWxbaV0uZ2V0Q2hpbGRCeU5hbWUoXCJwZW9wbGVfbnVtXCIpLmdldENvbXBvbmVudChjYy5MYWJlbCkuc3RyaW5nID0gbXNnW2kgKyAxXVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGluaXRVSSgpIHtcclxuICAgICAgICB0aGlzLm5vZGUuYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICBsZXQgY29uZmlndXJlID0gdGhpcy5nYW1lQ29uZmlnO1xyXG4gICAgICAgIGxldCBjb3VudCA9IHRoaXMubGV2ZWwubGVuZ3RoO1xyXG4gICAgICAgIHRoaXMubGV2ZWxbMF0uYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8IGNvdW50OyBpKyspIHtcclxuICAgICAgICAgICAgdGhpcy5sZXZlbFtpXS5nZXRDaGlsZEJ5TmFtZShcImRpemh1bGFvdXRcIikuZ2V0Q2hpbGRCeU5hbWUoXCJkaXpodV9udW1cIikuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKS5zdHJpbmcgPSB0aGlzLmN1dEZsb2F0KGNvbmZpZ3VyZVtpXS5CYXNlQ2hpcHMpO1xyXG4gICAgICAgICAgICB0aGlzLmxldmVsW2ldLmdldENoaWxkQnlOYW1lKFwiemh1bnJ1bGF5b3V0XCIpLmdldENoaWxkQnlOYW1lKFwiemh1bnJ1X251bVwiKS5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IHRoaXMuY3V0RmxvYXQoY29uZmlndXJlW2ldLkVudHJhbmNlUmVzdHJpY3Rpb25zKTtcclxuICAgICAgICAgICAgdGhpcy5sZXZlbFtpXS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnBsYXlNb3ZlKCk7XHJcbiAgICB9LFxyXG4gICAgLy/miZPlvIDnlYzpnaLnmoTlm77moIfnp7vliqjliqjkvZxcclxuICAgIHBsYXlNb3ZlKCkge1xyXG4gICAgICAgIGxldCBjb3VudCA9IHRoaXMubGV2ZWwubGVuZ3RoO1xyXG4gICAgICAgIGxldCBpbmRleCA9IDA7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IGNvdW50IC0gMTsgaSA+PSAwOyBpLS0pIHtcclxuICAgICAgICAgICAgdGhpcy5sZXZlbFtpXS54ID0gLSh0aGlzLm5vZGUud2lkdGggLyAyICsgdGhpcy5sZXZlbFtpXS53aWR0aCAvIDIpO1xyXG4gICAgICAgICAgICB0aGlzLmxldmVsW2ldLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMubGV2ZWxbaV0ucnVuQWN0aW9uKGNjLnNlcXVlbmNlKFxyXG4gICAgICAgICAgICAgICAgY2MuZGVsYXlUaW1lKGluZGV4ICogMC4wNSksXHJcbiAgICAgICAgICAgICAgICBjYy5tb3ZlVG8oMC4yNSwgY2MudjIodGhpcy5lbmRQb3MuY2hpbGRyZW5baV0ueCArIDQwLCB0aGlzLmVuZFBvcy5jaGlsZHJlbltpXS55KSksXHJcbiAgICAgICAgICAgICAgICBjYy5tb3ZlVG8oMC4xLCB0aGlzLmVuZFBvcy5jaGlsZHJlbltpXS5wb3NpdGlvbilcclxuICAgICAgICAgICAgKSlcclxuICAgICAgICAgICAgaW5kZXgrK1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9LFxyXG4gICAgcmVzZXRWaWV3KCkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGV2ZWxbaV0uYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIHJlcUVudGVyQXJlYSgpIHtcclxuICAgICAgICB0aGlzLmdhbWVJRCA9IGdsR2FtZS5zY2VuZXRhZy5XUVpOTjtcclxuICAgICAgICBnbEdhbWUucmVhZHlyb29tLnJlcUVudGVyQXJlYShnbEdhbWUuc2NlbmV0YWcuV1FaTk4pO1xyXG5cclxuICAgIH0sXHJcbiAgICBvbkNsaWNrKG5hbWUsIG5vZGUpIHtcclxuICAgICAgICBzd2l0Y2ggKG5hbWUpIHtcclxuICAgICAgICAgICAgY2FzZSBcImJ0bl9iYWNrXCI6IHRoaXMuY2xpY2tfYmFjaygpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImJ0bl9oZWxwXCI6IHRoaXMuY2xpY2tfaGVscCgpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImJ0bl9yZWNvcmRcIjogdGhpcy5jbGlja19yZWNvcmQoKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJteWNvaW5JbmZvXCI6IHRoaXMuY2xpY2tfYWRkZ29sZCgpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImhlYWRiZ1wiOiB0aGlzLmNsaWNrX3VzZXJpbmZvKCk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiYnRuX2Nob25nemhpXCI6IHRoaXMuY2xpY2tfYWRkZ29sZCgpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcInByaW1hcnlcIjogdGhpcy5lbnRlckdhbWUoOTkpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImludGVybWVkaWF0ZVwiOiB0aGlzLmVudGVyR2FtZSgxKTsgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJzZW5pb3JcIjogdGhpcy5lbnRlckdhbWUoMik7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwidHVoYW9cIjogdGhpcy5lbnRlckdhbWUoMyk7IGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwic3VwcmVtYWN5XCI6IHRoaXMuZW50ZXJHYW1lKDQpOyBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcInZvbHZvXCI6IHRoaXMuZW50ZXJHYW1lKDUpOyBicmVhaztcclxuICAgICAgICAgICAgZGVmYXVsdDogY29uc29sZS5lcnJvcihcIm5vIGZpbmQgYnV0dG9uIG5hbWUgLT4gJXNcIiwgbmFtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIC8qKlxyXG4gICAgKiDov5vlhaXph5HluIHlnLrmiL/pl7RcclxuICAgICogQHBhcmFtIGxldmVsIOWcuuasoeexu+WeiyAxOuWInee6p+WcuiAyOuS4ree6p+WcuiAzOumrmOe6p+WcuiA0OuWcn+ixquWcuiA1OuiHs+WwiuWculxyXG4gICAgKi9cclxuICAgIGVudGVyR2FtZShsZXZlbCkge1xyXG4gICAgICAgIGdsR2FtZS5yb29tLnJlcU15R2FtZVN0YXRlKHRoaXMuZ2FtZUlELCBsZXZlbCkudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBnYW1lSUQgPSB0aGlzLmdhbWVJRDtcclxuICAgICAgICAgICAgaWYgKHRoaXMuZ2FtZUNvbmZpZ1tsZXZlbF0gPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgZ2xHYW1lLnBhbmVsLnNob3dNc2dCb3goJ+aPkOekuicsICfor6XmiL/pl7TlsJrmnKrlvIDmlL7vvIzor7flsJ3or5Xlhbbku5bmiL/pl7TjgIInKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoZ2xHYW1lLnVzZXIuaXNUb3VyaXN0KCkpIHtcclxuICAgICAgICAgICAgICAgIGlmIChsZXZlbCAhPSA5OSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGdsR2FtZS5wYW5lbC5zaG93UmVnaXN0ZXJlZEdpZnQodHJ1ZSlcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKChnbEdhbWUudXNlci5zdXNwaWNpb3VzID09IDEgJiYgZ2xHYW1lLnVzZXIuZ2FtZSA9PSAyKSB8fCBnbEdhbWUudXNlci5pc19nYW1lID09IDIpIHtcclxuICAgICAgICAgICAgICAgIGdsR2FtZS5wYW5lbC5zaG93RGlhbG9nKFwiXCIsIFwi5oKo55qE6LSm5Y+35pWw5o2u5byC5bi477yM5pqC5pe256aB5q2i6L+b5YWl5ri45oiP77yM5aaC5pyJ55aR6Zeu77yM6K+36IGU57O75a6i5pyN77yBXCIsICgpID0+IHsgZ2xHYW1lLnBhbmVsLnNob3dTZXJ2aWNlKCkgfSwgKCkgPT4geyB9LCBcIuaIkeefpemBk+S6hlwiLCBcIuiBlOezu+WuouacjVwiKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmdhbWVDb25maWdbbGV2ZWxdLkVudHJhbmNlUmVzdHJpY3Rpb25zID4gZ2xHYW1lLnVzZXIuZ2V0KFwiY29pblwiKSkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLov5nmmK/lvZPliY3nmoTmiL/pl7TpmZDliLZcIiwgdGhpcy5nYW1lQ29uZmlnKVxyXG4gICAgICAgICAgICAgICAgbGV0IHN0cmluZyA9IGA8Y29sb3I9Izk5QzdGRj7mgqjnmoTph5HluIHkuI3otrPvvIzor6XmiL/pl7TpnIDopoE8L2M+IDxjb2xvcj0jZmYwMDAwPiAke3RoaXMuY3V0RmxvYXQodGhpcy5nYW1lQ29uZmlnW2xldmVsXS5FbnRyYW5jZVJlc3RyaWN0aW9ucyl9ICA8L2M+PGNvbG9yPSM5OUM3RkY+6YeR5biB5omN5Y+v5LiL5rOo77yM5piv5ZCm6ams5LiK5YmN5b6A5YWF5YC877yfPC9jPmBcclxuICAgICAgICAgICAgICAgIGdsR2FtZS5wYW5lbC5zaG93RGlhbG9nKFwiXCIsIHN0cmluZywgKCkgPT4geyBnbEdhbWUucGFuZWwuc2hvd1Nob3AoMTAwKSB9LCAoKSA9PiB7IH0sIFwi5Y+W5raIXCIsIFwi5YWF5YC8XCIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZ2xHYW1lLnBhbmVsLnNob3dKdUh1YSgpO1xyXG4gICAgICAgICAgICAvLyBnbEdhbWUucmVhZHlyb29tLnJlcUV4aXRBcmVhKCk7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoXHJcbiAgICAgICAgICAgICAgICBjYy5kZWxheVRpbWUoMTUpLFxyXG4gICAgICAgICAgICAgICAgY2MuY2FsbEZ1bmMoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGdsR2FtZS5wYW5lbC5jbG9zZUp1SHVhKCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICApKVxyXG4gICAgICAgICAgICAvLyBUT0RPXHJcbiAgICAgICAgICAgIC8vIHJlcUdvbGRSb29tVmVyaWZ55Li65pen55qE6L+b5YWl5oi/6Ze05pa55rOV77yM6ZyA6KaB5YWI6K+35rGC6aqM6K+B77yM5YaN6L+b5YWl5oi/6Ze0XHJcbiAgICAgICAgICAgIC8vIHNldEdvbGRSb29tSW5mbyDmlrDnmoTov5vlhaXmiL/pl7Tmlrnms5XvvIzml6DpnIDpqozor4HvvIzorr7nva7muLjmiI/nsbvlnovku6Xlj4rmiL/pl7Tkv6Hmga/lkI7vvIznm7TmjqXov5vlhaXmiL/pl7RcclxuICAgICAgICAgICAgLy8gaWYgKGdsR2FtZS5lbnRlclJvb21WZXJpZmljYXRpb24pIHtcclxuICAgICAgICAgICAgLy8gICAgIGdsR2FtZS5yb29tLnJlcUdvbGRSb29tVmVyaWZ5KGdhbWVJRCwgbGV2ZWwpO1xyXG4gICAgICAgICAgICAvLyB9IGVsc2Uge1xyXG4gICAgICAgICAgICAvLyAgICAgZ2xHYW1lLnJvb20uc2V0R29sZFJvb21JbmZvKGdhbWVJRCwgbGV2ZWwpO1xyXG4gICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgIGdsR2FtZS5yb29tLnNldEdvbGRSb29tSW5mbyhnYW1lSUQsIGxldmVsKTtcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIC8qKlxyXG4gICAgICog5qOA5p+l546p5a626YeR5biB5piv5ZCm6Laz5aSfXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gICAgY2hlY2tHb2xkKGNvaW4sIG1pbkNpb24pIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIumHkeW4geajgOa1i1wiLCBjb2luLCBtaW5DaW9uKTtcclxuICAgICAgICBpZiAocGFyc2VJbnQoY29pbikgPCBwYXJzZUludChtaW5DaW9uKSkge1xyXG4gICAgICAgICAgICBnbEdhbWUucGFuZWwuc2hvd0RpYWxvZyhnbEdhbWUuaTE4bi50KFwiVVNFUi5HT0xETEFDSy5USVRMRVwiKSwgZ2xHYW1lLmkxOG4udChcIlVTRVIuR09MRExBQ0suQ09OVEVOVFwiKSwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgZ2xHYW1lLnBhbmVsLnNob3dQYW5lbEJ5TmFtZShcInNob3BcIik7XHJcbiAgICAgICAgICAgIH0sIG51bGwpO1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfSxcclxuICAgIGN1dEZsb2F0KHZhbHVlKSB7XHJcbiAgICAgICAgcmV0dXJuIChOdW1iZXIodmFsdWUpLmRpdigxMDApKS50b1N0cmluZygpO1xyXG4gICAgfSxcclxuICAgIHNob3dVc2VySW5mbygpIHtcclxuICAgICAgICBnbEdhbWUucGFuZWwuc2hvd1JlbW90ZUltYWdlKHRoaXMuUGxheWVyaGVhZCwgZ2xHYW1lLnVzZXIuZ2V0KFwiaGVhZFVSTFwiKSk7XHJcbiAgICB9LFxyXG4gICAgdXBkYXRldXNlckluZm8oKSB7XHJcbiAgICAgICAgbGV0IGNvaW4gPSBnbEdhbWUudXNlci5nZXQoXCJjb2luXCIpXHJcbiAgICAgICAgdGhpcy5nb2xkQ291bnQuc3RyaW5nID0gZ2xHYW1lLnVzZXIuR29sZFRlbXAoY29pbik7XHJcbiAgICB9LFxyXG5cclxuICAgIHNldEdhbWVJZChnYW1laWQpIHtcclxuICAgICAgICB0aGlzLmdhbWVpZCA9IGdhbWVpZDtcclxuICAgIH0sXHJcblxyXG4gICAgdXBkYXRlQmdJbmZvKCkge1xyXG5cclxuICAgIH0sXHJcbiAgICBjbGlja191c2VyaW5mbygpIHtcclxuICAgICAgICBnbEdhbWUucGFuZWwuc2hvd1BhbmVsQnlOYW1lKFwidXNlcmluZm9cIik7XHJcbiAgICB9LFxyXG4gICAgY2xpY2tfYWRkZ29sZCgpIHtcclxuICAgICAgICBnbEdhbWUucGFuZWwuc2hvd1Nob3AoMzApO1xyXG4gICAgfSxcclxuICAgIGNsaWNrX2JhY2soKSB7XHJcbiAgICAgICAgZ2xHYW1lLnJlYWR5cm9vbS5yZXFFeGl0QXJlYSgpO1xyXG4gICAgICAgIHRoaXMucmVtb3ZlKCk7XHJcbiAgICB9LFxyXG4gICAgY2xpY2tfaGVscCgpIHtcclxuICAgICAgICBsZXQgd3F6bm5fZ2FtZXJ1bGUgPSBnbEdhbWUucGFuZWwuc2hvd1BhbmVsKHRoaXMud3F6bm5fZ2FtZXJ1bGUpO1xyXG4gICAgICAgIHdxem5uX2dhbWVydWxlLnpJbmRleCA9IDMwO1xyXG4gICAgfSxcclxuICAgIGNsaWNrX3JlY29yZCgpIHtcclxuICAgICAgICBsZXQgd3F6bm5fcmVjb3JkID0gZ2xHYW1lLnBhbmVsLnNob3dQYW5lbCh0aGlzLndxem5uX3JlY29yZCk7XHJcbiAgICAgICAgd3F6bm5fcmVjb3JkLnpJbmRleCA9IDMwO1xyXG4gICAgfSxcclxuXHJcbiAgICBzZXQoa2V5LCB2YWx1ZSkge1xyXG4gICAgICAgIHRoaXNba2V5XSA9IHZhbHVlO1xyXG4gICAgfSxcclxuICAgIGdldChrZXkpIHtcclxuICAgICAgICByZXR1cm4gdGhpc1trZXldO1xyXG4gICAgfSxcclxuICAgIE9uRGVzdHJveSgpIHtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vZmYoTUVTU0FHRS5VSS5ST09NX0VOVEVSX1NIT1csIHRoaXMpO1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9mZihNRVNTQUdFLlVJLlJPT01fRU5URVJfSElERSwgdGhpcyk7XHJcbiAgICAgICAgZ2xHYW1lLmVtaXR0ZXIub2ZmKFwibm9kZVJlbW92ZVwiLCB0aGlzKTtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vZmYoXCJ1cGRhdGVVc2VyRGF0YVwiLCB0aGlzKTtcclxuICAgICAgICB0aGlzLnVucmVnaXN0ZXJFdmVudCgpO1xyXG4gICAgfSxcclxuICAgIC8vIHVwZGF0ZSAoZHQpIHt9LFxyXG59KTtcclxuIl19