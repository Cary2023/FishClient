
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/modules/games/nfish/script/prefab/nfish_Bg.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '75c45+wDaZOz7yztvBQuAym', 'nfish_Bg');
// modules/games/nfish/script/prefab/nfish_Bg.js

"use strict";

/***
 *  捕鱼：桌子BG
 * **/
var CONST = require("nfishConst");

glGame.baseclass.extend({
  properties: {},
  onLoad: function onLoad() {
    this.registerEvent();
    this.logic = require("nfishlogic").getInstance(); //数据中心

    this.index = 0;
    this.isSshockIng = false;
    this.time = 0; //水波波动时间

    this.wateSpeed = 1.5; //水波波动参数
  },
  start: function start() {},
  //注册监听
  registerEvent: function registerEvent() {
    glGame.emitter.on(CONST.clientEvent.changeBackGround, this.changeBackGroundHandler, this);
    glGame.emitter.on(CONST.clientEvent.seaWaveChangeBg, this.seaWaveChangeBgHandler, this);
    glGame.emitter.on(CONST.clientEvent.onSshock, this.onShockHandler, this); //震动屏幕
  },
  //反注册监听
  unregisterEvent: function unregisterEvent() {
    glGame.emitter.off(CONST.clientEvent.changeBackGround, this);
    glGame.emitter.off(CONST.clientEvent.seaWaveChangeBg, this);
    glGame.emitter.off(CONST.clientEvent.onSshock, this);
  },
  //水波赋值
  update: function update(dt) {
    if (this.material) {
      this.time += dt * this.wateSpeed;
      this.material.setProperty("time", this.time);
    }
  },
  //设置水波波及范围参数
  setResolution: function setResolution() {
    this.material.setProperty("resolution", cc.v2(this.node.width, this.node.height));
  },
  //震动 - 通用震动库
  onShockHandler: function onShockHandler() {
    var _this = this;

    if (this.isSshockIng) return;
    var SshockTime = 0.8;
    this.isSshockIng = true;
    this.oldPos = this.node.position;
    this.node.getComponent(cc.Widget).enabled = false;
    this.node.runAction(cc.repeatForever(cc.sequence(cc.moveTo(0.02, cc.v2(this.oldPos.x + 5, this.oldPos.y + 7)), cc.moveTo(0.02, cc.v2(this.oldPos.x - 6, this.oldPos.y + 7)), cc.moveTo(0.02, cc.v2(this.oldPos.x - 13, this.oldPos.y + 3)), cc.moveTo(0.02, cc.v2(this.oldPos.x + 3, this.oldPos.y - 6)), cc.moveTo(0.02, cc.v2(this.oldPos.x - 5, this.oldPos.y + 5)), cc.moveTo(0.02, cc.v2(this.oldPos.x + 2, this.oldPos.y - 8)), cc.moveTo(0.02, cc.v2(this.oldPos.x - 8, this.oldPos.y - 10)), cc.moveTo(0.02, cc.v2(this.oldPos.x + 3, this.oldPos.y + 10)), cc.moveTo(0.02, cc.v2(this.oldPos.x + 0, this.oldPos.y + 0)))));
    this.scheduleOnce(function () {
      _this.node.stopAllActions();

      _this.node.setPosition(_this.oldPos);

      _this.node.getComponent(cc.Widget).enabled = true;
      _this.isSshockIng = false;
    }, SshockTime);
  },
  //常规更换背景
  changeBackGroundHandler: function changeBackGroundHandler(bgIndex) {
    var MaxBgNum = 4;

    for (var i = 0; i < MaxBgNum; i++) {
      this.node.getChildByName("ui_Bg" + i).active = bgIndex == i;

      if (bgIndex == i) {
        this.material = this.node.getChildByName("ui_Bg" + i).getComponent(cc.Sprite).getMaterial(0);
        this.setResolution();
      }
    }

    this.index = bgIndex;
    glGame.emitter.emit(CONST.clientEvent.fishBgSound, this.index);
  },
  //海浪更换背景
  seaWaveChangeBgHandler: function seaWaveChangeBgHandler(bgIndex) {
    var old = Number("" + this.index);
    this.index = bgIndex;
    glGame.emitter.emit(CONST.clientEvent.fishBgSound, this.index);
    var old_Bg = this.node.getChildByName("ui_Bg" + old);
    var new_Bg = this.node.getChildByName("ui_Bg" + this.index);
    this.material = new_Bg.getComponent(cc.Sprite).getMaterial(0);
    this.setResolution();
    old_Bg.stopAllActions();
    new_Bg.stopAllActions();
    var winSizeWidth = this.logic.getIsRotation() ? cc.winSize.width : -cc.winSize.width;
    new_Bg.x = this.logic.getIsRotation() ? -winSizeWidth : cc.winSize.width;
    new_Bg.active = true;
    new_Bg.runAction(cc.moveTo(1.01, cc.v2(0, new_Bg.y)));
    old_Bg.runAction(cc.sequence(cc.moveTo(1.01, cc.v2(winSizeWidth, old_Bg.y)), cc.callFunc(function () {
      old_Bg.active = false;
      old_Bg.x = 0;
    })));
  },
  OnDestroy: function OnDestroy() {
    this.unregisterEvent();
  }
});

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcbW9kdWxlc1xcZ2FtZXNcXG5maXNoXFxzY3JpcHRcXHByZWZhYlxcbmZpc2hfQmcuanMiXSwibmFtZXMiOlsiQ09OU1QiLCJyZXF1aXJlIiwiZ2xHYW1lIiwiYmFzZWNsYXNzIiwiZXh0ZW5kIiwicHJvcGVydGllcyIsIm9uTG9hZCIsInJlZ2lzdGVyRXZlbnQiLCJsb2dpYyIsImdldEluc3RhbmNlIiwiaW5kZXgiLCJpc1NzaG9ja0luZyIsInRpbWUiLCJ3YXRlU3BlZWQiLCJzdGFydCIsImVtaXR0ZXIiLCJvbiIsImNsaWVudEV2ZW50IiwiY2hhbmdlQmFja0dyb3VuZCIsImNoYW5nZUJhY2tHcm91bmRIYW5kbGVyIiwic2VhV2F2ZUNoYW5nZUJnIiwic2VhV2F2ZUNoYW5nZUJnSGFuZGxlciIsIm9uU3Nob2NrIiwib25TaG9ja0hhbmRsZXIiLCJ1bnJlZ2lzdGVyRXZlbnQiLCJvZmYiLCJ1cGRhdGUiLCJkdCIsIm1hdGVyaWFsIiwic2V0UHJvcGVydHkiLCJzZXRSZXNvbHV0aW9uIiwiY2MiLCJ2MiIsIm5vZGUiLCJ3aWR0aCIsImhlaWdodCIsIlNzaG9ja1RpbWUiLCJvbGRQb3MiLCJwb3NpdGlvbiIsImdldENvbXBvbmVudCIsIldpZGdldCIsImVuYWJsZWQiLCJydW5BY3Rpb24iLCJyZXBlYXRGb3JldmVyIiwic2VxdWVuY2UiLCJtb3ZlVG8iLCJ4IiwieSIsInNjaGVkdWxlT25jZSIsInN0b3BBbGxBY3Rpb25zIiwic2V0UG9zaXRpb24iLCJiZ0luZGV4IiwiTWF4QmdOdW0iLCJpIiwiZ2V0Q2hpbGRCeU5hbWUiLCJhY3RpdmUiLCJTcHJpdGUiLCJnZXRNYXRlcmlhbCIsImVtaXQiLCJmaXNoQmdTb3VuZCIsIm9sZCIsIk51bWJlciIsIm9sZF9CZyIsIm5ld19CZyIsIndpblNpemVXaWR0aCIsImdldElzUm90YXRpb24iLCJ3aW5TaXplIiwiY2FsbEZ1bmMiLCJPbkRlc3Ryb3kiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7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QUFBQSxNQUFNLENBQUNkLGNBQVA7QUFDQSxRQUFNZSxZQUFZLEdBQUksS0FBS3hELEtBQUwsQ0FBV3lELGFBQVgsS0FBNkJsQyxFQUFFLENBQUNtQyxPQUFILENBQVdoQyxLQUF4QyxHQUFnRCxDQUFDSCxFQUFFLENBQUNtQyxPQUFILENBQVdoQyxLQUFsRjtBQUNBNkIsSUFBQUEsTUFBTSxDQUFDakIsQ0FBUCxHQUFXLEtBQUt0QyxLQUFMLENBQVd5RCxhQUFYLEtBQTZCLENBQUNELFlBQTlCLEdBQTZDakMsRUFBRSxDQUFDbUMsT0FBSCxDQUFXaEMsS0FBbkU7QUFDQTZCLElBQUFBLE1BQU0sQ0FBQ1IsTUFBUCxHQUFnQixJQUFoQjtBQUNBUSxJQUFBQSxNQUFNLENBQUNyQixTQUFQLENBQWlCWCxFQUFFLENBQUNjLE1BQUgsQ0FBVSxJQUFWLEVBQWVkLEVBQUUsQ0FBQ0MsRUFBSCxDQUFNLENBQU4sRUFBUStCLE1BQU0sQ0FBQ2hCLENBQWYsQ0FBZixDQUFqQjtBQUNBZSxJQUFBQSxNQUFNLENBQUNwQixTQUFQLENBQWlCWCxFQUFFLENBQUNhLFFBQUgsQ0FBWWIsRUFBRSxDQUFDYyxNQUFILENBQVUsSUFBVixFQUFlZCxFQUFFLENBQUNDLEVBQUgsQ0FBTWdDLFlBQU4sRUFBbUJGLE1BQU0sQ0FBQ2YsQ0FBMUIsQ0FBZixDQUFaLEVBQXlEaEIsRUFBRSxDQUFDb0MsUUFBSCxDQUFZLFlBQUk7QUFDdEZMLE1BQUFBLE1BQU0sQ0FBQ1AsTUFBUCxHQUFnQixLQUFoQjtBQUNBTyxNQUFBQSxNQUFNLENBQUNoQixDQUFQLEdBQVcsQ0FBWDtBQUNILEtBSHlFLENBQXpELENBQWpCO0FBSUgsR0F2Rm1CO0FBd0ZwQnNCLEVBQUFBLFNBeEZvQix1QkF3RlI7QUFDUixTQUFLNUMsZUFBTDtBQUNIO0FBMUZtQixDQUF4QiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLyoqKlxyXG4gKiAg5o2V6bG877ya5qGM5a2QQkdcclxuICogKiovXHJcbmxldCBDT05TVCA9IHJlcXVpcmUoXCJuZmlzaENvbnN0XCIpO1xyXG5nbEdhbWUuYmFzZWNsYXNzLmV4dGVuZCh7XHJcbiAgICBwcm9wZXJ0aWVzOiB7XHJcblxyXG4gICAgfSxcclxuICAgIG9uTG9hZCAoKSB7XHJcbiAgICAgICAgdGhpcy5yZWdpc3RlckV2ZW50KCk7XHJcbiAgICAgICAgdGhpcy5sb2dpYyA9IHJlcXVpcmUoXCJuZmlzaGxvZ2ljXCIpLmdldEluc3RhbmNlKCk7Ly/mlbDmja7kuK3lv4NcclxuICAgICAgICB0aGlzLmluZGV4ID0gMDtcclxuICAgICAgICB0aGlzLmlzU3Nob2NrSW5nID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy50aW1lID0gMDsvL+awtOazouazouWKqOaXtumXtFxyXG4gICAgICAgIHRoaXMud2F0ZVNwZWVkID0gMS41Oy8v5rC05rOi5rOi5Yqo5Y+C5pWwXHJcbiAgICB9LFxyXG4gICAgc3RhcnQgKCkge1xyXG4gICAgfSxcclxuICAgIC8v5rOo5YaM55uR5ZCsXHJcbiAgICByZWdpc3RlckV2ZW50KCkge1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9uKENPTlNULmNsaWVudEV2ZW50LmNoYW5nZUJhY2tHcm91bmQsdGhpcy5jaGFuZ2VCYWNrR3JvdW5kSGFuZGxlcix0aGlzKTtcclxuICAgICAgICBnbEdhbWUuZW1pdHRlci5vbihDT05TVC5jbGllbnRFdmVudC5zZWFXYXZlQ2hhbmdlQmcsdGhpcy5zZWFXYXZlQ2hhbmdlQmdIYW5kbGVyLHRoaXMpO1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9uKENPTlNULmNsaWVudEV2ZW50Lm9uU3Nob2NrLHRoaXMub25TaG9ja0hhbmRsZXIsdGhpcyk7ICAgICAgICAgICAgICAgICAgICAgLy/pnIfliqjlsY/luZVcclxuICAgIH0sXHJcbiAgICAvL+WPjeazqOWGjOebkeWQrFxyXG4gICAgdW5yZWdpc3RlckV2ZW50KCkge1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9mZihDT05TVC5jbGllbnRFdmVudC5jaGFuZ2VCYWNrR3JvdW5kLHRoaXMpO1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLm9mZihDT05TVC5jbGllbnRFdmVudC5zZWFXYXZlQ2hhbmdlQmcsdGhpcyk7XHJcbiAgICAgICAgZ2xHYW1lLmVtaXR0ZXIub2ZmKENPTlNULmNsaWVudEV2ZW50Lm9uU3Nob2NrLHRoaXMpO1xyXG4gICAgfSxcclxuICAgIC8v5rC05rOi6LWL5YC8XHJcbiAgICB1cGRhdGUoZHQpIHtcclxuICAgICAgICBpZih0aGlzLm1hdGVyaWFsKXtcclxuICAgICAgICAgICAgdGhpcy50aW1lICs9IGR0ICogdGhpcy53YXRlU3BlZWQ7XHJcbiAgICAgICAgICAgIHRoaXMubWF0ZXJpYWwuc2V0UHJvcGVydHkoXCJ0aW1lXCIsIHRoaXMudGltZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIC8v6K6+572u5rC05rOi5rOi5Y+K6IyD5Zu05Y+C5pWwXHJcbiAgICBzZXRSZXNvbHV0aW9uKCkge1xyXG4gICAgICAgIHRoaXMubWF0ZXJpYWwuc2V0UHJvcGVydHkoXHJcbiAgICAgICAgICAgIFwicmVzb2x1dGlvblwiLFxyXG4gICAgICAgICAgICBjYy52Mih0aGlzLm5vZGUud2lkdGgsIHRoaXMubm9kZS5oZWlnaHQpXHJcbiAgICAgICAgKTtcclxuICAgIH0sXHJcbiAgICAvL+mch+WKqCAtIOmAmueUqOmch+WKqOW6k1xyXG4gICAgb25TaG9ja0hhbmRsZXIoKXtcclxuICAgICAgICBpZih0aGlzLmlzU3Nob2NrSW5nKXJldHVybjtcclxuICAgICAgICBjb25zdCBTc2hvY2tUaW1lID0gMC44O1xyXG4gICAgICAgIHRoaXMuaXNTc2hvY2tJbmcgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMub2xkUG9zID0gdGhpcy5ub2RlLnBvc2l0aW9uO1xyXG4gICAgICAgIHRoaXMubm9kZS5nZXRDb21wb25lbnQoY2MuV2lkZ2V0KS5lbmFibGVkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5ub2RlLnJ1bkFjdGlvbihjYy5yZXBlYXRGb3JldmVyKGNjLnNlcXVlbmNlKCAgICBjYy5tb3ZlVG8oMC4wMiwgY2MudjIodGhpcy5vbGRQb3MueCs1LCB0aGlzLm9sZFBvcy55KzcpKSwgY2MubW92ZVRvKDAuMDIsIGNjLnYyKHRoaXMub2xkUG9zLngtNiwgdGhpcy5vbGRQb3MueSs3KSksICAgIGNjLm1vdmVUbygwLjAyLCBjYy52Mih0aGlzLm9sZFBvcy54LTEzLCB0aGlzLm9sZFBvcy55KzMpKSwgY2MubW92ZVRvKDAuMDIsIGNjLnYyKHRoaXMub2xkUG9zLngrMywgdGhpcy5vbGRQb3MueS02KSksICAgIGNjLm1vdmVUbygwLjAyLCBjYy52Mih0aGlzLm9sZFBvcy54LTUsIHRoaXMub2xkUG9zLnkrNSkpLCBjYy5tb3ZlVG8oMC4wMiwgY2MudjIodGhpcy5vbGRQb3MueCsyLCB0aGlzLm9sZFBvcy55LTgpKSwgICAgY2MubW92ZVRvKDAuMDIsIGNjLnYyKHRoaXMub2xkUG9zLngtOCwgdGhpcy5vbGRQb3MueS0xMCkpLCBjYy5tb3ZlVG8oMC4wMiwgY2MudjIodGhpcy5vbGRQb3MueCszLCB0aGlzLm9sZFBvcy55KzEwKSksICAgIGNjLm1vdmVUbygwLjAyLCBjYy52Mih0aGlzLm9sZFBvcy54KzAsIHRoaXMub2xkUG9zLnkrMCkpKSkpO1xyXG4gICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKCgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLnN0b3BBbGxBY3Rpb25zKCk7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5zZXRQb3NpdGlvbih0aGlzLm9sZFBvcyk7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5nZXRDb21wb25lbnQoY2MuV2lkZ2V0KS5lbmFibGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5pc1NzaG9ja0luZyA9IGZhbHNlO1xyXG4gICAgICAgIH0sIFNzaG9ja1RpbWUpO1xyXG4gICAgfSxcclxuICAgIC8v5bi46KeE5pu05o2i6IOM5pmvXHJcbiAgICBjaGFuZ2VCYWNrR3JvdW5kSGFuZGxlcihiZ0luZGV4KXtcclxuICAgICAgICBjb25zdCBNYXhCZ051bSA9IDQ7XHJcbiAgICAgICAgZm9yKGxldCBpPTA7aTxNYXhCZ051bTtpKyspe1xyXG4gICAgICAgICAgICB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJ1aV9CZ1wiK2kpLmFjdGl2ZSA9IGJnSW5kZXggPT0gaTtcclxuICAgICAgICAgICAgaWYoYmdJbmRleCA9PSBpKXtcclxuICAgICAgICAgICAgICAgIHRoaXMubWF0ZXJpYWwgPSB0aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoXCJ1aV9CZ1wiK2kpLmdldENvbXBvbmVudChjYy5TcHJpdGUpLmdldE1hdGVyaWFsKDApO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRSZXNvbHV0aW9uKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5pbmRleCA9IGJnSW5kZXg7XHJcbiAgICAgICAgZ2xHYW1lLmVtaXR0ZXIuZW1pdChDT05TVC5jbGllbnRFdmVudC5maXNoQmdTb3VuZCx0aGlzLmluZGV4KTtcclxuICAgIH0sXHJcbiAgICAvL+a1t+a1quabtOaNouiDjOaZr1xyXG4gICAgc2VhV2F2ZUNoYW5nZUJnSGFuZGxlcihiZ0luZGV4KXtcclxuICAgICAgICBsZXQgb2xkID0gTnVtYmVyKFwiXCIrdGhpcy5pbmRleCk7XHJcbiAgICAgICAgdGhpcy5pbmRleCAgPSBiZ0luZGV4O1xyXG4gICAgICAgIGdsR2FtZS5lbWl0dGVyLmVtaXQoQ09OU1QuY2xpZW50RXZlbnQuZmlzaEJnU291bmQsdGhpcy5pbmRleCk7XHJcbiAgICAgICAgbGV0IG9sZF9CZyA9IHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZShcInVpX0JnXCIrb2xkKTtcclxuICAgICAgICBsZXQgbmV3X0JnID0gdGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKFwidWlfQmdcIit0aGlzLmluZGV4KTtcclxuICAgICAgICB0aGlzLm1hdGVyaWFsID0gbmV3X0JnLmdldENvbXBvbmVudChjYy5TcHJpdGUpLmdldE1hdGVyaWFsKDApO1xyXG4gICAgICAgIHRoaXMuc2V0UmVzb2x1dGlvbigpO1xyXG4gICAgICAgIG9sZF9CZy5zdG9wQWxsQWN0aW9ucygpO1xyXG4gICAgICAgIG5ld19CZy5zdG9wQWxsQWN0aW9ucygpO1xyXG4gICAgICAgIGNvbnN0IHdpblNpemVXaWR0aCAgPSB0aGlzLmxvZ2ljLmdldElzUm90YXRpb24oKSA/IGNjLndpblNpemUud2lkdGggOiAtY2Mud2luU2l6ZS53aWR0aDtcclxuICAgICAgICBuZXdfQmcueCA9IHRoaXMubG9naWMuZ2V0SXNSb3RhdGlvbigpID8gLXdpblNpemVXaWR0aCA6IGNjLndpblNpemUud2lkdGg7XHJcbiAgICAgICAgbmV3X0JnLmFjdGl2ZSA9IHRydWU7XHJcbiAgICAgICAgbmV3X0JnLnJ1bkFjdGlvbihjYy5tb3ZlVG8oMS4wMSxjYy52MigwLG5ld19CZy55KSkpO1xyXG4gICAgICAgIG9sZF9CZy5ydW5BY3Rpb24oY2Muc2VxdWVuY2UoY2MubW92ZVRvKDEuMDEsY2MudjIod2luU2l6ZVdpZHRoLG9sZF9CZy55KSksY2MuY2FsbEZ1bmMoKCk9PntcclxuICAgICAgICAgICAgb2xkX0JnLmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBvbGRfQmcueCA9IDA7XHJcbiAgICAgICAgfSkpKTtcclxuICAgIH0sXHJcbiAgICBPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgdGhpcy51bnJlZ2lzdGVyRXZlbnQoKTtcclxuICAgIH0sXHJcbn0pOyJdfQ==