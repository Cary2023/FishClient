{"version":3,"sources":["assets\\frames\\base\\emitter.js"],"names":["indexOf","index","arr","obj","i","length","g_instance","bEmitter","module","exports","Emitter","mixin","key","prototype","emitterlog","message","optionalParams","console","log","on","event","fn","_callbacks","_push","func","pushData","data","push","once","self","off","apply","arguments","_off","removeListener","removeAllListeners","callbacks","splice","emit","args","slice","call","len","listeners","hasListeners"],"mappings":"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","sourceRoot":"/","sourcesContent":["\r\n/**\r\n * Module dependencies.\r\n */\r\nvar indexOf = [].indexOf;\r\nvar index = function (arr, obj) {\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if (arr[i].obj === obj) return i;\r\n  }\r\n  return -1;\r\n};\r\n\r\n/**\r\n * Expose `Emitter`.\r\n */\r\nlet g_instance = null;\r\nlet bEmitter = false;\r\nmodule.exports = function () {\r\n  if (!g_instance) {\r\n    g_instance = new Emitter();\r\n  }\r\n  return g_instance;\r\n};\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n  * Prints to `stdout` with newline.\r\n  */\r\n\r\nEmitter.prototype.emitterlog = function (message, ...optionalParams) {\r\n  if (!bEmitter) return;\r\n  console.log(message, ...optionalParams);\r\n};\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @param {Object} obj\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on = function (event, fn, obj) {\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks[event] = this._callbacks[event] || []);\r\n  this._push(event, { func: fn, obj: obj });\r\n  this.emitterlog(\"注册了事件监听\", event, this._callbacks[event].length);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Avoid repeated additions\r\n * @param {String} event \r\n * @param {any} pushData \r\n */\r\nEmitter.prototype._push = function (event, pushData) {\r\n  for (let data of this._callbacks[event]){\r\n    if (data.obj === pushData.obj)return ;\r\n  }\r\n  this._callbacks[event].push(pushData);\r\n}\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @param {Object} obj\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function (event, fn, obj) {\r\n  var self = this;\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  function on() {\r\n    this.emitterlog(\"触发了一次性事件\", event)\r\n    self.off(event, on);\r\n    fn.apply(obj, arguments);\r\n  }\r\n\r\n  fn._off = on;\r\n  this.on(event, on, obj);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} obj\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\n  Emitter.prototype.removeListener =\r\n  Emitter.prototype.removeAllListeners = function (event, obj) {\r\n    this._callbacks = this._callbacks || {};\r\n\r\n    // all\r\n    if (0 == arguments.length) {\r\n      this.emitterlog(\"清空所有事件回调\")\r\n      this._callbacks = {};\r\n      return this;\r\n    }\r\n\r\n    // specific event\r\n    var callbacks = this._callbacks[event];\r\n    if (!callbacks) return this;\r\n\r\n    // remove all handlers\r\n    if (1 == arguments.length) {\r\n      this.emitterlog(\"清空事件回调\", event)\r\n      delete this._callbacks[event];\r\n      return this;\r\n    }\r\n\r\n    // remove specific handler\r\n    var i = index(callbacks, obj);\r\n    if (~i) {\r\n      this.emitterlog(\"销毁了事件\", event, i);\r\n      callbacks.splice(i, 1);\r\n    }\r\n    return this;\r\n  };\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function (event) {\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks[event];\r\n\r\n  if (callbacks) {\r\n    this.emitterlog(\"发送了事件\", event, args)\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      let obj = callbacks[i].obj\r\n      callbacks[i].func.apply(obj, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function (event) {\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks[event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function (event) {\r\n  return !!this.listeners(event).length;\r\n};\r\n"]}