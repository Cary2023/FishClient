{"version":3,"sources":["assets\\frames\\base\\panel.js"],"names":["panelPaths","require","actionDir","up","down","left","right","close","none","Panel","resetData","juhuaoff","panel","prototype","g_instance","preload_plaza","curPrefabSearchPaths","compelprefab","curScenePrefabDict","publicPanelDict","plazaPanelDict","iconList","juhuaPanel","rollnoticePanel","gameMaskPanel","newenter","nodeQRCode","urlQRCode","plazaShowPanel","showPanel","prefab","downMask","glGame","animation","checkInterface","cc","instantiate","parent","director","getScene","zIndex","fileutil","clearGCTimeOut","newPrefab","closeNode","name","getChildByName","isHaveEntry","active","childrenCount","openInterface","showPanelAction","moveType","moveInterface","getEntryPanel","scene","i","str","children","indexOf","closeEntry","entryNode","entryScript","getComponent","readyroom","reqExitArea","remove","showPanelByName","panelName","Promise","resolve","reject","hasOwnProperty","readPrefab","then","getPanelByName","showRecordPanelByName","closePanel","prafab","curScene","prefabLayer","console","error","isValid","destroy","showChildPanel","newPrefabLayer","showChildPanelByName","compelPreload","log","key","preloadPlazaState","count","Object","keys","length","preloadPlazaCount","preloadplazaPublicMode","publicPaths","plazaPaths","preload_count","basepaths","ofend","emitter","emit","MESSAGE","UI","PLAZA_LOADING","isbeforehand","preloadplazaMode","preloadPublicMode","preloadLoinMode","getCommonPrefab","_name","getLoinPrefab","getPlazaPrefab","PrefabRelease","sys","isNative","releasePrefab","get","set","value","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["let\r\n    panelPaths = require('panelpaths'),\r\n    actionDir = { up: 0, down: 1, left: 2, right: 3, close: 4, none: 5 },\r\n    Panel = function () {\r\n        this.resetData();\r\n        this.juhuaoff = false;\r\n    },\r\n    panel = Panel.prototype,\r\n    g_instance = null;\r\n\r\npanel.resetData = function () {\r\n    this.preload_plaza = 0;\r\n    this.curPrefabSearchPaths = null;\r\n    this.compelprefab = null;\r\n    this.curScenePrefabDict = {};\r\n    this.publicPanelDict = {};\r\n    this.plazaPanelDict = {};\r\n    this.iconList = {};\r\n    this.juhuaPanel = null;\r\n    this.rollnoticePanel = null;\r\n    this.gameMaskPanel = null;\r\n    this.newenter = true;// 保存公告是否显示\r\n    //二维码数据\r\n    this.nodeQRCode = null;\r\n    this.urlQRCode = \"\";\r\n    this.plazaShowPanel = [];\r\n};\r\n\r\n\r\n/**\r\n * @param prefab 界面预制\r\n * @Explain 打开一个界面\r\n */\r\npanel.showPanel = function (prefab) {\r\n    // 为做动画效果前做遮罩\r\n    let downMask = null;\r\n    if (glGame.animation.checkInterface(prefab)) {\r\n        downMask = cc.instantiate(this.gameMaskPanel);\r\n        downMask.parent = cc.director.getScene();\r\n        downMask.zIndex = 100;\r\n    }\r\n    //避免GC清理冗余资源（仅在真机包生效）\r\n    glGame.fileutil.clearGCTimeOut();\r\n    // 开始将节点挂到scene\r\n    let newPrefab = cc.instantiate(prefab);\r\n    newPrefab.parent = cc.director.getScene();\r\n    let closeNode = null;\r\n    if (\"plaza\" == cc.director.getScene().name) {\r\n        closeNode = cc.director.getScene().getChildByName(\"plaza_hall\");\r\n        if (this.isHaveEntry()) {\r\n            closeNode.active = false;\r\n        }\r\n    } else newPrefab.zIndex = cc.director.getScene().childrenCount;\r\n    //添加部分界面特效\r\n    glGame.animation.openInterface(newPrefab, downMask);\r\n\r\n    return newPrefab;\r\n};\r\n\r\n/**\r\n * @param prefab 界面预制\r\n * @param {object} moveType 界面出现方向\r\n * @Explain 打开一个界面，并根据方向播放动画\r\n */\r\npanel.showPanelAction = function (prefab, moveType) {\r\n    // 为做动画效果前做遮罩\r\n    let downMask = null;\r\n    if (glGame.animation.checkInterface(prefab)) {\r\n        downMask = cc.instantiate(this.gameMaskPanel);\r\n        downMask.parent = cc.director.getScene();\r\n        downMask.zIndex = 100;\r\n    }\r\n    //避免GC清理冗余资源（仅在真机包生效）\r\n    glGame.fileutil.clearGCTimeOut();\r\n    // 开始将节点挂到scene\r\n    let newPrefab = cc.instantiate(prefab);\r\n    newPrefab.parent = cc.director.getScene();\r\n    let closeNode = null;\r\n    if (\"plaza\" == cc.director.getScene().name) {\r\n        closeNode = cc.director.getScene().getChildByName(\"plaza_hall\");\r\n        if (this.isHaveEntry()) {\r\n            closeNode.active = false;\r\n        }\r\n    } else newPrefab.zIndex = cc.director.getScene().childrenCount;\r\n    //添加部分界面特效\r\n    glGame.animation.moveInterface(newPrefab, downMask, moveType);\r\n\r\n    return newPrefab;\r\n};\r\n\r\n// 获取入口面板\r\npanel.getEntryPanel = function () {\r\n    let scene = cc.director.getScene();\r\n    for (let i = 0; i < scene.childrenCount; i++) {\r\n        let str = scene.children[i].name.indexOf(\"entry\");\r\n        if (str != -1) {\r\n            return scene.children[i];\r\n        }\r\n    }\r\n};\r\n\r\n//是否有入口\r\npanel.isHaveEntry = function () {\r\n    let scene = cc.director.getScene();\r\n    for (let i = 0; i < scene.childrenCount; i++) {\r\n        let str = scene.children[i].name.indexOf(\"entry\");\r\n        if (str != -1) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n// 关闭选场\r\npanel.closeEntry = function () {\r\n    let scene = cc.director.getScene();\r\n    for (let i = 0; i < scene.childrenCount; i++) {\r\n        let str = scene.children[i].name.indexOf(\"entry\");\r\n        if (str != -1) {\r\n            let entryNode = scene.children[i];\r\n            let entryScript = entryNode.getComponent(entryNode.name);\r\n            glGame.readyroom.reqExitArea();\r\n            if (entryScript)\r\n                entryScript.remove();\r\n\r\n            return;\r\n            // return scene.children[i];\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @param panelName 界面预制名称\r\n * @Explain 打开一个界面\r\n */\r\npanel.showPanelByName = function (panelName) {\r\n    return new Promise((resolve, reject) => {\r\n        if (this.plazaPanelDict.hasOwnProperty(panelName)) {\r\n            glGame.fileutil.readPrefab(this.plazaPanelDict[panelName]).then(prefab => {\r\n                if (panelName == \"longhudouentry\") {\r\n                    resolve(this.showPanel(prefab, false, actionDir.close));\r\n                } else {\r\n                    resolve(this.showPanel(prefab));\r\n                }\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * @param panelName 界面预制名称\r\n * @Explain 获取一个界面实例化对象（未做节点捆绑）\r\n */\r\npanel.getPanelByName = function (panelName) {\r\n    return new Promise((resolve, reject) => {\r\n        if (this.plazaPanelDict.hasOwnProperty(panelName)) {\r\n            glGame.fileutil.readPrefab(this.plazaPanelDict[panelName]).then(prefab => {\r\n                resolve(cc.instantiate(prefab));\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * @param panelName 界面预制名称\r\n * @Explain 打开一个界面\r\n */\r\npanel.showRecordPanelByName = function (panelName) {\r\n    return new Promise((resolve, reject) => {\r\n        if (panelPaths[\"paths\"][\"recordprefab\"].hasOwnProperty(panelName)) {\r\n            glGame.fileutil.readPrefab(panelPaths[\"paths\"][\"recordprefab\"][panelName]).then(prefab => {\r\n                resolve(this.showPanel(prefab));\r\n            });\r\n        }\r\n    });\r\n};\r\n/**\r\n * @param prafab 界面预制\r\n * @Explain 关闭一个界面\r\n */\r\npanel.closePanel = function (prafab) {\r\n    let curScene = cc.director.getScene();\r\n    let prefabLayer = curScene.getChildByName(prafab.name);\r\n    if (!prefabLayer) return console.error(\"无法关闭没有打开的界面\");\r\n    if (!cc.isValid(prefabLayer)) prefabLayer.destroy();\r\n};\r\n\r\n/**\r\n * @param prefab 预制对象\r\n * @param parent 父节点\r\n * @Explain 创建一个子节点\r\n */\r\npanel.showChildPanel = function (prefab, parent) {\r\n    let newPrefabLayer = cc.instantiate(prefab);\r\n    newPrefabLayer.parent = parent;\r\n    return newPrefabLayer;\r\n};\r\n/**\r\n * @param panelName 预制对象名字\r\n * @param parent 父节点\r\n * @Explain 创建一个子节点\r\n * @returns {Promise<any>}\r\n */\r\npanel.showChildPanelByName = function (panelName, parent) {\r\n    return new Promise((resolve, reject) => {\r\n        if (this.plazaPanelDict.hasOwnProperty(panelName)) {\r\n            glGame.fileutil.readPrefab(this.plazaPanelDict[panelName]).then(prefab => {\r\n                resolve(this.showChildPanel(prefab, parent));\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n//强制预加载的文件\r\npanel.compelPreload = function (name) {\r\n    if (this.compelprefab == null) {\r\n        if (!panelPaths) return console.log(`public还没有配置动态加载资源的文件`);\r\n        if (!panelPaths[\"paths\"]) return false;\r\n        if (!panelPaths[\"paths\"][\"compelprefab\"]) return false;\r\n        this.compelprefab = panelPaths[\"paths\"][\"compelprefab\"];\r\n    }\r\n    for (let key in this.compelprefab) {\r\n        if (!this.compelprefab[key]) continue\r\n        if (name == this.compelprefab[key]) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n//判定当前大厅需要预加载的预支是否加载完毕\r\npanel.preloadPlazaState = function () {\r\n    let count = Object.keys(this.plazaPanelDict).length;\r\n    return count > 0;\r\n};\r\n\r\n//判定当前大厅需要预加载的预支是否加载完毕\r\npanel.preloadPlazaCount = function () {\r\n    return this.preload_plaza;\r\n};\r\n\r\n//合并预加载通用和大厅资源模块\r\npanel.preloadplazaPublicMode = function () {\r\n    if (!panelPaths) return console.log(`public还没有配置动态加载资源的文件`);\r\n    if (!panelPaths[\"paths\"]) return;\r\n    if (!panelPaths[\"paths\"][\"plazaprefab\"]) return;\r\n    let publicPaths = panelPaths[\"paths\"][\"prefab\"];\r\n    let plazaPaths = panelPaths[\"paths\"][\"plazaprefab\"];\r\n\r\n    //预加载基数\r\n    var preload_count = this.preload_plaza = Object.keys(plazaPaths).length - 1 + Object.keys(publicPaths).length;;\r\n\r\n    let basepaths = plazaPaths['base'];\r\n\r\n    //预加载回调\r\n    let ofend = (resolve) => {\r\n        preload_count--;\r\n        glGame.emitter.emit(MESSAGE.UI.PLAZA_LOADING, { count: preload_count });\r\n        if (preload_count <= 0) resolve();\r\n    };\r\n    //Object.keys\r\n    return new Promise((resolve, reject) => {\r\n\r\n        glGame.emitter.emit(MESSAGE.UI.PLAZA_LOADING, { count: preload_count });\r\n        //提示内容 弹窗形式\r\n        for (let key in publicPaths) {\r\n            this.publicPanelDict[key] = publicPaths[key];\r\n            if (glGame.isbeforehand || this.compelPreload(key)) {\r\n                glGame.fileutil.readPrefab(this.publicPanelDict[key]).then(() => {\r\n                    ofend(resolve);\r\n                });\r\n            } else ofend(resolve);\r\n        }\r\n        //提示内容 弹窗形式\r\n        for (let key in plazaPaths) {\r\n            if (key === 'base') continue;\r\n            this.plazaPanelDict[key] = basepaths + plazaPaths[key];\r\n            if (glGame.isbeforehand || this.compelPreload(key)) {\r\n                glGame.fileutil.readPrefab(this.plazaPanelDict[key]).then(() => {\r\n                    ofend(resolve);\r\n                });\r\n            } else ofend(resolve);\r\n        }\r\n    });\r\n}\r\n\r\n\r\n//预加载大厅资源模块\r\npanel.preloadplazaMode = function () {\r\n    if (!panelPaths) return console.log(`public还没有配置动态加载资源的文件`);\r\n    if (!panelPaths[\"paths\"]) return;\r\n    if (!panelPaths[\"paths\"][\"plazaprefab\"]) return;\r\n    let plazaPaths = panelPaths[\"paths\"][\"plazaprefab\"];\r\n\r\n    //预加载基数\r\n    var preload_count = this.preload_plaza = Object.keys(plazaPaths).length - 1;\r\n\r\n    let basepaths = plazaPaths['base'];\r\n\r\n    //预加载回调\r\n    let ofend = (resolve) => {\r\n        preload_count--;\r\n        glGame.emitter.emit(MESSAGE.UI.PLAZA_LOADING, { count: preload_count });\r\n        if (preload_count <= 0) resolve();\r\n    };\r\n    //Object.keys\r\n    return new Promise((resolve, reject) => {\r\n\r\n        glGame.emitter.emit(MESSAGE.UI.PLAZA_LOADING, { count: preload_count });\r\n        //提示内容 弹窗形式\r\n        for (let key in plazaPaths) {\r\n            if (key === 'base') continue;\r\n            this.plazaPanelDict[key] = basepaths + plazaPaths[key]\r\n            if (glGame.isbeforehand || this.compelPreload(key)) {\r\n                glGame.fileutil.readPrefab(this.plazaPanelDict[key]).then(() => {\r\n                    ofend(resolve);\r\n                });\r\n            } else ofend(resolve);\r\n        }\r\n    });\r\n}\r\n\r\n//预加载公共模块\r\npanel.preloadPublicMode = function () {\r\n    if (!panelPaths) return console.log(`public还没有配置动态加载资源的文件`);\r\n    if (!panelPaths[\"paths\"]) return;\r\n    if (!panelPaths[\"paths\"][\"prefab\"]) return;\r\n    let publicPaths = panelPaths[\"paths\"][\"prefab\"];\r\n\r\n    //预加载基数\r\n    var preload_count = Object.keys(publicPaths).length;\r\n\r\n    //预加载回调\r\n    let ofend = (resolve) => {\r\n        preload_count--;\r\n        if (preload_count <= 0) resolve();\r\n    };\r\n    //Object.keys\r\n    return new Promise((resolve, reject) => {\r\n        //提示内容 弹窗形式\r\n        for (let key in publicPaths) {\r\n            this.publicPanelDict[key] = publicPaths[key];\r\n\r\n            if (glGame.isbeforehand || this.compelPreload(key)) {\r\n                glGame.fileutil.readPrefab(this.publicPanelDict[key]).then(() => {\r\n                    ofend(resolve);\r\n                });\r\n            } else ofend(resolve);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * 进入前需要预加载的优先模块\r\n */\r\npanel.preloadLoinMode = function () {\r\n    if (!panelPaths) return console.log(`public 还没有配置动态加载资源的文件`);\r\n    if (!panelPaths[\"paths\"]) return;\r\n    if (!panelPaths[\"paths\"][\"loinprefab\"]) return;\r\n    let publicPaths = panelPaths[\"paths\"][\"loinprefab\"];\r\n\r\n    //预加载基数\r\n    var preload_count = Object.keys(publicPaths).length;\r\n\r\n    //预加载回调\r\n    let ofend = (resolve) => {\r\n        preload_count--;\r\n        if (preload_count <= 0) resolve();\r\n    };\r\n    //Object.keys\r\n    return new Promise((resolve, reject) => {\r\n        //提示内容 弹窗形式\r\n        for (let key in publicPaths) {\r\n            this.publicPanelDict[key] = publicPaths[key];\r\n            if (key == \"juhua\") {\r\n                glGame.fileutil.readPrefab(this.publicPanelDict[key]).then(prefab => {\r\n                    this.juhuaPanel = prefab;\r\n                    ofend(resolve);\r\n                });\r\n                continue;\r\n            }\r\n            if (key == \"rollnotice\") {\r\n                glGame.fileutil.readPrefab(this.publicPanelDict[key]).then(prefab => {\r\n                    this.rollnoticePanel = prefab;\r\n                    ofend(resolve);\r\n                });\r\n                continue;\r\n            }\r\n            if (key == \"gameMask\") {\r\n                glGame.fileutil.readPrefab(this.publicPanelDict[key]).then(prefab => {\r\n                    this.gameMaskPanel = prefab;\r\n                    ofend(resolve);\r\n                });\r\n            }\r\n            glGame.fileutil.readPrefab(this.publicPanelDict[key]).then(() => {\r\n                ofend(resolve);\r\n            });\r\n        }\r\n\r\n    });\r\n};\r\n\r\n/**\r\n * @param {string} name 预加载资源名称\r\n * @Explain 获取public里面的不需要提前预加载资源\r\n */\r\npanel.getCommonPrefab = function (_name) {\r\n    if (this.publicPanelDict[_name]) return this.publicPanelDict[_name];\r\n    return panelPaths[\"paths\"][\"prefab\"][_name];\r\n};\r\n\r\n/**\r\n * @param {string} name 预加载资源名称\r\n * @Explain 获取public里面的需要游戏启动后提前预加载资源\r\n */\r\npanel.getLoinPrefab = function (_name) {\r\n    if (this.publicPanelDict[_name]) return this.publicPanelDict[_name];\r\n    return panelPaths[\"paths\"][\"loinprefab\"][_name];\r\n};\r\n\r\n/**\r\n * @param {string} name 预加载资源名称\r\n * @Explain 获取plaza里面的预加载资源\r\n */\r\npanel.getPlazaPrefab = function (_name) {\r\n    if (this.plazaPanelDict[_name]) return this.plazaPanelDict[_name];\r\n    return panelPaths[\"paths\"][\"plazaprefab\"][\"base\"] + panelPaths[\"paths\"][\"plazaprefab\"][_name];\r\n};\r\n\r\n\r\n/**\r\n * @param {string} name 预加载资源名称\r\n * @Explain 常驻不清理的预支模块\r\n */\r\npanel.PrefabRelease = function (_name) {\r\n    let prefab = \"\";\r\n    switch (_name) {\r\n        case \"installTipBox\":\r\n        //常用不做清理\r\n        case \"juhua\":\r\n        case \"room_juhua\":\r\n        case \"rollnotice\":\r\n        case \"labeltip\":\r\n        case \"gameMask\":\r\n        case \"confirmbox\":\r\n        //游戏内子界面不做清理\r\n        case \"setting\":\r\n            return;\r\n    }\r\n    if (this.compelPreload(_name) || !cc.sys.isNative) return;\r\n    if (this.plazaPanelDict[_name]) prefab = this.plazaPanelDict[_name];\r\n    else if (this.publicPanelDict[_name]) prefab = this.publicPanelDict[_name];\r\n    if (prefab != \"\") glGame.fileutil.releasePrefab(prefab);\r\n}\r\n\r\n/**\r\n * 获取界面时间\r\n * @param {String} key\r\n * @returns {Object}\r\n */\r\npanel.get = function (key) {\r\n    return this[key];\r\n};\r\npanel.set = function (key, value) {\r\n    this[key] = value;\r\n};\r\nmodule.exports = function () {\r\n    if (!g_instance) {\r\n        g_instance = new Panel();\r\n    }\r\n    return g_instance;\r\n};\r\n"]}