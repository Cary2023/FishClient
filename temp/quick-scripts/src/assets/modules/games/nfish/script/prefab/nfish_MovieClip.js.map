{"version":3,"sources":["assets\\modules\\games\\nfish\\script\\prefab\\nfish_MovieClip.js"],"names":["CONST","require","glGame","movieClip","baseclass","extend","properties","movieClipType","displayName","tooltip","type","cc","Integer","initAtlas","atlas","fish_Atlas","initEffect","payName","min","max","loop","isHaveZero","speed","isDestroy","callBack","mathPly","w","h","showTime","effectIndex","playEffectTime","playEffectSpeed","customW","customH","node","width","spr","getComponent","Sprite","Type","SIMPLE","sizeMode","SizeMode","CUSTOM","height","Math","ceil","random","spriteFrame","getSpriteFrame","getSprName","isPlayEffect","sprName","MaxLength","initEffectScaleTo","scaleToTime","scaleX","scaleY","delayTime","cb","scheduleOnce","scale","stopAllActions","MaxZindex","zIndex","nodeZIndex","zIndexPartBoom","macro","MAX_ZINDEX","runAction","sequence","scaleTo","callFunc","destroy","active","initEffectScaleAndRotateTo","rotateTime","act","spawn","repeat","rotateBy","update","dt","playFishMovieClip","undefined","initFishMovieClip","runfrequency","fishMoveTimeId","runSpeed","isStart","lastIndex","index","MaxIndex","mcBaseName","currAtl","tideCorrect","First","updateFrequency","frequency","startFishRuning","resGroupId","console","error","fishData","tide_fishTypeId","Number","fishTypeId","isTide","logic","tidePlayCorrect","getImg","initSpr","getInstance","NormalDefault","getSpriteAtlas","frameName","length","sprFrame","i","getRandomNum","Min","Max","Range","Rand","round","clearTideCorrect","OnDestroy"],"mappings":"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","sourceRoot":"/","sourcesContent":["/***\r\n *  捕鱼：动画播放器\r\n * **/\r\nlet CONST = require(\"nfishConst\");\r\nglGame.movieClip = glGame.baseclass.extend({\r\n    properties: {\r\n        movieClipType: {\r\n            default: 1,\r\n            displayName: \"类型\",\r\n            tooltip: \"动画类型 1 鱼 、 2特效\",\r\n            type:cc.Integer,\r\n        },\r\n    },\r\n    //初始化图集 atlas\r\n    initAtlas(atlas){\r\n        this.fish_Atlas = atlas;\r\n    },\r\n    //帧动画播放 atlas 图集 payName前缀 min最小 max最大 loop是否循环 isHaveZero连接符是否带0 callBack 播放完成回调 mathPly 是否随机播放 w 固定宽度 h 固定高度 showTime 多久才开始显示播放\r\n    initEffect(atlas,payName,min,max,loop,isHaveZero,speed,isDestroy,callBack = null,mathPly = 0,w=null,h=null,showTime = 0){\r\n        this.atlas            = atlas;\r\n        this.payName          = payName;\r\n        this.effectIndex      = min;\r\n        this.min              = min;\r\n        this.max              = max;\r\n        this.loop             = loop;\r\n        this.playEffectTime   = 0;\r\n        this.playEffectSpeed  = speed;\r\n        this.isHaveZero       = isHaveZero;\r\n        this.isDestroy        = isDestroy;\r\n        this.callBack         = callBack;\r\n        this.customW          = w;\r\n        this.customH          = h;\r\n        this.showTime         = showTime;\r\n        if(this.customW != null){\r\n            this.node.width = this.customW;\r\n            let spr = this.node.getComponent(cc.Sprite)\r\n            spr.type    = cc.Sprite.Type.SIMPLE;\r\n            spr.sizeMode= cc.Sprite.SizeMode.CUSTOM;\r\n        }\r\n        if(this.customH != null){\r\n            this.node.height = this.customH;\r\n        }\r\n        if(mathPly > 0){\r\n            this.effectIndex  = Math.ceil(Math.random() * max);\r\n        }\r\n        if(this.showTime == 0){\r\n            this.node.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(this.getSprName());\r\n        }\r\n        this.isPlayEffect     = true;\r\n    },\r\n    //动画播放2　：获取图集名字\r\n    getSprName(){\r\n        let sprName;\r\n        if(this.isHaveZero){\r\n            const MaxLength = 10;\r\n            if(this.effectIndex < MaxLength){\r\n                sprName = this.payName+\"0\"+this.effectIndex;\r\n            }else{\r\n                sprName = this.payName+\"\"+this.effectIndex;\r\n            }\r\n        }else{\r\n            sprName = this.payName+\"\"+this.effectIndex;\r\n        }\r\n        return sprName;\r\n    },\r\n    //缩放动画播放 atlas 图集 payName前缀 scaleToTime 缩放时长 scalex 缩放最终值x scaley 缩放最终值y delayTime 缩放延迟时间 isDestroy 播放完成是否销毁 cb 播放完成回调  showTime 多久才开始显示播放\r\n    initEffectScaleTo(atlas,payName,scaleToTime,scaleX,scaleY,delayTime = 0.3,isDestroy = true,cb = null,showTime = 0.01){\r\n        this.scheduleOnce(()=>{\r\n            this.atlas      = atlas;\r\n            this.payName    = payName;\r\n            this.node.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(this.payName);\r\n            this.node.scale = 0;\r\n            this.node.stopAllActions();\r\n            const MaxZindex = 200;\r\n            let zIndex      = CONST.nodeZIndex.zIndexPartBoom + Math.ceil(Math.random() * MaxZindex);\r\n            this.node.zIndex= zIndex > cc.macro.MAX_ZINDEX ? cc.macro.MAX_ZINDEX -1 : zIndex;\r\n            this.node.runAction(cc.sequence(cc.scaleTo(scaleToTime,scaleX,scaleX),cc.delayTime(delayTime),cc.callFunc(()=>{\r\n                if(isDestroy){\r\n                    if(cb)cb();\r\n                    this.node.destroy();\r\n                }else{\r\n                    if(cb)cb();\r\n                    this.node.active = false;\r\n                }\r\n            })));\r\n        },showTime)\r\n    },\r\n    //缩放+旋转动画播放 atlas 图集 payName前缀 rotateTime 旋转360时间 scaleToTime 缩放时间 scaleX x缩放值 scaleY y缩放值 isDestroy播放完成是否销毁 cb 播放完成的回调\r\n    initEffectScaleAndRotateTo(atlas,payName,rotateTime,scaleToTime,scaleX,scaleY,isDestroy = true,cb = null){\r\n        this.atlas      = atlas;\r\n        this.payName    = payName;\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(this.payName);\r\n        this.node.scaleX = scaleX;\r\n        this.node.scaleY = scaleY;\r\n        this.node.stopAllActions();\r\n        const MaxZindex = 200;\r\n        let zIndex      = CONST.nodeZIndex.zIndexPartBoom + Math.ceil(Math.random() * MaxZindex);\r\n        let MAX_ZINDEX  = 1;\r\n        this.node.zIndex= zIndex > cc.macro.MAX_ZINDEX ? cc.macro.MAX_ZINDEX - MAX_ZINDEX : zIndex;\r\n        let act = cc.spawn(\r\n            cc.repeat(cc.rotateBy(rotateTime,360),2),\r\n            cc.scaleTo(scaleToTime,0.01,0.01)\r\n        );\r\n        this.node.runAction(cc.sequence(act,cc.callFunc(()=>{\r\n            if(isDestroy){\r\n                if(cb)cb();\r\n                this.node.destroy();\r\n            }else{\r\n                if(cb)cb();\r\n                this.node.active = false;\r\n            }\r\n        })));\r\n    },\r\n    update(dt){\r\n        this.playFishMovieClip(dt);\r\n        if(this.showTime > 0){\r\n            this.showTime -= dt;\r\n        }\r\n        if(this.isPlayEffect != undefined && this.isPlayEffect == true && this.showTime <= 0){\r\n            if(this.loop == 0 || this.loop > 0){\r\n                this.playEffectTime += dt;\r\n                if(this.playEffectTime > this.playEffectSpeed){\r\n                    this.playEffectTime = 0;\r\n                    this.node.getComponent(cc.Sprite).spriteFrame = this.atlas.getSpriteFrame(this.getSprName());\r\n                    if(this.customW != null){\r\n                        this.node.width = this.customW;\r\n                    }\r\n                    if(this.customH != null){\r\n                        this.node.height = this.customH;\r\n                    }\r\n                    this.effectIndex ++;\r\n                    if(this.effectIndex >= this.max){\r\n                        if(this.loop != 0){\r\n                            this.loop --;\r\n                            if(this.loop <= 0){\r\n                                this.loop = -1;\r\n                                this.isPlayEffect = false;\r\n                                this.node.active = false;\r\n\r\n                            }else{\r\n                                this.effectIndex = this.min;\r\n                            }\r\n                        }else if(this.loop == 0){\r\n                            if(this.effectIndex >this.max){\r\n                                this.effectIndex = this.min;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(this.loop == -1){\r\n                    if(this.callBack != null){\r\n                        this.callBack();\r\n                    }\r\n\r\n                    if(this.isDestroy) {\r\n                        this.node.destroy();\r\n                    }\r\n                }\r\n            }else{\r\n                if(this.callBack != null){\r\n                    this.callBack();\r\n                }\r\n                if(this.isDestroy){\r\n                    this.node.destroy();\r\n                }else{\r\n                    this.loop = -1;\r\n                    this.isPlayEffect = false;\r\n                    this.node.active = false;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    //初始化动画播放器\r\n    initFishMovieClip () {\r\n        this.runfrequency   = 10;   //动画计时器\r\n        this.fishMoveTimeId = 0;    //动画计时器\r\n        this.runSpeed       = 0.013 * this.runfrequency; //每帧大概速度是 0.0166\r\n        this.isStart        = false;//是否开始播放\r\n        this.lastIndex      = -1;    //上一次的播放第几个图\r\n        this.index          = 0;    //当前播放第几个图\r\n        this.MaxIndex       = 0;    //最多几个图\r\n        this.mcBaseName     = null; //基础名称\r\n        this.currAtl        = null; //当前选用的图集\r\n        this.tideCorrect    = null; //是否是鱼潮，如果是鱼潮就要做矫正播放\r\n        this.First          = 1;    //首次 首帧\r\n    },\r\n    //动画帧频\r\n    updateFrequency (frequency) {\r\n        this.runSpeed = frequency;\r\n    },\r\n    //设置信息\r\n    startFishRuning(resGroupId = null){\r\n        if(this.resGroupId == undefined){\r\n            this.resGroupId = resGroupId;\r\n            if(this.resGroupId == undefined){\r\n                console.error(\"找不到资源！无法实例该鱼\");\r\n                return;\r\n            }\r\n        }\r\n        if(this.fishData != null){\r\n            this.tide_fishTypeId = Number(this.fishData.fishTypeId+\"\");\r\n        }\r\n        if(this.fishData != null && this.fishData.isTide != null){//开始播放矫正\r\n            if(this.logic.tidePlayCorrect[this.tide_fishTypeId] == null){\r\n                this.tideCorrect = 1;\r\n                this.index       = 1;\r\n                this.logic.tidePlayCorrect[this.tide_fishTypeId] = 1;//队长\r\n            }else{//赋值别的鱼的修正index\r\n                this.index = this.logic.tidePlayCorrect[this.tide_fishTypeId];//跟随着\r\n            }\r\n        }else{//自然出现\r\n            this.index      = 1;\r\n        }\r\n        this.mcBaseName =\"fish\"+this.resGroupId+\"_move\";\r\n        let spriteFrame = this.getImg();\r\n\r\n        this.initSpr(spriteFrame);\r\n        this.isStart    = true;\r\n    },\r\n    //播放\r\n    playFishMovieClip(dt){\r\n        if(this.isStart){\r\n            this.fishMoveTimeId += dt;\r\n            if(this.fishMoveTimeId > this.runSpeed){\r\n                let spriteFrame = this.getImg();\r\n                if(!spriteFrame){\r\n                    if(this.MaxIndex === 0){\r\n                        this.MaxIndex = this.index;\r\n                    }\r\n                    this.index = this.First;\r\n                    spriteFrame = this.getImg();\r\n                }\r\n                this.initSpr(spriteFrame);\r\n\r\n                if(this.fishData != null && this.fishData.isTide != null && this.tide_fishTypeId != undefined){//正时皮带 帧率矫正同步\r\n                    if(this.tideCorrect != null){//队长 逻辑\r\n                        this.index ++;\r\n                        if(this.MaxIndex !== 0 && this.index >= this.MaxIndex){\r\n                            this.index = this.First;\r\n                        }\r\n                        this.logic.tidePlayCorrect[this.tide_fishTypeId] = this.index;//写入当前帧数\r\n                    }else if(this.logic.tidePlayCorrect[this.tide_fishTypeId] != null){//跟随着 逻辑\r\n                        if(this.lastIndex == this.index){//和上一帧一样 就不再跟随 自行\r\n                            this.index ++;\r\n                            if(this.MaxIndex !== 0 && this.index >= this.MaxIndex){\r\n                                this.lastIndex = Number(this.index+\"\");\r\n                                this.index = this.First;\r\n                            }\r\n                        }else{\r\n                            this.lastIndex = Number(this.index+\"\");//记录上一次的记录，用来保存是否跟随失败\r\n                            this.index = this.logic.tidePlayCorrect[this.tide_fishTypeId];//读取当前帧数\r\n                            if(this.lastIndex == this.index){\r\n                                if(this.tideCorrect != null && this.tide_fishTypeId != undefined){\r\n                                    let logic = require(\"nfishlogic\").getInstance();\r\n                                    logic.tidePlayCorrect[this.tide_fishTypeId] = null;\r\n                                }\r\n                                this.tide_fishTypeId = null;\r\n                            }\r\n                        }\r\n                    }else{\r\n                        this.index ++;\r\n                        if(this.MaxIndex !== 0 && this.index >= this.MaxIndex){\r\n                            this.index = this.First;\r\n                        }\r\n                    }\r\n                }else{//独自 计算，不跟随\r\n                    this.index ++;\r\n                    if(this.MaxIndex !== 0 && this.index >= this.MaxIndex){\r\n                        this.index = this.First;\r\n                    }\r\n                }\r\n                this.fishMoveTimeId = 0;\r\n            }\r\n        }\r\n    },\r\n    //设置帧动画\r\n    getImg(){\r\n        const First  = 1;\r\n        const NormalDefault = \"fish1_move\";\r\n        let spriteFrame = this.getSpriteAtlas(this.mcBaseName + this.index);\r\n        if(spriteFrame == null && this.index == First){\r\n            this.mcBaseName = NormalDefault;\r\n            this.index = First;\r\n            return spriteFrame = this.getSpriteAtlas(this.mcBaseName + this.index);\r\n        }\r\n        return spriteFrame;\r\n    },\r\n    //初始化图片\r\n    initSpr(spriteFrame){\r\n        this.node.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n    },\r\n    //从图集获取图片\r\n    getSpriteAtlas(frameName){\r\n        if(this.currAtl && this.fish_Atlas[this.currAtl].getSpriteFrame(frameName) != null){\r\n            return this.fish_Atlas[this.currAtl].getSpriteFrame(frameName);\r\n        }\r\n        let length = this.fish_Atlas.length;\r\n        let sprFrame;\r\n        for (let i = 0;i<length;i++){\r\n            sprFrame = this.fish_Atlas[i].getSpriteFrame(frameName);\r\n            if(sprFrame){\r\n                this.currAtl = i;\r\n                return sprFrame;\r\n            }\r\n        }\r\n    },\r\n\r\n    getRandomNum(Min,Max){\r\n        let Range = Number(Max) - Number(Min);\r\n        let Rand = Math.random();\r\n        return (Min + Math.round(Rand * Range));\r\n    },\r\n    //清理\r\n    clearTideCorrect(){\r\n        this.OnDestroy();\r\n    },\r\n\r\n    OnDestroy() {\r\n        this.fishMoveTimeId = 0;\r\n        this.runSpeed       = 0;\r\n        this.isStart        = false;\r\n        this.index          = 0;\r\n        this.mcBaseName     = null;\r\n        this.currAtl        = null;\r\n    },\r\n});"]}