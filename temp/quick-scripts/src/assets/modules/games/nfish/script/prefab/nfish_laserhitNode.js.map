{"version":3,"sources":["assets\\modules\\games\\nfish\\script\\prefab\\nfish_laserhitNode.js"],"names":["CONST","require","glGame","baseclass","extend","cc","Component","OnDestroy","logic","unregisterEvent","onLoad","getInstance","hitNodeTime","angle","uid","seatNum","coolingTime","hitList","registerEvent","emitter","on","clientEvent","onLaserDispath","onLaserDispathHandler","off","res","node","parent","name","onCollisionEnter","other","self","group","getComponent","hit","indexOf","Number","push","update","dt","shootBulletData","CannonOpention","Laser","log","isEnterRoom","gameNet","send_msg","room","getPlayerOp","scenetag","FISH2","hitFishData","LaserHit","undefined","warn"],"mappings":"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","sourceRoot":"/","sourcesContent":["//捕鱼 龙溪子弹 碰撞\r\nlet CONST = require(\"nfishConst\");\r\n\r\nglGame.baseclass.extend({\r\n    extends: cc.Component,\r\n\r\n    OnDestroy() {\r\n        this.logic = null;\r\n        this.unregisterEvent();\r\n    },\r\n    onLoad(){\r\n        this.logic              = require(\"nfishlogic\").getInstance();//数据中心\r\n        this.hitNodeTime = -1;\r\n        this.angle = -1;\r\n        this.uid = -1;\r\n        this.seatNum = -1;\r\n        this.coolingTime = 0;\r\n        this.hitList = [];\r\n        this.registerEvent();\r\n    },\r\n    //注册监听\r\n    registerEvent() {\r\n        glGame.emitter.on(CONST.clientEvent.onLaserDispath,this.onLaserDispathHandler,this);\r\n    },\r\n    //反注册监听\r\n    unregisterEvent() {\r\n        glGame.emitter.off(CONST.clientEvent.onLaserDispath,this);\r\n    },\r\n    onLaserDispathHandler(res){\r\n        this.coolingTime = 1;\r\n        if(this.node.parent.name == (\"ui_gun\"+res.seatNum)){\r\n            this.hitList = [];\r\n            this.seatNum = res.seatNum;\r\n            this.uid = res.uid;\r\n            this.angle = res.angle;\r\n            this.hitNodeTime  = 0;\r\n        }\r\n    },\r\n    //进入碰撞检测\r\n    onCollisionEnter(other, self) {\r\n        if(this.coolingTime > 0 && other.node.group == \"fish\"){\r\n            // glGame.emitter.emit(CONST.clientEvent.playFishnetEffect,{position:other.node.position,zIndex:CONST.nodeZIndex.zIndexPartBoom,gunLevel:-1});\r\n            if(this.seatNum == this.logic.seatNum)other.node.getComponent(\"nfish_Unit\").hit();\r\n\r\n            if(this.hitList.indexOf(Number(other.node.name)) == -1){\r\n                this.hitList.push(Number(other.node.name));\r\n            }\r\n        }\r\n    },\r\n    update(dt){\r\n        if(this.coolingTime > 0){\r\n            this.coolingTime -= dt;\r\n        }\r\n        if(this.hitNodeTime > -1){\r\n            this.hitNodeTime += dt;\r\n            if(this.hitNodeTime > 0.18){\r\n                this.hitNodeTime = -1;\r\n                this.coolingTime = 0;\r\n                if(this.node.parent.name == (\"ui_gun\"+this.seatNum)){\r\n                    //发送发射龙溪炮弹\r\n                    let shootBulletData = {\r\n                        \"op\":CONST.CannonOpention.Laser,\r\n                        \"angle\":this.angle,\r\n                        \"uid\":this.uid\r\n                    };\r\n                    cc.log(\"--==-->发送龙溪炮弹 A 发射 \",shootBulletData);\r\n\r\n                    if(this.logic.isEnterRoom){\r\n                        glGame.gameNet.send_msg(glGame.room.getPlayerOp(glGame.scenetag.FISH2),shootBulletData);\r\n                    }\r\n\r\n                    //发送龙溪子弹碰撞\r\n                    let hitFishData = {\r\n                        \"op\":CONST.CannonOpention.LaserHit,\r\n                        \"fishIds\": this.hitList,\r\n                        \"angle\":this.angle,\r\n                        \"uid\":this.uid\r\n                    };\r\n                    if(this.angle == undefined){\r\n                        cc.warn(\"龙溪发射 失败 没有角度 \",hitFishData)\r\n                    }\r\n                    if(this.uid == undefined){\r\n                        cc.warn(\"龙溪发射 失败 没有uid \",hitFishData)\r\n                    }\r\n                    if(this.logic.isEnterRoom){\r\n                        cc.log(\"--==-->发送龙溪子弹 B 碰撞 \",hitFishData);\r\n                        glGame.gameNet.send_msg(glGame.room.getPlayerOp(glGame.scenetag.FISH2),hitFishData);\r\n                    }\r\n                }else{\r\n                    cc.warn(\">龙溪发射失败...\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n});"]}