{"version":3,"sources":["assets\\modules\\games\\nfish\\script\\prefab\\nfish_hitNode.js"],"names":["CONST","require","glGame","baseclass","extend","cc","Component","onLoad","idelStatus","lockStatus","lockFrequency","hitNodeTime","logic","getInstance","setClick","pos","node","setPosition","hitList","onCollisionEnter","other","self","group","tagerFishLineID","Number","name","lockFishID","push","update","dt","sort","a","b","zIndex","length","emitter","emit","clientEvent","lockSelfFish","active"],"mappings":";;;;;;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAnB;;AACAC,MAAM,CAACC,SAAP,CAAiBC,MAAjB,CAAwB;AACpB,aAASC,EAAE,CAACC,SADQ;AAGpBC,EAAAA,MAHoB,oBAGZ;AACJ,SAAKC,UAAL,GAAsB,CAAC,CAAvB,CADI,CAC0B;;AAC9B,SAAKC,UAAL,GAAsB,CAAtB,CAFI,CAE0B;;AAC9B,SAAKC,aAAL,GAAsB,IAAtB,CAHI,CAG0B;;AAC9B,SAAKC,WAAL,GAAsB,KAAKH,UAA3B,CAJI,CAIkC;;AACtC,SAAKI,KAAL,GAAsBX,OAAO,CAAC,YAAD,CAAP,CAAsBY,WAAtB,EAAtB,CALI,CAKsD;AAC7D,GATmB;AAWpBC,EAAAA,QAXoB,oBAWXC,GAXW,EAWP;AACT,SAAKC,IAAL,CAAUC,WAAV,CAAsBF,GAAtB;AACA,SAAKG,OAAL,GAAe,EAAf;AACA,SAAKP,WAAL,GAAoB,KAAKF,UAAzB;AACH,GAfmB;AAgBpB;AACAU,EAAAA,gBAjBoB,4BAiBHC,KAjBG,EAiBIC,IAjBJ,EAiBU;AAC1B,QAAGD,KAAK,CAACJ,IAAN,CAAWM,KAAX,IAAoB,MAAvB,EAA8B;AAAC;AAC3B,UAAIC,eAAe,GAAGC,MAAM,CAACJ,KAAK,CAACJ,IAAN,CAAWS,IAAZ,CAA5B;;AACA,UAAG,KAAKb,KAAL,CAAWc,UAAX,IAAyBH,eAA5B,EAA4C;AACxC;AACA;AACH;;AACD,WAAKL,OAAL,CAAaS,IAAb,CAAkBJ,eAAlB;AACH;AACJ,GA1BmB;AA4BpBK,EAAAA,MA5BoB,kBA4BbC,EA5Ba,EA4BV;AACN,QAAG,KAAKlB,WAAL,GAAmB,KAAKH,UAA3B,EAAsC;AAClC,WAAKG,WAAL,IAAoBkB,EAApB;;AACA,UAAG,KAAKlB,WAAL,GAAmB,KAAKD,aAA3B,EAAyC;AACrC,aAAKC,WAAL,GAAmB,KAAKH,UAAxB;;AAEA,YAAG,KAAKU,OAAR,EAAgB;AACZ,eAAKA,OAAL,CAAaY,IAAb,CAAkB,UAAUC,CAAV,EAAYC,CAAZ,EAAe;AAC7B,mBAAOA,CAAC,CAACC,MAAF,GAAWF,CAAC,CAACE,MAApB;AACH,WAFD;;AAGA,cAAG,KAAKf,OAAL,CAAagB,MAAb,GAAsB,CAAzB,EAA2B;AACvBhC,YAAAA,MAAM,CAACiC,OAAP,CAAeC,IAAf,CAAoBpC,KAAK,CAACqC,WAAN,CAAkBC,YAAtC,EAAmD,KAAKpB,OAAL,CAAa,CAAb,CAAnD;AACA,iBAAKA,OAAL,GAAe,EAAf;AACH;AACJ;;AACD,aAAKF,IAAL,CAAUuB,MAAV,GAAmB,KAAnB;AACH;AACJ;AACJ;AA9CmB,CAAxB","sourceRoot":"/","sourcesContent":["//捕鱼 点击 碰撞 获取\r\nlet CONST = require(\"nfishConst\");\r\nglGame.baseclass.extend({\r\n    extends: cc.Component,\r\n\r\n    onLoad(){\r\n        this.idelStatus     = -1;     //正常状态\r\n        this.lockStatus     = 0;      //开始检索锁定状态\r\n        this.lockFrequency  = 0.15;   //锁定使用时长频率\r\n        this.hitNodeTime    = this.idelStatus;//当前状态、时长\r\n        this.logic          = require(\"nfishlogic\").getInstance();//数据中心\r\n    },\r\n\r\n    setClick(pos){\r\n        this.node.setPosition(pos);\r\n        this.hitList = [];\r\n        this.hitNodeTime  = this.lockStatus;\r\n    },\r\n    //进入碰撞检测\r\n    onCollisionEnter(other, self) {\r\n        if(other.node.group == \"fish\"){//只与鱼产生碰撞\r\n            let tagerFishLineID = Number(other.node.name);\r\n            if(this.logic.lockFishID == tagerFishLineID){\r\n                //重复锁定不处理\r\n                return;\r\n            }\r\n            this.hitList.push(tagerFishLineID);\r\n        }\r\n    },\r\n\r\n    update(dt){\r\n        if(this.hitNodeTime > this.idelStatus){\r\n            this.hitNodeTime += dt;\r\n            if(this.hitNodeTime > this.lockFrequency){\r\n                this.hitNodeTime = this.idelStatus;\r\n\r\n                if(this.hitList){\r\n                    this.hitList.sort(function (a,b) {\r\n                        return b.zIndex - a.zIndex;\r\n                    })\r\n                    if(this.hitList.length > 0){\r\n                        glGame.emitter.emit(CONST.clientEvent.lockSelfFish,this.hitList[0]);\r\n                        this.hitList = [];\r\n                    }\r\n                }\r\n                this.node.active = false;\r\n            }\r\n        }\r\n    }\r\n});\r\n"]}