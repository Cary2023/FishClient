{"version":3,"sources":["assets\\modules\\plaza\\script\\prefab\\room\\sonGame\\qznnCreate.js"],"names":["ROOM_MODE","RoomCharge_OwnerPay","RoomCharge_Average","RoomCharge_WinnerApportion","ROOM_MODE_INDEX","Action_Free","ROOM_TYPE","PAY","FREE","modeRegex","glGame","baseclass","extend","properties","turnsList","cc","Node","turnsItem","seatsList","seatsItem","nodeMask","labGrab","Label","grabList","grabItem","labBet","betList","betItem","labMode","modeList","modeItem","btnMode","Button","onLoad","gameId","scenetag","RQZNN","gameData","turnsIndex","seats","ratioIndex","grabTime","betTime","modeIndex","registerEvent","gameNet","send_msg","id","route","msg","result","console","log","initUi","start","emitter","on","createRoom","unRegisterEvent","off","onClick","name","node","click_mask","click_grabOpen","click_betOpen","click_modeOpen","click_createRoom","indexOf","click_Turns","click_Seats","click_Ratio","click_GrabTime","click_BetTime","click_Mode","initTurns","initSeats","initGrabTimes","initBetTimes","initGameMode","TurnsData","configure","Innings","key","item","instantiate","active","setToggleText","addChild","SeatsData","Seats","strData","getChildByName","getComponent","string","bankerTimes","BankerTimes","betTimes","BetTimes","costFlag","interactable","removeAllChildren","gameMode","index","replace","getModeDiamonds","diamonds","Math","ceil","Prices","length","getFixNumber","substring","Number","RentType","Seat","BetTime","BankerTime","CardTimesIndex","Inning","room","CreateRoom","reqMyGameState","then","user","suspicious","game","is_game","panel","showDialog","showService","value","value1","div","isNaN","toString","toFixed","OnDestroy"],"mappings":"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","sourceRoot":"/","sourcesContent":["const ROOM_MODE = {\r\n    RoomCharge_OwnerPay: \"房主支付：创建房间时，房主一次性支付房费$钻石。\",                             //房主支付模式\r\n    RoomCharge_Average: \"平摊房费：加入房间时，每人需支付房费$钻石。\",                                  //平摊房费模式\r\n    RoomCharge_WinnerApportion: \"赢家分摊：结算时，赢家需按赢钱比例支付房费。（总房费：$钻石）\",        //赢家分摊模式\r\n}\r\n\r\n//与服务端协商的映射关系 宏\r\nconst ROOM_MODE_INDEX = {\r\n    RoomCharge_OwnerPay: 1,             //房主支付模式\r\n    RoomCharge_Average: 2,              //平摊房费模式\r\n    RoomCharge_WinnerApportion: 3,      //赢家分摊模式\r\n    Action_Free: 4,                     //免费\r\n}\r\n\r\nconst Action_Free = \"免费：活动期间，房费全免。\";\r\n\r\nconst ROOM_TYPE = {\r\n    PAY: 1,        //付费模式\r\n    FREE: 2,       //免费模式\r\n}\r\n\r\n\r\nconst modeRegex = /\\$/gi;\r\n\r\nglGame.baseclass.extend({\r\n\r\n    properties: {\r\n\r\n        // 选择局数\r\n        turnsList: cc.Node,\r\n        turnsItem: cc.Node,\r\n\r\n        // 选择人数\r\n        seatsList: cc.Node,\r\n        seatsItem: cc.Node,\r\n\r\n        nodeMask: cc.Node,     //列表遮罩\r\n        //抢庄时间\r\n        labGrab: cc.Label,\r\n        grabList: cc.Node,\r\n        grabItem: cc.Node,\r\n\r\n        //下注时间\r\n        labBet: cc.Label,\r\n        betList: cc.Node,\r\n        betItem: cc.Node,\r\n        //房费模式\r\n        labMode: cc.Label,\r\n        modeList: cc.Node,\r\n        modeItem: cc.Node,\r\n        btnMode: cc.Button,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad() {\r\n        this.gameId = glGame.scenetag.RQZNN;\r\n        this.gameData = null;\r\n        this.turnsIndex = 0;\r\n        this.seats = 0;\r\n        this.ratioIndex = 0;\r\n        this.grabTime = 0;\r\n        this.betTime = 0;\r\n        this.modeIndex = null;\r\n        this.registerEvent();\r\n        glGame.gameNet.send_msg('http.ReqRoomGameConfig', { id: this.gameId }, (route, msg) => {\r\n            this.gameData = msg.result;\r\n            console.log(\"qznnCreate ===> 从网络获取\", this.gameData);\r\n            \r\n            this.initUi();\r\n        })\r\n    },\r\n    start() {\r\n\r\n    },\r\n\r\n    // 注册界面监听事件\r\n    registerEvent() {\r\n        glGame.emitter.on(\"roomgameupdateend\", this.createRoom, this);\r\n    },\r\n    // 销毁界面监听事件\r\n    unRegisterEvent() {\r\n        glGame.emitter.off(\"roomgameupdateend\", this);\r\n    },\r\n\r\n\r\n    onClick(name, node) {\r\n        switch (name) {\r\n            case \"mask\": this.click_mask(); break;\r\n            case \"btn_grab\": this.click_grabOpen(); break;\r\n            case \"btn_betTime\": this.click_betOpen(); break;\r\n            case \"btn_mode\": this.click_modeOpen(); break;\r\n            case \"btn_create\": this.click_createRoom(); break;\r\n            default:\r\n                if (name.indexOf(\"turns_\") > -1) this.click_Turns(name);\r\n                if (name.indexOf(\"seats_\") > -1) this.click_Seats(name);\r\n                if (name.indexOf(\"ratio_\") > -1) this.click_Ratio(name);\r\n                if (name.indexOf(\"grab_\") > -1) this.click_GrabTime(name);\r\n                if (name.indexOf(\"bet_\") > -1) this.click_BetTime(name);\r\n                if (name.indexOf(\"mode_\") > -1) this.click_Mode(name);\r\n                break;\r\n        }\r\n    },\r\n\r\n    initUi() {\r\n        this.initTurns();\r\n        this.initSeats();\r\n        this.initGrabTimes();\r\n        this.initBetTimes();\r\n        this.initGameMode();\r\n    },\r\n    // 设置牌局初始化\r\n    initTurns() {\r\n        let TurnsData = this.gameData.configure.Innings;\r\n        for (let key in TurnsData) {\r\n            let item = cc.instantiate(this.turnsItem);\r\n            item.active = true;\r\n            item.name = `turns_${key}`\r\n            this.setToggleText(item, `${TurnsData[key]}局`);\r\n            this.turnsList.addChild(item);\r\n        }\r\n    },\r\n    // 设置人数初始化\r\n    initSeats() {\r\n        let SeatsData = this.gameData.configure.Seats;\r\n        for (let key in SeatsData) {\r\n            let item = cc.instantiate(this.seatsItem);\r\n            item.active = true;\r\n            item.name = `seats_${key}`\r\n            this.setToggleText(item, `${SeatsData[key]}人`);\r\n            this.seatsList.addChild(item);\r\n        }\r\n        this.seats = SeatsData[0];\r\n    },\r\n\r\n    setToggleText(node, strData){\r\n        node.getChildByName(\"Background\").getChildByName(\"text\").getComponent(cc.Label).string = strData;\r\n        node.getChildByName(\"checkmark\").getChildByName(\"text\").getComponent(cc.Label).string = strData;\r\n    },\r\n\r\n    // 设置抢庄时间初始化\r\n    initGrabTimes() {\r\n        let bankerTimes = this.gameData.configure.BankerTimes;\r\n        for (let key in bankerTimes) {\r\n            let item = cc.instantiate(this.grabItem);\r\n            item.active = true;\r\n            item.name = `grab_${key}`\r\n            item.getChildByName(\"text\").getComponent(cc.Label).string = `${bankerTimes[key]}秒`;\r\n            this.grabList.addChild(item);\r\n        }\r\n        this.grabTime = bankerTimes[0];\r\n        this.labGrab.string = `${this.grabTime}秒`;\r\n    },\r\n\r\n    // 设置下注时间初始化\r\n    initBetTimes() {\r\n        let betTimes = this.gameData.configure.BetTimes;\r\n        for (let key in betTimes) {\r\n            let item = cc.instantiate(this.betItem);\r\n            item.active = true;\r\n            item.name = `bet_${key}`\r\n            item.getChildByName(\"text\").getComponent(cc.Label).string = `${betTimes[key]}秒`;\r\n            this.betList.addChild(item);\r\n        }\r\n        this.betTime = betTimes[0];\r\n        this.labBet.string = `${this.betTime}秒`;\r\n    },\r\n\r\n    // 设置房间模式初始化\r\n    initGameMode() {\r\n        if (this.gameData.costFlag == ROOM_TYPE.FREE) {\r\n            this.labMode.string = Action_Free;\r\n            this.modeIndex = \"Action_Free\";\r\n            this.btnMode.interactable = false;\r\n            this.btnMode.node.getChildByName(\"img_jiantou\").active = false;\r\n        } else {\r\n            this.modeList.removeAllChildren();\r\n            let gameMode = this.gameData.configure;\r\n            let index = 0;\r\n            for (let key in ROOM_MODE) {\r\n                if (gameMode[key] != 1) continue;\r\n                if (!this.modeIndex) this.modeIndex = key;\r\n                let item = cc.instantiate(this.modeItem);\r\n                item.active = true;\r\n                item.name = `mode_${key}`;\r\n                item.getChildByName(\"text\").getComponent(cc.Label).string = ROOM_MODE[key].replace(modeRegex, `${this.getModeDiamonds(key)}`);\r\n                this.modeList.addChild(item);\r\n\r\n                if(index++ == 0) {\r\n                    item.getChildByName(\"img_linesmall\").active = false;\r\n                }\r\n            }\r\n\r\n            this.labMode.string = ROOM_MODE[this.modeIndex].replace(modeRegex, `${this.getModeDiamonds(this.modeIndex)}`);\r\n        }\r\n    },\r\n\r\n    getModeDiamonds(key) {\r\n        let gameMode = this.gameData.configure,\r\n            diamonds = 0,\r\n            SeatsData = gameMode.Seats;\r\n        if (key == \"RoomCharge_Average\") {\r\n            diamonds = Math.ceil(gameMode.Prices[this.turnsIndex] / SeatsData[SeatsData.length - 1]);\r\n        } else {\r\n            diamonds = Math.ceil(gameMode.Prices[this.turnsIndex] / SeatsData[SeatsData.length - 1] * this.seats);\r\n\r\n        }\r\n        return this.getFixNumber(diamonds);\r\n    },\r\n\r\n    // \r\n    click_Turns(name) {\r\n        let string = name.substring(6);\r\n        this.turnsIndex = Number(string);\r\n        this.initGameMode();\r\n    },\r\n\r\n    click_Seats(name) {\r\n        let string = name.substring(6);\r\n        let SeatsData = this.gameData.configure.Seats;\r\n        this.seats = SeatsData[Number(string)];\r\n        this.initGameMode();\r\n    },\r\n\r\n    click_Ratio(name) {\r\n        let string = name.substring(6);\r\n        this.ratioIndex = Number(string);\r\n    },\r\n\r\n    click_GrabTime(name) {\r\n        let string = name.substring(5);\r\n        let bankerTimes = this.gameData.configure.BankerTimes;\r\n        this.grabTime = bankerTimes[Number(string)]\r\n        this.labGrab.string = `${this.grabTime}秒`\r\n        this.click_mask();\r\n    },\r\n\r\n    click_BetTime(name) {\r\n        let string = name.substring(4);\r\n        let betTimes = this.gameData.configure.BetTimes;\r\n        this.betTime = betTimes[Number(string)];\r\n        this.labBet.string = `${this.betTime}秒`\r\n        this.click_mask();\r\n\r\n    },\r\n\r\n    click_Mode(name) {\r\n        let string = name.substring(5);\r\n        this.modeIndex = string;\r\n        this.labMode.string = ROOM_MODE[this.modeIndex].replace(modeRegex, `${this.getModeDiamonds(this.modeIndex)}`);\r\n        this.click_mask();\r\n    },\r\n\r\n\r\n    click_mask() {\r\n        this.nodeMask.active = false;\r\n        this.grabList.active = false;\r\n        this.betList.active = false;\r\n        this.modeList.active = false;\r\n    },\r\n\r\n    click_grabOpen() {\r\n        this.grabList.active = !this.grabList.active;\r\n        this.nodeMask.active = this.grabList.active;\r\n\r\n        this.betList.active = false;\r\n        this.modeList.active = false;\r\n    },\r\n\r\n    click_betOpen() {\r\n        this.betList.active = !this.betList.active;\r\n        this.nodeMask.active = this.betList.active;\r\n\r\n        this.grabList.active = false;\r\n        this.modeList.active = false;\r\n    },\r\n\r\n    click_modeOpen() {\r\n        this.modeList.active = !this.modeList.active;\r\n        this.nodeMask.active = this.modeList.active;\r\n\r\n        this.grabList.active = false;\r\n        this.betList.active = false;\r\n    },\r\n\r\n    createRoom() {\r\n        let msg = {};\r\n        msg.RentType = ROOM_MODE_INDEX[this.modeIndex];\r\n        msg.Seat = this.seats;\r\n        msg.BetTime = this.betTime;\r\n        msg.BankerTime = this.grabTime;\r\n        msg.CardTimesIndex = this.ratioIndex;\r\n        let TurnsData = this.gameData.configure.Innings;\r\n        msg.Inning = TurnsData[this.turnsIndex];\r\n        glGame.room.CreateRoom(this.gameId, msg);\r\n    },\r\n    // 创建房间\r\n    click_createRoom() {\r\n        glGame.room.reqMyGameState(this.gameId).then(() => {\r\n            if ((glGame.user.suspicious == 1 && glGame.user.game == 2) || glGame.user.is_game == 2) {\r\n                glGame.panel.showDialog(\"\", \"您的账号数据异常，暂时禁止进入游戏，如有疑问，请联系客服！\", () => { glGame.panel.showService() }, () => { }, \"我知道了\", \"联系客服\")\r\n                return;\r\n            }\r\n            this.createRoom();\r\n            // if (this.gameConfig.EntranceRestrictions > glGame.user.get(\"coin\")) {\r\n            //     console.log(\"这是当前的房间限制\", this.gameConfig)\r\n            //     let string = `<color=#99C7FF>您的金币不足，该房间需要</c> <color=#ff0000> ${this.getFloat(this.gameConfig.EntranceRestrictions)}  </c><color=#99C7FF>金币才可下注，是否马上前往充值？</c>`\r\n            //     glGame.panel.showDialog(\"\", string, () => { glGame.panel.showShop(100) }, () => { }, \"取消\", \"充值\");\r\n            //     return\r\n            // }\r\n        })\r\n    },\r\n\r\n    getFixNumber(value) {\r\n        let value1 = Number(value).div(10);\r\n        value = Number(value).div(100);\r\n        if (isNaN(value)) return;\r\n        if (~~value === value) {\r\n            return value.toString();\r\n        } else if (~~value1 === value1) {\r\n            return value.toFixed(1);\r\n        } else {\r\n            return value.toFixed(2);\r\n        }\r\n    },\r\n\r\n    OnDestroy() {\r\n        this.unRegisterEvent();\r\n    },\r\n})"]}